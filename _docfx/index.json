{
  "api/MarymoorStudios.Core.CertificateExtensions.html": {
    "href": "api/MarymoorStudios.Core.CertificateExtensions.html",
    "title": "Class CertificateExtensions",
    "summary": "Class CertificateExtensions Namespace MarymoorStudios.Core Assembly MarymoorStudios.Core.dll public static class CertificateExtensions Inheritance object CertificateExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods DeleteX509Store(string, StoreLocation) Permanently delete an X509Store. public static bool DeleteX509Store(string storeName, StoreLocation location) Parameters storeName string The name of the certificate store. location StoreLocation One of the enumeration values that specifies the location of the X.509 certificate store. Returns bool True is successful, false otherwise."
  },
  "api/MarymoorStudios.Core.Collections.Trie-2.html": {
    "href": "api/MarymoorStudios.Core.Collections.Trie-2.html",
    "title": "Class Trie<TSymbol, TValue>",
    "summary": "Class Trie<TSymbol, TValue> Namespace MarymoorStudios.Core.Collections Assembly MarymoorStudios.Core.dll A trie, otherwise known as a prefix tree. public class Trie<TSymbol, TValue> where TSymbol : unmanaged Type Parameters TSymbol The type of the individual elements that form a key. TValue The type of the value. Inheritance object Trie<TSymbol, TValue> Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Remarks A trie is a map from key to value. Keys are formed by a sequence of symbols in some alphabet. Values are merely round-tripped by the data structure and are not otherwise interpreted. Keys and symbols are compared using the binary collation (i.e. memcmp). Symbols must therefore be an unmanaged type (i.e. convertible to byte). See https://en.wikipedia.org/wiki/Trie for a detailed description of the Trie data structure. Constructors Trie(int) Initializes a new instance of the Trie<TSymbol, TValue> class. public Trie(int initialCapacity = 0) Parameters initialCapacity int The (optional) initial capacity. Methods AddOrUpdate(ReadOnlySpan<TSymbol>, TValue) Add an item to the trie. if the key exists, replace the existing item. public void AddOrUpdate(ReadOnlySpan<TSymbol> key, TValue value) Parameters key ReadOnlySpan<TSymbol> The key to be added. value TValue The value to be associated with the key. TryAdd(ReadOnlySpan<TSymbol>, TValue) Add an item to the trie. public bool TryAdd(ReadOnlySpan<TSymbol> key, TValue value) Parameters key ReadOnlySpan<TSymbol> The key to be added. value TValue The value to be associated with the key. Returns bool True if the item was added, false if the key already exists in the trie. TryGetLongestPrefix(ReadOnlySpan<TSymbol>, out ReadOnlySpan<TSymbol>, out TValue) Find an item within a trie. public bool TryGetLongestPrefix(ReadOnlySpan<TSymbol> key, out ReadOnlySpan<TSymbol> prefix, out TValue value) Parameters key ReadOnlySpan<TSymbol> The key to be added. prefix ReadOnlySpan<TSymbol> The matched prefix. value TValue If key was found then the value to be associated with the key, otherwise default. Returns bool True if the item was found, false otherwise. TryGetValue(ReadOnlySpan<TSymbol>, out TValue) Find an item within a trie. public bool TryGetValue(ReadOnlySpan<TSymbol> key, out TValue value) Parameters key ReadOnlySpan<TSymbol> The key to be added. value TValue If key was found then the value to be associated with the key, otherwise default. Returns bool True if the item was found, false otherwise."
  },
  "api/MarymoorStudios.Core.Collections.html": {
    "href": "api/MarymoorStudios.Core.Collections.html",
    "title": "Namespace MarymoorStudios.Core.Collections",
    "summary": "Namespace MarymoorStudios.Core.Collections Classes Trie<TSymbol, TValue> A trie, otherwise known as a prefix tree."
  },
  "api/MarymoorStudios.Core.Contract.html": {
    "href": "api/MarymoorStudios.Core.Contract.html",
    "title": "Class Contract",
    "summary": "Class Contract Namespace MarymoorStudios.Core Assembly MarymoorStudios.Core.dll Used to check contract invariants in either Debug-only (Assert) or Debug and Release (Requires, Invariant, etc.). Contract failures will attempt to break into the debugger, will trace the error, and will throw a ContractViolationException. public static class Contract Inheritance object Contract Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods Assert(bool) [Conditional(\"DEBUG\")] public static void Assert(bool condition) Parameters condition bool Assert(bool, string) [Conditional(\"DEBUG\")] public static void Assert(bool condition, string message) Parameters condition bool message string Assert<T>(T, bool) public static T Assert<T>(T retval, bool condition) Parameters retval T condition bool Returns T Type Parameters T Assert<T>(T, bool, string) public static T Assert<T>(T retval, bool condition, string message) Parameters retval T condition bool message string Returns T Type Parameters T Fail() public static void Fail() Fail(string) public static void Fail(string message) Parameters message string FailThrow(string) public static Exception FailThrow(string message) Parameters message string Returns Exception Invariant(bool) public static void Invariant(bool condition) Parameters condition bool Invariant(bool, string) public static void Invariant(bool condition, string message) Parameters condition bool message string Requires(bool) public static void Requires(bool condition) Parameters condition bool Requires(bool, string) public static void Requires(bool condition, string message) Parameters condition bool message string Unused<T>(T) Used to annotate unused parameters to indicate that they are required for method signature contractual reasons even if they are unused in the current implementation. [Conditional(\"DEBUG\")] public static void Unused<T>(T unused) Parameters unused T The unused parameter. Type Parameters T Any type."
  },
  "api/MarymoorStudios.Core.Crc32.html": {
    "href": "api/MarymoorStudios.Core.Crc32.html",
    "title": "Class Crc32",
    "summary": "Class Crc32 Namespace MarymoorStudios.Core Assembly MarymoorStudios.Core.dll CRC Generator. public static class Crc32 Inheritance object Crc32 Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods Update(uint, ReadOnlySpan<byte>) public static uint Update(uint crc32, ReadOnlySpan<byte> span) Parameters crc32 uint span ReadOnlySpan<byte> Returns uint"
  },
  "api/MarymoorStudios.Core.EnumTraits-1.html": {
    "href": "api/MarymoorStudios.Core.EnumTraits-1.html",
    "title": "Class EnumTraits<TEnum>",
    "summary": "Class EnumTraits<TEnum> Namespace MarymoorStudios.Core Assembly MarymoorStudios.Core.dll public static class EnumTraits<TEnum> where TEnum : struct, Enum Type Parameters TEnum Inheritance object EnumTraits<TEnum> Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Properties Count public static int Count { get; } Property Value int IsEmpty public static bool IsEmpty { get; } Property Value bool MaxValue public static long MaxValue { get; } Property Value long MinValue public static long MinValue { get; } Property Value long Names public static string[] Names { get; } Property Value string[] Values public static TEnum[] Values { get; } Property Value TEnum[] Methods FromLong(long) public static TEnum FromLong(long value) Parameters value long Returns TEnum HasFlags(TEnum, TEnum) public static bool HasFlags(TEnum value, TEnum flag) Parameters value TEnum flag TEnum Returns bool IncrementWrap(TEnum, long) public static TEnum IncrementWrap(TEnum value, long increment = 1) Parameters value TEnum increment long Returns TEnum IsValid(TEnum) public static bool IsValid(TEnum value) Parameters value TEnum Returns bool ToLong(TEnum) public static long ToLong(TEnum value) Parameters value TEnum Returns long"
  },
  "api/MarymoorStudios.Core.GcNotify.html": {
    "href": "api/MarymoorStudios.Core.GcNotify.html",
    "title": "Class GcNotify",
    "summary": "Class GcNotify Namespace MarymoorStudios.Core Assembly MarymoorStudios.Core.dll Notifies when garbage collection occurs. public abstract class GcNotify Inheritance object GcNotify Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors GcNotify() protected GcNotify() Methods OnGC(int) Called when a collection occurs. protected abstract void OnGC(int generation) Parameters generation int The generation that was collected."
  },
  "api/MarymoorStudios.Core.Linear.html": {
    "href": "api/MarymoorStudios.Core.Linear.html",
    "title": "Class Linear",
    "summary": "Class Linear Namespace MarymoorStudios.Core Assembly MarymoorStudios.Core.dll public static class Linear Inheritance object Linear Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods Move<T>(ref T?) Performs a linear transfer of a capability from the input l-value to the return. public static T? Move<T>(ref T? t) Parameters t T The l-value containing the capability (or null) to be transferred. Returns T The unowned capability (to be assigned to be transferred to a new owner). Type Parameters T The type of the capability."
  },
  "api/MarymoorStudios.Core.LinqExtensions.html": {
    "href": "api/MarymoorStudios.Core.LinqExtensions.html",
    "title": "Class LinqExtensions",
    "summary": "Class LinqExtensions Namespace MarymoorStudios.Core Assembly MarymoorStudios.Core.dll public static class LinqExtensions Inheritance object LinqExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods StringJoin<T>(IEnumerable<T>, string) Joins the elements of a sequence into a single string value. public static string StringJoin<T>(this IEnumerable<T> source, string separator = \" \") Parameters source IEnumerable<T> The source sequence. separator string A string to separate items in the resulting concatenation. Returns string A concatenation of the string form of all elements, separated by separator. Type Parameters T The item type of the source. WithIndex<T>(IEnumerable<T>) Projects an existing sequence along with its 0-based indexes. public static IEnumerable<(T, int)> WithIndex<T>(this IEnumerable<T> source) Parameters source IEnumerable<T> The source sequence. Returns IEnumerable<(T, int)> The same sequence in the same order with indexes. Type Parameters T The item type of the source."
  },
  "api/MarymoorStudios.Core.MathExtensions.html": {
    "href": "api/MarymoorStudios.Core.MathExtensions.html",
    "title": "Class MathExtensions",
    "summary": "Class MathExtensions Namespace MarymoorStudios.Core Assembly MarymoorStudios.Core.dll public static class MathExtensions Inheritance object MathExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods IncrementWrap(long, long, long) public static long IncrementWrap(this long value, long max, long increment = 1) Parameters value long max long increment long Returns long"
  },
  "api/MarymoorStudios.Core.MemoryPool-1.html": {
    "href": "api/MarymoorStudios.Core.MemoryPool-1.html",
    "title": "Class MemoryPool<T>",
    "summary": "Class MemoryPool<T> Namespace MarymoorStudios.Core Assembly MarymoorStudios.Core.dll A pool of memory blocks. public abstract class MemoryPool<T> : IDisposable where T : unmanaged Type Parameters T Inheritance object MemoryPool<T> Implements IDisposable Derived SlabMemoryPool<T> Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors MemoryPool() protected MemoryPool() Properties MaxSize Returns the maximum buffer size supported by this pool. public abstract int MaxSize { get; } Property Value int Remarks The buffer size is the maximum number of T elements that a memory can contain. Note: This value must be constant for the lifetime of the pool. Methods Dispose() public void Dispose() Dispose(bool) Implements standard Dispose-pattern. protected abstract void Dispose(bool disposing) Parameters disposing bool True if disposing, false if finalizing. Remarks When disposing is true then managed resources should be released. When disposing is false then the object has already gone through garbage collection and only native resources should be touched. ~MemoryPool() protected ~MemoryPool() GetMemory() Returns Memory<T> of size MaxSize. public abstract OwnedMem<T> GetMemory() Returns OwnedMem<T> GetMemory(int) Returns Memory<T> of size size. public OwnedMem<T> GetMemory(int size) Parameters size int Returns OwnedMem<T>"
  },
  "api/MarymoorStudios.Core.MurmurHash3.html": {
    "href": "api/MarymoorStudios.Core.MurmurHash3.html",
    "title": "Class MurmurHash3",
    "summary": "Class MurmurHash3 Namespace MarymoorStudios.Core Assembly MarymoorStudios.Core.dll MurmurHash3 for x64 (Little Endian). public static class MurmurHash3 Inheritance object MurmurHash3 Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Remarks Reference: https://en.wikipedia.org/wiki/MurmurHash Methods Hash128(bool, UInt128) MurmurHash3 128-bit implementation. public static UInt128 Hash128(bool value, UInt128 seed) Parameters value bool The data to hash. seed UInt128 The seed to initialize with. Returns UInt128 The 128-bit hash. Hash128(ReadOnlySpan<byte>, UInt128) MurmurHash3 128-bit implementation. public static UInt128 Hash128(ReadOnlySpan<byte> span, UInt128 seed) Parameters span ReadOnlySpan<byte> The data to hash. seed UInt128 The seed to initialize with. Returns UInt128 The 128-bit hash. Hash128(string, UInt128) MurmurHash3 128-bit implementation. public static UInt128 Hash128(string value, UInt128 seed) Parameters value string The data to hash. seed UInt128 The seed to initialize with. Returns UInt128 The 128-bit hash. Hash128<T>(ReadOnlySpan<T>, UInt128) MurmurHash3 128-bit implementation. public static UInt128 Hash128<T>(ReadOnlySpan<T> value, UInt128 seed) where T : unmanaged Parameters value ReadOnlySpan<T> The data to hash. seed UInt128 The seed to initialize with. Returns UInt128 The 128-bit hash. Type Parameters T Hash128<T>(T, UInt128) MurmurHash3 128-bit implementation. public static UInt128 Hash128<T>(T value, UInt128 seed) where T : unmanaged Parameters value T The data to hash. seed UInt128 The seed to initialize with. Returns UInt128 The 128-bit hash. Type Parameters T Hash32(bool, uint) MurmurHash3 32-bit implementation. public static uint Hash32(bool value, uint seed) Parameters value bool The data to hash. seed uint The seed to initialize with. Returns uint The 32-bit hash. Hash32(ReadOnlySpan<byte>, uint) MurmurHash3 32-bit implementation. public static uint Hash32(ReadOnlySpan<byte> span, uint seed) Parameters span ReadOnlySpan<byte> The data to hash. seed uint The seed to initialize with. Returns uint The 32-bit hash. Hash32(string, uint) MurmurHash3 32-bit implementation. public static uint Hash32(string value, uint seed) Parameters value string The data to hash. seed uint The seed to initialize with. Returns uint The 32-bit hash. Hash32<T>(ReadOnlySpan<T>, uint) MurmurHash3 32-bit implementation. public static uint Hash32<T>(ReadOnlySpan<T> value, uint seed) where T : unmanaged Parameters value ReadOnlySpan<T> The data to hash. seed uint The seed to initialize with. Returns uint The 32-bit hash. Type Parameters T Hash32<T>(T, uint) MurmurHash3 32-bit implementation. public static uint Hash32<T>(T value, uint seed) where T : unmanaged Parameters value T The data to hash. seed uint The seed to initialize with. Returns uint The 32-bit hash. Type Parameters T Hash64(bool, ulong) MurmurHash3 64-bit implementation. public static ulong Hash64(bool value, ulong seed) Parameters value bool The data to hash. seed ulong The seed to initialize with. Returns ulong The 64-bit hash. Hash64(ReadOnlySpan<byte>, ulong) MurmurHash3 64-bit implementation. public static ulong Hash64(ReadOnlySpan<byte> span, ulong seed) Parameters span ReadOnlySpan<byte> The data to hash. seed ulong The seed to initialize with. Returns ulong The 64-bit hash. Hash64(string, ulong) MurmurHash3 64-bit implementation. public static ulong Hash64(string value, ulong seed) Parameters value string The data to hash. seed ulong The seed to initialize with. Returns ulong The 64-bit hash. Hash64<T>(ReadOnlySpan<T>, ulong) MurmurHash3 64-bit implementation. public static ulong Hash64<T>(ReadOnlySpan<T> value, ulong seed) where T : unmanaged Parameters value ReadOnlySpan<T> The data to hash. seed ulong The seed to initialize with. Returns ulong The 64-bit hash. Type Parameters T Hash64<T>(T, ulong) MurmurHash3 64-bit implementation. public static ulong Hash64<T>(T value, ulong seed) where T : unmanaged Parameters value T The data to hash. seed ulong The seed to initialize with. Returns ulong The 64-bit hash. Type Parameters T"
  },
  "api/MarymoorStudios.Core.OwnedMem-1.html": {
    "href": "api/MarymoorStudios.Core.OwnedMem-1.html",
    "title": "Struct OwnedMem<T>",
    "summary": "Struct OwnedMem<T> Namespace MarymoorStudios.Core Assembly MarymoorStudios.Core.dll A capability for the exclusive ownership rights to an underlying memory. public struct OwnedMem<T> : IDisposable where T : unmanaged Type Parameters T The element type. Implements IDisposable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Remarks This is a linear type. These rights can be destroyed (i.e. disposed) or transferred to another party, but they can't be copied or duplicated. Constructors OwnedMem(MemoryManager<T>) Construct a new ownership capability from an existing (potentially pool-backed) memory object. public OwnedMem(MemoryManager<T> memory) Parameters memory MemoryManager<T> The memory whose ownership is irrevocably transferred to this new OwnedMem<T>. OwnedMem(Memory<T>) Construct a new ownership capability from an existing (potentially pool-backed) memory object. public OwnedMem(Memory<T> memory) Parameters memory Memory<T> The memory whose ownership is irrevocably transferred to this new OwnedMem<T>. Properties IsEmpty Returns true if Length is 0. public readonly bool IsEmpty { get; } Property Value bool Length The number of items in the memory. public readonly int Length { get; } Property Value int Memory Returns a borrowed reference to the underlying memory. public readonly Memory<T> Memory { get; } Property Value Memory<T> Span Returns a borrowed reference to the underlying memory's span. public readonly Span<T> Span { get; } Property Value Span<T> Methods Dispose() Dispose pattern. public void Dispose() Slice(int) Forms a slice out of the given memory, beginning at 'start'. public OwnedMem<T> Slice(int start) Parameters start int The index at which to begin this slice. Returns OwnedMem<T> Remarks REQUIRES: the specified start index is in range (<0 or >Length). Slice(int, int) Forms a slice out of the given memory, beginning at 'start', of given length public OwnedMem<T> Slice(int start, int length) Parameters start int The index at which to begin this slice. length int The desired length for the slice (exclusive). Returns OwnedMem<T> Remarks REQUIRES: specified start or end index is in range (<0 or >Length). Operators implicit operator Memory<T>(OwnedMem<T>) Returns a borrowed reference to the underlying memory. public static implicit operator Memory<T>(OwnedMem<T> owned) Parameters owned OwnedMem<T> Returns Memory<T> implicit operator ReadOnlyMemory<T>(OwnedMem<T>) Returns a borrowed reference to the underlying memory. public static implicit operator ReadOnlyMemory<T>(OwnedMem<T> owned) Parameters owned OwnedMem<T> Returns ReadOnlyMemory<T>"
  },
  "api/MarymoorStudios.Core.Promises.AResolver.html": {
    "href": "api/MarymoorStudios.Core.Promises.AResolver.html",
    "title": "Class AResolver",
    "summary": "Class AResolver Namespace MarymoorStudios.Core.Promises Assembly MarymoorStudios.Core.Promises.dll Abstract base class for Resolver<T>. public abstract class AResolver Inheritance object AResolver Derived Resolver<T> Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors AResolver() protected AResolver() Properties IsResolved True if the resolver is in a resolved state (either success or failure). public abstract bool IsResolved { get; } Property Value bool ValueType For a Resolver<T>, returns typeof(T). public abstract Type ValueType { get; } Property Value Type Methods AppendOne(Turn) Registers a turn to be scheduled when this resolver becomes resolved. public abstract void AppendOne(Turn turn) Parameters turn Turn The turn to be scheduled. Remarks If this resolver is already resolved then turn will be scheduled immediately."
  },
  "api/MarymoorStudios.Core.Promises.AutoResetEventAsync.html": {
    "href": "api/MarymoorStudios.Core.Promises.AutoResetEventAsync.html",
    "title": "Class AutoResetEventAsync",
    "summary": "Class AutoResetEventAsync Namespace MarymoorStudios.Core.Promises Assembly MarymoorStudios.Core.Promises.dll An eventual auto-reset event. public sealed class AutoResetEventAsync Inheritance object AutoResetEventAsync Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors AutoResetEventAsync(bool) Initializes a new AutoResetEventAsync. public AutoResetEventAsync(bool initialState = false) Parameters initialState bool true if the event is initially signaled. Properties IsSignaled True if the event is in the signaled state. public bool IsSignaled { get; } Property Value bool Methods Signal(Exception?) Signals the event. public void Signal(Exception? error = null) Parameters error Exception An optional error to signal with. Remarks If there are any waiters they are resolved and the event remains in the unsignaled (i.e. the event is pulsed). If there are no waiters then the event is placed in a signaled state. The next waiter to arrive will be resolved immediately and the event will auto-reset at that time. WaitAsync() Waits until the event is in a signaled state. public Promise WaitAsync() Returns Promise Resolves when the event is signaled. Remarks Resolves immediately if the event is already in a signaled state. The signaled state is then auto-reset to unsignaled."
  },
  "api/MarymoorStudios.Core.Promises.CommandLine.ArgumentAttribute.html": {
    "href": "api/MarymoorStudios.Core.Promises.CommandLine.ArgumentAttribute.html",
    "title": "Class ArgumentAttribute",
    "summary": "Class ArgumentAttribute Namespace MarymoorStudios.Core.Promises.CommandLine Assembly MarymoorStudios.Core.Promises.CommandLine.dll Defines a command line command group. [AttributeUsage(AttributeTargets.Parameter)] public sealed class ArgumentAttribute : Attribute Inheritance object Attribute ArgumentAttribute Inherited Members Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.Equals(object) Attribute.GetHashCode() Attribute.Match(object) Attribute.IsDefaultAttribute() Attribute.TypeId object.GetType() object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors ArgumentAttribute(string, string) Constructor. public ArgumentAttribute(string description = \"\", string name = \"\") Parameters description string See Description. name string See Name. Properties Description Help text that appears with --help. public string Description { get; set; } Property Value string Name Name used on the command line to activate the group. public string Name { get; set; } Property Value string"
  },
  "api/MarymoorStudios.Core.Promises.CommandLine.CommandAttribute.html": {
    "href": "api/MarymoorStudios.Core.Promises.CommandLine.CommandAttribute.html",
    "title": "Class CommandAttribute",
    "summary": "Class CommandAttribute Namespace MarymoorStudios.Core.Promises.CommandLine Assembly MarymoorStudios.Core.Promises.CommandLine.dll Defines a command line command group. [AttributeUsage(AttributeTargets.Method)] public sealed class CommandAttribute : Attribute Inheritance object Attribute CommandAttribute Inherited Members Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.Equals(object) Attribute.GetHashCode() Attribute.Match(object) Attribute.IsDefaultAttribute() Attribute.TypeId object.GetType() object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors CommandAttribute(string, string) Constructor. public CommandAttribute(string description = \"\", string name = \"\") Parameters description string See Description. name string See Name. Properties Description Help text that appears with --help. public string Description { get; set; } Property Value string Name Name used on the command line to activate the group. public string Name { get; set; } Property Value string"
  },
  "api/MarymoorStudios.Core.Promises.CommandLine.CommandGroupAttribute.html": {
    "href": "api/MarymoorStudios.Core.Promises.CommandLine.CommandGroupAttribute.html",
    "title": "Class CommandGroupAttribute",
    "summary": "Class CommandGroupAttribute Namespace MarymoorStudios.Core.Promises.CommandLine Assembly MarymoorStudios.Core.Promises.CommandLine.dll Defines a command line command group. [AttributeUsage(AttributeTargets.Class)] public sealed class CommandGroupAttribute : Attribute Inheritance object Attribute CommandGroupAttribute Inherited Members Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.Equals(object) Attribute.GetHashCode() Attribute.Match(object) Attribute.IsDefaultAttribute() Attribute.TypeId object.GetType() object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors CommandGroupAttribute(string, string) Constructor. public CommandGroupAttribute(string description = \"\", string name = \"\") Parameters description string See Description. name string See Name. Properties Description Help text that appears with --help. public string Description { get; set; } Property Value string Name Name used on the command line to activate the group. public string Name { get; set; } Property Value string"
  },
  "api/MarymoorStudios.Core.Promises.CommandLine.CommandLineBuilderExtensions.html": {
    "href": "api/MarymoorStudios.Core.Promises.CommandLine.CommandLineBuilderExtensions.html",
    "title": "Class CommandLineBuilderExtensions",
    "summary": "Class CommandLineBuilderExtensions Namespace MarymoorStudios.Core.Promises.CommandLine Assembly MarymoorStudios.Core.Promises.CommandLine.dll Extensions for CommandLineBuilder. public static class CommandLineBuilderExtensions Inheritance object CommandLineBuilderExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods UseLogging(CommandLineBuilder, ILoggerFactory) Adds a ILoggerFactory as a binding context service. public static CommandLineBuilder UseLogging(this CommandLineBuilder builder, ILoggerFactory loggingFactory) Parameters builder CommandLineBuilder The builder. loggingFactory ILoggerFactory The logger factory singleton to export. Returns CommandLineBuilder UseMarymoorAuthentication(CommandLineBuilder) Adds Identity management. public static CommandLineBuilder UseMarymoorAuthentication(this CommandLineBuilder builder) Parameters builder CommandLineBuilder The builder. Returns CommandLineBuilder UseMemoryPool(CommandLineBuilder, MemoryPool<byte>) Adds a MemoryPool<T> as a binding context service. public static CommandLineBuilder UseMemoryPool(this CommandLineBuilder builder, MemoryPool<byte> pool) Parameters builder CommandLineBuilder The builder. pool MemoryPool<byte> The memory pool singleton to export. Returns CommandLineBuilder"
  },
  "api/MarymoorStudios.Core.Promises.CommandLine.CommandLineExtensions.html": {
    "href": "api/MarymoorStudios.Core.Promises.CommandLine.CommandLineExtensions.html",
    "title": "Class CommandLineExtensions",
    "summary": "Class CommandLineExtensions Namespace MarymoorStudios.Core.Promises.CommandLine Assembly MarymoorStudios.Core.Promises.CommandLine.dll Extends System.CommandLine with support for Promise-based handlers. public static class CommandLineExtensions Inheritance object CommandLineExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods SetHandler(Command, Func<Promise>) Sets a command's handler based on a Func<TResult>. public static void SetHandler(this Command command, Func<Promise> handle) Parameters command Command handle Func<Promise> SetHandler(Command, Func<InvocationContext, Promise>) Sets a command's handler based on a Func<T, TResult>. public static void SetHandler(this Command command, Func<InvocationContext, Promise> handle) Parameters command Command handle Func<InvocationContext, Promise> SetHandler<T>(Command, Func<T, Promise>, IValueDescriptor<T>) Sets a command's handler based on a Func<T, TResult>. public static void SetHandler<T>(this Command command, Func<T, Promise> handle, IValueDescriptor<T> symbol) Parameters command Command handle Func<T, Promise> symbol IValueDescriptor<T> Type Parameters T SetHandler<T1, T2>(Command, Func<T1, T2, Promise>, IValueDescriptor<T1>, IValueDescriptor<T2>) Sets a command's handler based on a Func<T1, T2, TResult>. public static void SetHandler<T1, T2>(this Command command, Func<T1, T2, Promise> handle, IValueDescriptor<T1> symbol1, IValueDescriptor<T2> symbol2) Parameters command Command handle Func<T1, T2, Promise> symbol1 IValueDescriptor<T1> symbol2 IValueDescriptor<T2> Type Parameters T1 T2 SetHandler<T1, T2, T3>(Command, Func<T1, T2, T3, Promise>, IValueDescriptor<T1>, IValueDescriptor<T2>, IValueDescriptor<T3>) Sets a command's handler based on a Func<T1, T2, T3, TResult>. public static void SetHandler<T1, T2, T3>(this Command command, Func<T1, T2, T3, Promise> handle, IValueDescriptor<T1> symbol1, IValueDescriptor<T2> symbol2, IValueDescriptor<T3> symbol3) Parameters command Command handle Func<T1, T2, T3, Promise> symbol1 IValueDescriptor<T1> symbol2 IValueDescriptor<T2> symbol3 IValueDescriptor<T3> Type Parameters T1 T2 T3 SetHandler<T1, T2, T3, T4>(Command, Func<T1, T2, T3, T4, Promise>, IValueDescriptor<T1>, IValueDescriptor<T2>, IValueDescriptor<T3>, IValueDescriptor<T4>) Sets a command's handler based on a Func<T1, T2, T3, T4, TResult>. public static void SetHandler<T1, T2, T3, T4>(this Command command, Func<T1, T2, T3, T4, Promise> handle, IValueDescriptor<T1> symbol1, IValueDescriptor<T2> symbol2, IValueDescriptor<T3> symbol3, IValueDescriptor<T4> symbol4) Parameters command Command handle Func<T1, T2, T3, T4, Promise> symbol1 IValueDescriptor<T1> symbol2 IValueDescriptor<T2> symbol3 IValueDescriptor<T3> symbol4 IValueDescriptor<T4> Type Parameters T1 T2 T3 T4 SetHandler<T1, T2, T3, T4, T5>(Command, Func<T1, T2, T3, T4, T5, Promise>, IValueDescriptor<T1>, IValueDescriptor<T2>, IValueDescriptor<T3>, IValueDescriptor<T4>, IValueDescriptor<T5>) Sets a command's handler based on a Func<T1, T2, T3, T4, T5, TResult>. public static void SetHandler<T1, T2, T3, T4, T5>(this Command command, Func<T1, T2, T3, T4, T5, Promise> handle, IValueDescriptor<T1> symbol1, IValueDescriptor<T2> symbol2, IValueDescriptor<T3> symbol3, IValueDescriptor<T4> symbol4, IValueDescriptor<T5> symbol5) Parameters command Command handle Func<T1, T2, T3, T4, T5, Promise> symbol1 IValueDescriptor<T1> symbol2 IValueDescriptor<T2> symbol3 IValueDescriptor<T3> symbol4 IValueDescriptor<T4> symbol5 IValueDescriptor<T5> Type Parameters T1 T2 T3 T4 T5 SetHandler<T1, T2, T3, T4, T5, T6>(Command, Func<T1, T2, T3, T4, T5, T6, Promise>, IValueDescriptor<T1>, IValueDescriptor<T2>, IValueDescriptor<T3>, IValueDescriptor<T4>, IValueDescriptor<T5>, IValueDescriptor<T6>) Sets a command's handler based on a Func<T1, T2, T3, T4, T5, T6, TResult>. public static void SetHandler<T1, T2, T3, T4, T5, T6>(this Command command, Func<T1, T2, T3, T4, T5, T6, Promise> handle, IValueDescriptor<T1> symbol1, IValueDescriptor<T2> symbol2, IValueDescriptor<T3> symbol3, IValueDescriptor<T4> symbol4, IValueDescriptor<T5> symbol5, IValueDescriptor<T6> symbol6) Parameters command Command handle Func<T1, T2, T3, T4, T5, T6, Promise> symbol1 IValueDescriptor<T1> symbol2 IValueDescriptor<T2> symbol3 IValueDescriptor<T3> symbol4 IValueDescriptor<T4> symbol5 IValueDescriptor<T5> symbol6 IValueDescriptor<T6> Type Parameters T1 T2 T3 T4 T5 T6 SetHandler<T1, T2, T3, T4, T5, T6, T7>(Command, Func<T1, T2, T3, T4, T5, T6, T7, Promise>, IValueDescriptor<T1>, IValueDescriptor<T2>, IValueDescriptor<T3>, IValueDescriptor<T4>, IValueDescriptor<T5>, IValueDescriptor<T6>, IValueDescriptor<T7>) Sets a command's handler based on a Func<T1, T2, T3, T4, T5, T6, T7, TResult>. public static void SetHandler<T1, T2, T3, T4, T5, T6, T7>(this Command command, Func<T1, T2, T3, T4, T5, T6, T7, Promise> handle, IValueDescriptor<T1> symbol1, IValueDescriptor<T2> symbol2, IValueDescriptor<T3> symbol3, IValueDescriptor<T4> symbol4, IValueDescriptor<T5> symbol5, IValueDescriptor<T6> symbol6, IValueDescriptor<T7> symbol7) Parameters command Command handle Func<T1, T2, T3, T4, T5, T6, T7, Promise> symbol1 IValueDescriptor<T1> symbol2 IValueDescriptor<T2> symbol3 IValueDescriptor<T3> symbol4 IValueDescriptor<T4> symbol5 IValueDescriptor<T5> symbol6 IValueDescriptor<T6> symbol7 IValueDescriptor<T7> Type Parameters T1 T2 T3 T4 T5 T6 T7 SetHandler<T1, T2, T3, T4, T5, T6, T7, T8>(Command, Func<T1, T2, T3, T4, T5, T6, T7, T8, Promise>, IValueDescriptor<T1>, IValueDescriptor<T2>, IValueDescriptor<T3>, IValueDescriptor<T4>, IValueDescriptor<T5>, IValueDescriptor<T6>, IValueDescriptor<T7>, IValueDescriptor<T8>) Sets a command's handler based on a Func<T1, T2, T3, T4, T5, T6, T7, T8, TResult>. public static void SetHandler<T1, T2, T3, T4, T5, T6, T7, T8>(this Command command, Func<T1, T2, T3, T4, T5, T6, T7, T8, Promise> handle, IValueDescriptor<T1> symbol1, IValueDescriptor<T2> symbol2, IValueDescriptor<T3> symbol3, IValueDescriptor<T4> symbol4, IValueDescriptor<T5> symbol5, IValueDescriptor<T6> symbol6, IValueDescriptor<T7> symbol7, IValueDescriptor<T8> symbol8) Parameters command Command handle Func<T1, T2, T3, T4, T5, T6, T7, T8, Promise> symbol1 IValueDescriptor<T1> symbol2 IValueDescriptor<T2> symbol3 IValueDescriptor<T3> symbol4 IValueDescriptor<T4> symbol5 IValueDescriptor<T5> symbol6 IValueDescriptor<T6> symbol7 IValueDescriptor<T7> symbol8 IValueDescriptor<T8> Type Parameters T1 T2 T3 T4 T5 T6 T7 T8"
  },
  "api/MarymoorStudios.Core.Promises.CommandLine.CommandLineExtensionsT.html": {
    "href": "api/MarymoorStudios.Core.Promises.CommandLine.CommandLineExtensionsT.html",
    "title": "Class CommandLineExtensionsT",
    "summary": "Class CommandLineExtensionsT Namespace MarymoorStudios.Core.Promises.CommandLine Assembly MarymoorStudios.Core.Promises.CommandLine.dll Extends System.CommandLine with support for Promise-based handlers. public static class CommandLineExtensionsT Inheritance object CommandLineExtensionsT Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods SetHandler(Command, Func<Promise<int>>) Sets a command's handler based on a Func<TResult>. public static void SetHandler(this Command command, Func<Promise<int>> handle) Parameters command Command handle Func<Promise<int>> SetHandler(Command, Func<InvocationContext, Promise<int>>) Sets a command's handler based on a Func<T, TResult>. public static void SetHandler(this Command command, Func<InvocationContext, Promise<int>> handle) Parameters command Command handle Func<InvocationContext, Promise<int>> SetHandler<T>(Command, Func<T, Promise<int>>, IValueDescriptor<T>) Sets a command's handler based on a Func<T, TResult>. public static void SetHandler<T>(this Command command, Func<T, Promise<int>> handle, IValueDescriptor<T> symbol) Parameters command Command handle Func<T, Promise<int>> symbol IValueDescriptor<T> Type Parameters T SetHandler<T1, T2>(Command, Func<T1, T2, Promise<int>>, IValueDescriptor<T1>, IValueDescriptor<T2>) Sets a command's handler based on a Func<T1, T2, TResult>. public static void SetHandler<T1, T2>(this Command command, Func<T1, T2, Promise<int>> handle, IValueDescriptor<T1> symbol1, IValueDescriptor<T2> symbol2) Parameters command Command handle Func<T1, T2, Promise<int>> symbol1 IValueDescriptor<T1> symbol2 IValueDescriptor<T2> Type Parameters T1 T2 SetHandler<T1, T2, T3>(Command, Func<T1, T2, T3, Promise<int>>, IValueDescriptor<T1>, IValueDescriptor<T2>, IValueDescriptor<T3>) Sets a command's handler based on a Func<T1, T2, T3, TResult>. public static void SetHandler<T1, T2, T3>(this Command command, Func<T1, T2, T3, Promise<int>> handle, IValueDescriptor<T1> symbol1, IValueDescriptor<T2> symbol2, IValueDescriptor<T3> symbol3) Parameters command Command handle Func<T1, T2, T3, Promise<int>> symbol1 IValueDescriptor<T1> symbol2 IValueDescriptor<T2> symbol3 IValueDescriptor<T3> Type Parameters T1 T2 T3 SetHandler<T1, T2, T3, T4>(Command, Func<T1, T2, T3, T4, Promise<int>>, IValueDescriptor<T1>, IValueDescriptor<T2>, IValueDescriptor<T3>, IValueDescriptor<T4>) Sets a command's handler based on a Func<T1, T2, T3, T4, TResult>. public static void SetHandler<T1, T2, T3, T4>(this Command command, Func<T1, T2, T3, T4, Promise<int>> handle, IValueDescriptor<T1> symbol1, IValueDescriptor<T2> symbol2, IValueDescriptor<T3> symbol3, IValueDescriptor<T4> symbol4) Parameters command Command handle Func<T1, T2, T3, T4, Promise<int>> symbol1 IValueDescriptor<T1> symbol2 IValueDescriptor<T2> symbol3 IValueDescriptor<T3> symbol4 IValueDescriptor<T4> Type Parameters T1 T2 T3 T4 SetHandler<T1, T2, T3, T4, T5>(Command, Func<T1, T2, T3, T4, T5, Promise<int>>, IValueDescriptor<T1>, IValueDescriptor<T2>, IValueDescriptor<T3>, IValueDescriptor<T4>, IValueDescriptor<T5>) Sets a command's handler based on a Func<T1, T2, T3, T4, T5, TResult>. public static void SetHandler<T1, T2, T3, T4, T5>(this Command command, Func<T1, T2, T3, T4, T5, Promise<int>> handle, IValueDescriptor<T1> symbol1, IValueDescriptor<T2> symbol2, IValueDescriptor<T3> symbol3, IValueDescriptor<T4> symbol4, IValueDescriptor<T5> symbol5) Parameters command Command handle Func<T1, T2, T3, T4, T5, Promise<int>> symbol1 IValueDescriptor<T1> symbol2 IValueDescriptor<T2> symbol3 IValueDescriptor<T3> symbol4 IValueDescriptor<T4> symbol5 IValueDescriptor<T5> Type Parameters T1 T2 T3 T4 T5 SetHandler<T1, T2, T3, T4, T5, T6>(Command, Func<T1, T2, T3, T4, T5, T6, Promise<int>>, IValueDescriptor<T1>, IValueDescriptor<T2>, IValueDescriptor<T3>, IValueDescriptor<T4>, IValueDescriptor<T5>, IValueDescriptor<T6>) Sets a command's handler based on a Func<T1, T2, T3, T4, T5, T6, TResult>. public static void SetHandler<T1, T2, T3, T4, T5, T6>(this Command command, Func<T1, T2, T3, T4, T5, T6, Promise<int>> handle, IValueDescriptor<T1> symbol1, IValueDescriptor<T2> symbol2, IValueDescriptor<T3> symbol3, IValueDescriptor<T4> symbol4, IValueDescriptor<T5> symbol5, IValueDescriptor<T6> symbol6) Parameters command Command handle Func<T1, T2, T3, T4, T5, T6, Promise<int>> symbol1 IValueDescriptor<T1> symbol2 IValueDescriptor<T2> symbol3 IValueDescriptor<T3> symbol4 IValueDescriptor<T4> symbol5 IValueDescriptor<T5> symbol6 IValueDescriptor<T6> Type Parameters T1 T2 T3 T4 T5 T6 SetHandler<T1, T2, T3, T4, T5, T6, T7>(Command, Func<T1, T2, T3, T4, T5, T6, T7, Promise<int>>, IValueDescriptor<T1>, IValueDescriptor<T2>, IValueDescriptor<T3>, IValueDescriptor<T4>, IValueDescriptor<T5>, IValueDescriptor<T6>, IValueDescriptor<T7>) Sets a command's handler based on a Func<T1, T2, T3, T4, T5, T6, T7, TResult>. public static void SetHandler<T1, T2, T3, T4, T5, T6, T7>(this Command command, Func<T1, T2, T3, T4, T5, T6, T7, Promise<int>> handle, IValueDescriptor<T1> symbol1, IValueDescriptor<T2> symbol2, IValueDescriptor<T3> symbol3, IValueDescriptor<T4> symbol4, IValueDescriptor<T5> symbol5, IValueDescriptor<T6> symbol6, IValueDescriptor<T7> symbol7) Parameters command Command handle Func<T1, T2, T3, T4, T5, T6, T7, Promise<int>> symbol1 IValueDescriptor<T1> symbol2 IValueDescriptor<T2> symbol3 IValueDescriptor<T3> symbol4 IValueDescriptor<T4> symbol5 IValueDescriptor<T5> symbol6 IValueDescriptor<T6> symbol7 IValueDescriptor<T7> Type Parameters T1 T2 T3 T4 T5 T6 T7 SetHandler<T1, T2, T3, T4, T5, T6, T7, T8>(Command, Func<T1, T2, T3, T4, T5, T6, T7, T8, Promise<int>>, IValueDescriptor<T1>, IValueDescriptor<T2>, IValueDescriptor<T3>, IValueDescriptor<T4>, IValueDescriptor<T5>, IValueDescriptor<T6>, IValueDescriptor<T7>, IValueDescriptor<T8>) Sets a command's handler based on a Func<T1, T2, T3, T4, T5, T6, T7, T8, TResult>. public static void SetHandler<T1, T2, T3, T4, T5, T6, T7, T8>(this Command command, Func<T1, T2, T3, T4, T5, T6, T7, T8, Promise<int>> handle, IValueDescriptor<T1> symbol1, IValueDescriptor<T2> symbol2, IValueDescriptor<T3> symbol3, IValueDescriptor<T4> symbol4, IValueDescriptor<T5> symbol5, IValueDescriptor<T6> symbol6, IValueDescriptor<T7> symbol7, IValueDescriptor<T8> symbol8) Parameters command Command handle Func<T1, T2, T3, T4, T5, T6, T7, T8, Promise<int>> symbol1 IValueDescriptor<T1> symbol2 IValueDescriptor<T2> symbol3 IValueDescriptor<T3> symbol4 IValueDescriptor<T4> symbol5 IValueDescriptor<T5> symbol6 IValueDescriptor<T6> symbol7 IValueDescriptor<T7> symbol8 IValueDescriptor<T8> Type Parameters T1 T2 T3 T4 T5 T6 T7 T8"
  },
  "api/MarymoorStudios.Core.Promises.CommandLine.OptionAttribute.html": {
    "href": "api/MarymoorStudios.Core.Promises.CommandLine.OptionAttribute.html",
    "title": "Class OptionAttribute",
    "summary": "Class OptionAttribute Namespace MarymoorStudios.Core.Promises.CommandLine Assembly MarymoorStudios.Core.Promises.CommandLine.dll Defines a command line command group. [AttributeUsage(AttributeTargets.Parameter)] public sealed class OptionAttribute : Attribute Inheritance object Attribute OptionAttribute Inherited Members Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.Equals(object) Attribute.GetHashCode() Attribute.Match(object) Attribute.IsDefaultAttribute() Attribute.TypeId object.GetType() object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors OptionAttribute(string, string) Constructor. public OptionAttribute(string description = \"\", string name = \"\") Parameters description string See Description. name string See Name. Properties Alias A comma separated list of aliases. public string Alias { get; set; } Property Value string AllowMultiple If true, then multiple arguments are allowed per option token. public bool AllowMultiple { get; set; } Property Value bool Description Help text that appears with --help. public string Description { get; set; } Property Value string Name Name used on the command line to activate the group. public string Name { get; set; } Property Value string NoPrefix If the \"--\" prefix should NOT be added to the option. public bool NoPrefix { get; set; } Property Value bool"
  },
  "api/MarymoorStudios.Core.Promises.CommandLine.ServiceProviderBinder-1.html": {
    "href": "api/MarymoorStudios.Core.Promises.CommandLine.ServiceProviderBinder-1.html",
    "title": "Class ServiceProviderBinder<T>",
    "summary": "Class ServiceProviderBinder<T> Namespace MarymoorStudios.Core.Promises.CommandLine Assembly MarymoorStudios.Core.Promises.CommandLine.dll Custom binder for binding through a BindingContext. public sealed class ServiceProviderBinder<T> : BinderBase<T>, IValueDescriptor<T>, IValueDescriptor, IValueSource Type Parameters T Inheritance object BinderBase<T> ServiceProviderBinder<T> Implements IValueDescriptor<T> IValueDescriptor IValueSource Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors ServiceProviderBinder() public ServiceProviderBinder() Methods GetBoundValue(BindingContext) protected override T GetBoundValue(BindingContext bindingContext) Parameters bindingContext BindingContext Returns T"
  },
  "api/MarymoorStudios.Core.Promises.CommandLine.html": {
    "href": "api/MarymoorStudios.Core.Promises.CommandLine.html",
    "title": "Namespace MarymoorStudios.Core.Promises.CommandLine",
    "summary": "Namespace MarymoorStudios.Core.Promises.CommandLine Classes ArgumentAttribute Defines a command line command group. CommandAttribute Defines a command line command group. CommandGroupAttribute Defines a command line command group. CommandLineBuilderExtensions Extensions for CommandLineBuilder. CommandLineExtensions Extends System.CommandLine with support for Promise-based handlers. CommandLineExtensionsT Extends System.CommandLine with support for Promise-based handlers. OptionAttribute Defines a command line command group. ServiceProviderBinder<T> Custom binder for binding through a BindingContext."
  },
  "api/MarymoorStudios.Core.Promises.DiagnosticId.html": {
    "href": "api/MarymoorStudios.Core.Promises.DiagnosticId.html",
    "title": "Struct DiagnosticId",
    "summary": "Struct DiagnosticId Namespace MarymoorStudios.Core.Promises Assembly MarymoorStudios.Core.Promises.dll A unique id for diagnostic purposes. [DataContract] public readonly struct DiagnosticId : IEquatable<DiagnosticId> Implements IEquatable<DiagnosticId> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Remarks DiagnosticIds are unique only within the scope of the Sip that allocated them. Different Sips may reuse the same DiagnosticIds. Constructors DiagnosticId(ulong) public DiagnosticId(ulong id) Parameters id ulong Properties Id The underlying value. [DataMember] public ulong Id { get; } Property Value ulong Invalid The invalid id. public static DiagnosticId Invalid { get; } Property Value DiagnosticId IsValid True if not Invalid. public bool IsValid { get; } Property Value bool Methods Create() Allocate a new id from the global allocator. public static DiagnosticId Create() Returns DiagnosticId Equals(DiagnosticId) Value-based equality. public bool Equals(DiagnosticId other) Parameters other DiagnosticId Returns bool Equals(object?) public override bool Equals(object? obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() public override string ToString() Returns string Operators operator ==(DiagnosticId, DiagnosticId) Value-based equality. public static bool operator ==(DiagnosticId left, DiagnosticId right) Parameters left DiagnosticId right DiagnosticId Returns bool operator !=(DiagnosticId, DiagnosticId) Value-based equality. public static bool operator !=(DiagnosticId left, DiagnosticId right) Parameters left DiagnosticId right DiagnosticId Returns bool"
  },
  "api/MarymoorStudios.Core.Promises.IIPromiseEnumerator-1.html": {
    "href": "api/MarymoorStudios.Core.Promises.IIPromiseEnumerator-1.html",
    "title": "Interface IIPromiseEnumerator<T>",
    "summary": "Interface IIPromiseEnumerator<T> Namespace MarymoorStudios.Core.Promises Assembly MarymoorStudios.Core.Promises.dll Supports a simple asynchronous iteration over a generic collection. public interface IIPromiseEnumerator<out T> : IPromiseDisposable Type Parameters T The type of the elements in the collection. Inherited Members IPromiseDisposable.DisposeAsync() Properties Current Gets the element in the collection at the current position of the enumerator. T Current { get; } Property Value T The element in the collection at the current position of the enumerator. Methods MoveNextAsync() Advances the enumerator to the next element. Promise<bool> MoveNextAsync() Returns Promise<bool> Resolves to true if the enumerator was successfully advanced, false if the end was reached."
  },
  "api/MarymoorStudios.Core.Promises.IO.FileIO.html": {
    "href": "api/MarymoorStudios.Core.Promises.IO.FileIO.html",
    "title": "Class FileIO",
    "summary": "Class FileIO Namespace MarymoorStudios.Core.Promises.IO Assembly MarymoorStudios.Core.Promises.IO.dll public sealed class FileIO : FileServer, IByRefRemotable, IDisposable, IPromiseDisposable Inheritance object AServer<FileServer> FileServer FileIO Implements IByRefRemotable IDisposable IPromiseDisposable Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods Create(MemoryPool<byte>, Stream) public static FileProxy Create(MemoryPool<byte> pool, Stream stm) Parameters pool MemoryPool<byte> stm Stream Returns FileProxy Create(MemoryPool<byte>, string, FileOptions) public static FileProxy Create(MemoryPool<byte> pool, string path, FileOptions options = FileOptions.None) Parameters pool MemoryPool<byte> path string options FileOptions Returns FileProxy Dispose() public void Dispose() DisposeAsync() public override Promise DisposeAsync() Returns Promise GetSize() public override Promise<long> GetSize() Returns Promise<long> Open(MemoryPool<byte>, string, FileMode) public static FileProxy Open(MemoryPool<byte> pool, string path, FileMode mode) Parameters pool MemoryPool<byte> path string mode FileMode Returns FileProxy Read(ulong, int) public override Promise<OwnedMem<byte>> Read(ulong offset, int length = -1) Parameters offset ulong length int Returns Promise<OwnedMem<byte>> ReadBytes(ulong, long) public override Bytes ReadBytes(ulong offset = 0, long length = -1) Parameters offset ulong length long Returns Bytes Write(ReadOnlyMemory<byte>, ulong) public override Promise Write(ReadOnlyMemory<byte> buffer, ulong offset) Parameters buffer ReadOnlyMemory<byte> offset ulong Returns Promise WriteBytes(Bytes, ulong) public override Promise WriteBytes(Bytes content, ulong offset = 0) Parameters content Bytes offset ulong Returns Promise"
  },
  "api/MarymoorStudios.Core.Promises.IO.FileProxy.html": {
    "href": "api/MarymoorStudios.Core.Promises.IO.FileProxy.html",
    "title": "Class FileProxy",
    "summary": "Class FileProxy Namespace MarymoorStudios.Core.Promises.IO Assembly MarymoorStudios.Core.Promises.IO.dll public sealed class FileProxy : Proxy<FileServer>, IProxy<FileProxy, FileServer> Inheritance object Proxy<FileServer> FileProxy Implements IProxy<FileProxy, FileServer> Inherited Members Proxy<FileServer>.Sync() Proxy<FileServer>.GetRemoteIdentity() Proxy<FileServer>.AppendOne(ResolverTurn<FileServer>) Proxy<FileServer>.IsFailed Proxy<FileServer>.IsResolved Proxy<FileServer>.Failure object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods FileProxyExtensions.DeserializeFromFile<T>(FileProxy) FileProxyExtensions.SerializeToFile<T>(FileProxy, T) RecordIO.ReplaceRecordIO<T>(FileProxy, FileProxy, MemoryPool<byte>, T) Constructors FileProxy(FileServer) Creates a successfully resolved promise. public FileProxy(FileServer value) Parameters value FileServer FileProxy(Promise<FileServer>) Creates a forwarded promise whose outcome will be the same as p. public FileProxy(Promise<FileServer> p) Parameters p Promise<FileServer> FileProxy(Resolver<FileServer>) Creates an unresolved promise whose future outcome is defined by r. public FileProxy(Resolver<FileServer> r) Parameters r Resolver<FileServer> FileProxy(Proxy<FileServer>) Creates a forwarded promise whose outcome will be the same as p. public FileProxy(Proxy<FileServer> p) Parameters p Proxy<FileServer> FileProxy(Exception) Creates a failed promise whose outcome is ex. public FileProxy(Exception ex) Parameters ex Exception Methods DisposeAsync() public Promise DisposeAsync() Returns Promise GetSize() public Promise<long> GetSize() Returns Promise<long> Read(ulong, int) public Promise<OwnedMem<byte>> Read(ulong offset, int length = -1) Parameters offset ulong length int Returns Promise<OwnedMem<byte>> ReadBytes(ulong, long) public Bytes ReadBytes(ulong offset = 0, long length = -1) Parameters offset ulong length long Returns Bytes Write(ReadOnlyMemory<byte>, ulong) public Promise Write(ReadOnlyMemory<byte> buffer, ulong offset) Parameters buffer ReadOnlyMemory<byte> offset ulong Returns Promise WriteBytes(Bytes, ulong) public Promise WriteBytes(Bytes content, ulong offset = 0) Parameters content Bytes offset ulong Returns Promise Operators implicit operator FileProxy(Promise<FileProxy>) Implicit conversion to its syntax. public static implicit operator FileProxy(Promise<FileProxy> p) Parameters p Promise<FileProxy> Returns FileProxy Explicit Interface Implementations Create(FileServer) Creates a successfully resolved promise. static FileProxy Create(FileServer value) Parameters value FileServer Returns FileProxy Create(Promise<FileServer>) Creates a forwarded promise whose outcome will be the same as p. static FileProxy Create(Promise<FileServer> p) Parameters p Promise<FileServer> Returns FileProxy Create(Resolver<FileServer>) Creates an unresolved promise whose future outcome is defined by r. static FileProxy Create(Resolver<FileServer> r) Parameters r Resolver<FileServer> Returns FileProxy Create(Proxy<FileServer>) Creates a forwarded promise whose outcome will be the same as p. static FileProxy Create(Proxy<FileServer> p) Parameters p Proxy<FileServer> Returns FileProxy Create(Exception) Creates a failed promise whose outcome is ex. static FileProxy Create(Exception ex) Parameters ex Exception Returns FileProxy"
  },
  "api/MarymoorStudios.Core.Promises.IO.FileProxyExtensions.html": {
    "href": "api/MarymoorStudios.Core.Promises.IO.FileProxyExtensions.html",
    "title": "Class FileProxyExtensions",
    "summary": "Class FileProxyExtensions Namespace MarymoorStudios.Core.Promises.IO Assembly MarymoorStudios.Core.Promises.IO.dll public static class FileProxyExtensions Inheritance object FileProxyExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods DeserializeFromFile<T>(FileProxy) Parses the binary representation of an MCS DataContract type format from a file. public static Promise<T> DeserializeFromFile<T>(this FileProxy file) Parameters file FileProxy The file to write to. Returns Promise<T> The deserialized value. Type Parameters T The type to deserialize. Exceptions IOException If an IO error occurs. SerializationException If deserialization fails. SerializeToFile<T>(FileProxy, T) Writes the binary representation of an MCS DataContract type to Memory. public static Promise SerializeToFile<T>(this FileProxy file, T data) Parameters file FileProxy The file to write to. data T The value to serialize. Returns Promise Type Parameters T The type to serialize. Exceptions IOException If an IO error occurs. SerializationException If a serialization error occurs."
  },
  "api/MarymoorStudios.Core.Promises.IO.FileServer.html": {
    "href": "api/MarymoorStudios.Core.Promises.IO.FileServer.html",
    "title": "Class FileServer",
    "summary": "Class FileServer Namespace MarymoorStudios.Core.Promises.IO Assembly MarymoorStudios.Core.Promises.IO.dll public abstract class FileServer : AServer<FileServer>, IByRefRemotable Inheritance object AServer<FileServer> FileServer Implements IByRefRemotable Derived FileIO Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors FileServer() protected FileServer() Methods DisposeAsync() public abstract Promise DisposeAsync() Returns Promise GetSize() public abstract Promise<long> GetSize() Returns Promise<long> Read(ulong, int) public abstract Promise<OwnedMem<byte>> Read(ulong offset, int length = -1) Parameters offset ulong length int Returns Promise<OwnedMem<byte>> ReadBytes(ulong, long) public abstract Bytes ReadBytes(ulong offset = 0, long length = -1) Parameters offset ulong length long Returns Bytes Write(ReadOnlyMemory<byte>, ulong) public abstract Promise Write(ReadOnlyMemory<byte> buffer, ulong offset) Parameters buffer ReadOnlyMemory<byte> offset ulong Returns Promise WriteBytes(Bytes, ulong) public abstract Promise WriteBytes(Bytes content, ulong offset = 0) Parameters content Bytes offset ulong Returns Promise"
  },
  "api/MarymoorStudios.Core.Promises.IO.IFile.html": {
    "href": "api/MarymoorStudios.Core.Promises.IO.IFile.html",
    "title": "Interface IFile",
    "summary": "Interface IFile Namespace MarymoorStudios.Core.Promises.IO Assembly MarymoorStudios.Core.Promises.IO.dll [Eventual] public interface IFile Methods DisposeAsync() Promise DisposeAsync() Returns Promise GetSize() Promise<long> GetSize() Returns Promise<long> Read(ulong, int) Promise<OwnedMem<byte>> Read(ulong offset, int length = -1) Parameters offset ulong length int Returns Promise<OwnedMem<byte>> ReadBytes(ulong, long) Bytes ReadBytes(ulong offset = 0, long length = -1) Parameters offset ulong length long Returns Bytes Write(ReadOnlyMemory<byte>, ulong) Promise Write(ReadOnlyMemory<byte> buffer, ulong offset) Parameters buffer ReadOnlyMemory<byte> offset ulong Returns Promise WriteBytes(Bytes, ulong) Promise WriteBytes(Bytes content, ulong offset = 0) Parameters content Bytes offset ulong Returns Promise"
  },
  "api/MarymoorStudios.Core.Promises.IO.RecordIO.html": {
    "href": "api/MarymoorStudios.Core.Promises.IO.RecordIO.html",
    "title": "Class RecordIO",
    "summary": "Class RecordIO Namespace MarymoorStudios.Core.Promises.IO Assembly MarymoorStudios.Core.Promises.IO.dll public static class RecordIO Inheritance object RecordIO Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods CopyRecordIO(Bytes, Writer, MemoryPool<byte>, Func<TypeId, ReadOnlyMemory<byte>, Promise<bool>>) Copies records from one RecordIO stream to another, optionally with filtering. public static Promise CopyRecordIO(this Bytes source, Bytes.Writer destination, MemoryPool<byte> pool, Func<TypeId, ReadOnlyMemory<byte>, Promise<bool>> filter) Parameters source Bytes The source stream. destination Bytes.Writer The destination stream. pool MemoryPool<byte> The pool to allocate buffers from. filter Func<TypeId, ReadOnlyMemory<byte>, Promise<bool>> Returns true if a record should be copied, false otherwise. Returns Promise ReadRecordIO(Bytes, MemoryPool<byte>, Func<TypeId, ReadOnlyMemory<byte>, Promise>) Reads an entire RecordIO stream. public static Promise ReadRecordIO(this Bytes stm, MemoryPool<byte> pool, Func<TypeId, ReadOnlyMemory<byte>, Promise> visitRecord) Parameters stm Bytes The stream to read from. pool MemoryPool<byte> The pool to allocate buffers from. visitRecord Func<TypeId, ReadOnlyMemory<byte>, Promise> Called once for each record. Returns Promise Success if the stream is parsed without error, the error code otherwise. Remarks pool defines the maximum record policy. No records will be processed larger than its maximum buffer size. visitRecord is passed a ReadOnlyMemory<T> of the record body. If visitRecord returns an error then the sequence is aborted. ReadRecordIO(Bytes, MemoryPool<byte>, Func<TypeId, uint, ReadOnlyMemory<byte>, Promise>) Reads an entire RecordIO stream. public static Promise ReadRecordIO(this Bytes stm, MemoryPool<byte> pool, Func<TypeId, uint, ReadOnlyMemory<byte>, Promise> visitRecord) Parameters stm Bytes The stream to read from. pool MemoryPool<byte> The pool to allocate buffers from. visitRecord Func<TypeId, uint, ReadOnlyMemory<byte>, Promise> Called once for each record. Returns Promise Success if the stream is parsed without error, the error code otherwise. Remarks pool defines the maximum record policy. No records will be processed larger than its maximum buffer size. visitRecord is passed a ReadOnlyMemory<T> of the record body. If visitRecord returns an error then the sequence is aborted. ReplaceRecordIO<T>(FileProxy, FileProxy, MemoryPool<byte>, T) Copies records from one RecordIO stream to another, while deleting all records of the same type as item and replacing them with a single record of item at the end. public static Promise ReplaceRecordIO<T>(this FileProxy source, FileProxy destination, MemoryPool<byte> pool, T item) Parameters source FileProxy The source stream. destination FileProxy The destination stream. pool MemoryPool<byte> The pool to allocate buffers from. item T The item to be written. Returns Promise Type Parameters T The type of the item to write. ReplaceRecordIO<T>(Bytes, Writer, MemoryPool<byte>, T) Copies records from one RecordIO stream to another, while deleting all records of the same type as item and replacing them with a single record of item at the end. public static Promise ReplaceRecordIO<T>(this Bytes source, Bytes.Writer destination, MemoryPool<byte> pool, T item) Parameters source Bytes The source stream. destination Bytes.Writer The destination stream. pool MemoryPool<byte> The pool to allocate buffers from. item T The item to be written. Returns Promise Type Parameters T The type of the item to write. WriteRecordIO<T>(Writer, MemoryPool<byte>, T) Write a serializable item as a record. public static Promise WriteRecordIO<T>(this Bytes.Writer destination, MemoryPool<byte> pool, T item) Parameters destination Bytes.Writer The byte stream to write to. pool MemoryPool<byte> The pool to allocate buffers from. item T The item to be written. Returns Promise Type Parameters T The type of the item to write."
  },
  "api/MarymoorStudios.Core.Promises.IO.html": {
    "href": "api/MarymoorStudios.Core.Promises.IO.html",
    "title": "Namespace MarymoorStudios.Core.Promises.IO",
    "summary": "Namespace MarymoorStudios.Core.Promises.IO Classes FileIO FileProxy FileProxyExtensions FileServer RecordIO Interfaces IFile"
  },
  "api/MarymoorStudios.Core.Promises.IPromiseDisposable.html": {
    "href": "api/MarymoorStudios.Core.Promises.IPromiseDisposable.html",
    "title": "Interface IPromiseDisposable",
    "summary": "Interface IPromiseDisposable Namespace MarymoorStudios.Core.Promises Assembly MarymoorStudios.Core.Promises.dll A promise-based replacement for IAsyncDisposable. public interface IPromiseDisposable Methods DisposeAsync() Promise DisposeAsync() Returns Promise"
  },
  "api/MarymoorStudios.Core.Promises.IPromiseEnumerable-1.html": {
    "href": "api/MarymoorStudios.Core.Promises.IPromiseEnumerable-1.html",
    "title": "Interface IPromiseEnumerable<T>",
    "summary": "Interface IPromiseEnumerable<T> Namespace MarymoorStudios.Core.Promises Assembly MarymoorStudios.Core.Promises.dll Factory for asynchronous enumerators. public interface IPromiseEnumerable<out T> Type Parameters T The type of the elements. Methods GetAsyncEnumerator(CancellationToken) Returns an enumerator that iterates asynchronously through the collection. IIPromiseEnumerator<out T> GetAsyncEnumerator(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken A CancellationToken to cancel the asynchronous iteration. Returns IIPromiseEnumerator<T>"
  },
  "api/MarymoorStudios.Core.Promises.Joiner.html": {
    "href": "api/MarymoorStudios.Core.Promises.Joiner.html",
    "title": "Class Joiner",
    "summary": "Class Joiner Namespace MarymoorStudios.Core.Promises Assembly MarymoorStudios.Core.Promises.dll Joins multiple promises together. public sealed class Joiner : IDisposable Inheritance object Joiner Implements IDisposable Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors Joiner() Constructor. public Joiner() Properties IsDisposed True if Dispose() has been called. public bool IsDisposed { get; } Property Value bool Result Resolves to the outcome of join. public Promise Result { get; } Property Value Promise Remarks Can only resolve once the Joiner has been sealed with Dispose(). Methods Create(out Promise) Creates a new join-scope and yields it outcome. public static Joiner Create(out Promise result) Parameters result Promise The outcome of the join. Returns Joiner The joiner. Dispose() public void Dispose() Link(Promise) Links p to this outcome. public void Link(Promise p) Parameters p Promise Link<T>(Promise<T>) Links p to this outcome. public void Link<T>(Promise<T> p) Parameters p Promise<T> Type Parameters T"
  },
  "api/MarymoorStudios.Core.Promises.Promise-1.html": {
    "href": "api/MarymoorStudios.Core.Promises.Promise-1.html",
    "title": "Struct Promise<T>",
    "summary": "Struct Promise<T> Namespace MarymoorStudios.Core.Promises Assembly MarymoorStudios.Core.Promises.dll A representation of the future outcome of a computation. public readonly struct Promise<T> Type Parameters T The type of the value produced by a successful outcome. Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Extension Methods PromiseFinally.Finally<T>(Promise<T>, Action<T>, Action<Exception>) PromiseFinally.Finally<T>(Promise<T>, Func<T, Promise>, Func<Exception, Promise>) PromiseFinally.Finally<T, TResult>(Promise<T>, Func<T, Promise<TResult>>, Func<Exception, Promise<TResult>>) PromiseFinally.Finally<T, TResult>(Promise<T>, Func<T, TResult>, Func<Exception, TResult>) PromiseOnCompleted.OnCompleted<T>(Promise<T>, Action<T>, Action<Exception>) PromiseWhen.When<T>(Promise<T>, Action<T>) PromiseWhen.When<T>(Promise<T>, Func<T, Promise>) PromiseWhen.When<T, TResult>(Promise<T>, Func<T, Promise<TResult>>) PromiseWhen.When<T, TResult>(Promise<T>, Func<T, TResult>) PromiseWithCancellation.WithCancellation<T>(Promise<T>, CancellationToken) Remarks A promise can be used to reify, track, compose, and wait for the completion of a computation. The outcome (success or failure) cannot be known until after the computation has completed. This is called \"resolving\" the outcome. Constructors Promise() Creates a failed promise whose outcome is UninitializedException. public Promise() Promise(Promise<T>) Creates a forwarded promise whose outcome will be the same as p. public Promise(Promise<T> p) Parameters p Promise<T> Promise(Resolver<T>) Creates an unresolved promise whose future outcome is defined by r. public Promise(Resolver<T> r) Parameters r Resolver<T> Promise(Exception) Creates a failed promise whose outcome is ex. public Promise(Exception ex) Parameters ex Exception Promise(T) Creates a successfully resolved promise. public Promise(T value) Parameters value T Properties Failure The error the promise failed with. public Exception Failure { get; } Property Value Exception Remarks REQUIRES: the promise has failed. IsFailed True if the promise has failed. public bool IsFailed { get; } Property Value bool IsResolved True if the promise is in a resolved state (either success or failure). public bool IsResolved { get; } Property Value bool IsSuccess True if the promise has been resolved successfully. public bool IsSuccess { get; } Property Value bool Result Returns the final outcome. public T Result { get; } Property Value T Remarks REQUIRES: the promise is resolved. If the resolver has failed then the failing error is rethrown from this method. Methods GetAwaiter() Enables await keyword. public PromiseAwaiter<T> GetAwaiter() Returns PromiseAwaiter<T>"
  },
  "api/MarymoorStudios.Core.Promises.Promise.html": {
    "href": "api/MarymoorStudios.Core.Promises.Promise.html",
    "title": "Struct Promise",
    "summary": "Struct Promise Namespace MarymoorStudios.Core.Promises Assembly MarymoorStudios.Core.Promises.dll A representation of the future outcome of a computation. public readonly struct Promise Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Extension Methods PromiseFinally.Finally(Promise, Action, Action<Exception>) PromiseFinally.Finally(Promise, Func<Promise>, Func<Exception, Promise>) PromiseFinally.Finally<TResult>(Promise, Func<Promise<TResult>>, Func<Exception, Promise<TResult>>) PromiseJoin.Join(Promise, Promise) PromiseJoin.Join(Promise, params Promise[]) PromiseOnCompleted.OnCompleted(Promise, Action, Action<Exception>) PromiseWhen.When(Promise, Action) PromiseWhen.When(Promise, Func<Promise>) PromiseWhen.When<TResult>(Promise, Func<Promise<TResult>>) PromiseWithCancellation.WithCancellation(Promise, CancellationToken) Remarks A promise can be used to reify, track, compose, and wait for the completion of a computation. The outcome (success or failure) cannot be known until after the computation has completed. This is called \"resolving\" the outcome. Constructors Promise() Creates a successfully resolved promise. public Promise() Promise(Promise) Creates a forwarded promise whose outcome will be the same as p. public Promise(Promise p) Parameters p Promise Promise(Resolver<Void>) Creates an unresolved promise whose future outcome is defined by r. public Promise(Resolver<Void> r) Parameters r Resolver<Void> Promise(Exception) Creates a failed promise whose outcome is ex. public Promise(Exception ex) Parameters ex Exception Properties Done An already successfully resolved promise. public static Promise Done { get; } Property Value Promise Failure The error the promise failed with. public Exception Failure { get; } Property Value Exception Remarks REQUIRES: the promise has failed. IsFailed True if the promise has failed. public bool IsFailed { get; } Property Value bool IsResolved True if the promise is in a resolved state (either success or failure). public bool IsResolved { get; } Property Value bool IsSuccess True if the promise has been resolved successfully. public bool IsSuccess { get; } Property Value bool Methods AppendOne(Turn) Dispatches a turn. public void AppendOne(Turn turn) Parameters turn Turn A turn to schedule when resolved. From<T>(Resolver<T>) Creates an unresolved promise whose future outcome is defined by r. public static Promise<T> From<T>(Resolver<T> r) Parameters r Resolver<T> The resolver Returns Promise<T> Type Parameters T The type of the value. From<T>(Exception) Creates a failed promise whose outcome is ex. public static Promise<T> From<T>(Exception ex) Parameters ex Exception The failure. Returns Promise<T> Type Parameters T The type of the value. From<T>(T) An already successfully resolved promise. public static Promise<T> From<T>(T value) Parameters value T The value Returns Promise<T> Type Parameters T The type of the value. GetAwaiter() Enables await keyword. public PromiseAwaiter GetAwaiter() Returns PromiseAwaiter Operators implicit operator Promise<Void>(Promise) Converts a Promise to an equivalent Promise<T>. public static implicit operator Promise<Void>(Promise p) Parameters p Promise The promise to convert. Returns Promise<Void> implicit operator Promise(Promise<Void>) Converts a Promise<T> to an equivalent Promise. public static implicit operator Promise(Promise<Void> p) Parameters p Promise<Void> The promise to convert. Returns Promise"
  },
  "api/MarymoorStudios.Core.Promises.PromiseAwaiter-1.html": {
    "href": "api/MarymoorStudios.Core.Promises.PromiseAwaiter-1.html",
    "title": "Struct PromiseAwaiter<T>",
    "summary": "Struct PromiseAwaiter<T> Namespace MarymoorStudios.Core.Promises Assembly MarymoorStudios.Core.Promises.dll Enables the await keyword for Promise<T>. public readonly struct PromiseAwaiter<T> : ICriticalNotifyCompletion, INotifyCompletion Type Parameters T The type of the value produced by a successful outcome. Implements ICriticalNotifyCompletion INotifyCompletion Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors PromiseAwaiter(Promise<T>) Constructor. public PromiseAwaiter(Promise<T> p) Parameters p Promise<T> Properties IsCompleted True if the promise has been resolved successfully. public bool IsCompleted { get; } Property Value bool Methods GetResult() Returns the final outcome of the awaited promise. public T GetResult() Returns T"
  },
  "api/MarymoorStudios.Core.Promises.PromiseAwaiter.html": {
    "href": "api/MarymoorStudios.Core.Promises.PromiseAwaiter.html",
    "title": "Struct PromiseAwaiter",
    "summary": "Struct PromiseAwaiter Namespace MarymoorStudios.Core.Promises Assembly MarymoorStudios.Core.Promises.dll Enables the await keyword for Promise. public readonly struct PromiseAwaiter : ICriticalNotifyCompletion, INotifyCompletion Implements ICriticalNotifyCompletion INotifyCompletion Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors PromiseAwaiter(Promise) Constructor. public PromiseAwaiter(Promise p) Parameters p Promise Properties IsCompleted True if the promise has been resolved successfully. public bool IsCompleted { get; } Property Value bool Methods GetResult() Rethrows the Exception of failed promises, otherwise does nothing. public void GetResult()"
  },
  "api/MarymoorStudios.Core.Promises.PromiseFinally.html": {
    "href": "api/MarymoorStudios.Core.Promises.PromiseFinally.html",
    "title": "Class PromiseFinally",
    "summary": "Class PromiseFinally Namespace MarymoorStudios.Core.Promises Assembly MarymoorStudios.Core.Promises.dll public static class PromiseFinally Inheritance object PromiseFinally Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods Finally(Promise, Action, Action<Exception>) Executes a continuation when the target resolves (success or failure). public static Promise Finally(this Promise target, Action body, Action<Exception> error) Parameters target Promise The trigger for execution. body Action The continuation to execute if the trigger succeeded. error Action<Exception> The continuation to execute if the trigger fails. Returns Promise Resolves to the outcome of the corresponding continuation. Finally(Promise, Func<Promise>, Func<Exception, Promise>) Executes a continuation when the target resolves (success or failure). public static Promise Finally(this Promise target, Func<Promise> body, Func<Exception, Promise> error) Parameters target Promise The trigger for execution. body Func<Promise> The continuation to execute if the trigger succeeded. error Func<Exception, Promise> The continuation to execute if the trigger fails. Returns Promise Finally<TResult>(Promise, Func<Promise<TResult>>, Func<Exception, Promise<TResult>>) Executes a continuation when the target resolves (success or failure). public static Promise<TResult> Finally<TResult>(this Promise target, Func<Promise<TResult>> body, Func<Exception, Promise<TResult>> error) Parameters target Promise The trigger for execution. body Func<Promise<TResult>> The continuation to execute if the trigger succeeded. error Func<Exception, Promise<TResult>> The continuation to execute if the trigger fails. Returns Promise<TResult> Type Parameters TResult Finally<T>(Promise<T>, Action<T>, Action<Exception>) Executes a continuation when the target resolves (success or failure). public static Promise Finally<T>(this Promise<T> target, Action<T> body, Action<Exception> error) Parameters target Promise<T> The trigger for execution. body Action<T> The continuation to execute if the trigger succeeded. error Action<Exception> The continuation to execute if the trigger fails. Returns Promise Type Parameters T Finally<T>(Promise<T>, Func<T, Promise>, Func<Exception, Promise>) Executes a continuation when the target resolves (success or failure). public static Promise Finally<T>(this Promise<T> target, Func<T, Promise> body, Func<Exception, Promise> error) Parameters target Promise<T> The trigger for execution. body Func<T, Promise> The continuation to execute if the trigger succeeded. error Func<Exception, Promise> The continuation to execute if the trigger fails. Returns Promise Type Parameters T Finally<T, TResult>(Promise<T>, Func<T, Promise<TResult>>, Func<Exception, Promise<TResult>>) Executes a continuation when the target resolves (success or failure). public static Promise<TResult> Finally<T, TResult>(this Promise<T> target, Func<T, Promise<TResult>> body, Func<Exception, Promise<TResult>> error) Parameters target Promise<T> The trigger for execution. body Func<T, Promise<TResult>> The continuation to execute if the trigger succeeded. error Func<Exception, Promise<TResult>> The continuation to execute if the trigger fails. Returns Promise<TResult> Type Parameters T TResult Finally<T, TResult>(Promise<T>, Func<T, TResult>, Func<Exception, TResult>) Executes a continuation when the target resolves (success or failure). public static Promise<TResult> Finally<T, TResult>(this Promise<T> target, Func<T, TResult> body, Func<Exception, TResult> error) Parameters target Promise<T> The trigger for execution. body Func<T, TResult> The continuation to execute if the trigger succeeded. error Func<Exception, TResult> The continuation to execute if the trigger fails. Returns Promise<TResult> Type Parameters T TResult"
  },
  "api/MarymoorStudios.Core.Promises.PromiseJoin.html": {
    "href": "api/MarymoorStudios.Core.Promises.PromiseJoin.html",
    "title": "Class PromiseJoin",
    "summary": "Class PromiseJoin Namespace MarymoorStudios.Core.Promises Assembly MarymoorStudios.Core.Promises.dll public static class PromiseJoin Inheritance object PromiseJoin Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods Join(Promise, Promise) Joins two promises into a single outcome. public static Promise Join(this Promise left, Promise right) Parameters left Promise The first promise to join. right Promise Zero or more other promises. Returns Promise A promise that resolves when all other promises resolve. Remarks Produces an aggregate exception if any errors are encountered. Join(Promise, params Promise[]) Joins two or more promises into a single outcome. public static Promise Join(this Promise left, params Promise[] join) Parameters left Promise The first promise to join. join Promise[] Zero or more other promises. Returns Promise A promise that resolves when all other promises resolve. Remarks Produces an aggregate exception if any errors are encountered."
  },
  "api/MarymoorStudios.Core.Promises.PromiseMethodBuilder-1.html": {
    "href": "api/MarymoorStudios.Core.Promises.PromiseMethodBuilder-1.html",
    "title": "Struct PromiseMethodBuilder<T>",
    "summary": "Struct PromiseMethodBuilder<T> Namespace MarymoorStudios.Core.Promises Assembly MarymoorStudios.Core.Promises.dll Enables the async keyword for methods that return a Promise<T>. public struct PromiseMethodBuilder<T> Type Parameters T The type of the value produced by a successful outcome. Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Properties Task A promise for the final outcome of an async methods. public Promise<T> Task { get; } Property Value Promise<T> Remarks Called by the compiler generated code at the callsite of an async method to retrieve a promise for the methods eventual outcome. Methods AwaitOnCompleted<TAwaiter, TStateMachine>(ref TAwaiter, ref TStateMachine) Schedule the resumption of an async method during a blocking await point for awaitables that only implement the base INotifyCompletion notification style. public void AwaitOnCompleted<TAwaiter, TStateMachine>(ref TAwaiter awaiter, ref TStateMachine stateMachine) where TAwaiter : INotifyCompletion where TStateMachine : IAsyncStateMachine Parameters awaiter TAwaiter The awaiter of the awaitable this async method is blocking on. stateMachine TStateMachine The state machine that captures the resumable state of this async method. Type Parameters TAwaiter The type of the awaiter of the awaitable this async method is blocking on. TStateMachine The anonymous type generated by the compiler to captured stack variables and provide resumption logic for each await point. AwaitUnsafeOnCompleted<TAwaiter, TStateMachine>(ref TAwaiter, ref TStateMachine) Schedule the resumption of an async method during a blocking await point for awaitables that also implement the newer ICriticalNotifyCompletion notification style. public void AwaitUnsafeOnCompleted<TAwaiter, TStateMachine>(ref TAwaiter awaiter, ref TStateMachine stateMachine) where TAwaiter : ICriticalNotifyCompletion where TStateMachine : IAsyncStateMachine Parameters awaiter TAwaiter The awaiter of the awaitable this async method is blocking on. stateMachine TStateMachine The state machine that captures the resumable state of this async method. Type Parameters TAwaiter The type of the awaiter of the awaitable this async method is blocking on. TStateMachine The anonymous type generated by the compiler to captured stack variables and provide resumption logic for each await point. Create() Factor method for this builder. public static PromiseMethodBuilder<T> Create() Returns PromiseMethodBuilder<T> A new builder. Remarks This is used by the generated code to create a new instance of the builder when an async method's is first pushed on the stack. SetException(Exception) Resolve the return value with a failed outcome. public void SetException(Exception ex) Parameters ex Exception The error that caused the failure. Remarks Called by the compiler generated code at any failure exit point from the async method to inform callers of the final outcome. SetResult(T) Resolve the return value with a successful outcome. public void SetResult(T value) Parameters value T Remarks Called by the compiler generated code at any successful exit point from the async method to inform callers of the final outcome. SetStateMachine(IAsyncStateMachine) Hoists the state machine into the heap to be saved across a blocking await. public readonly void SetStateMachine(IAsyncStateMachine stateMachine) Parameters stateMachine IAsyncStateMachine The stack frame instance to be saved. Start<TStateMachine>(ref TStateMachine) Starts the async method's state machine. public readonly void Start<TStateMachine>(ref TStateMachine stateMachine) where TStateMachine : IAsyncStateMachine Parameters stateMachine TStateMachine An instance of TStateMachine for the current stack frame. Type Parameters TStateMachine The anonymous type generated by the compiler to captured stack variables and provide resumption logic for each await point. Remarks Note that stateMachine is passed by ref here because it has been allocated on the stack frame at this point. It won't be hoisted to the heap (causing a heap allocation) until and unless at least one of the await points actually blocks. This is an optimization to avoid unnecessary heap allocations if all awaitables turn out to already ben resolved (a common case in some circumstances)."
  },
  "api/MarymoorStudios.Core.Promises.PromiseMethodBuilder.html": {
    "href": "api/MarymoorStudios.Core.Promises.PromiseMethodBuilder.html",
    "title": "Struct PromiseMethodBuilder",
    "summary": "Struct PromiseMethodBuilder Namespace MarymoorStudios.Core.Promises Assembly MarymoorStudios.Core.Promises.dll Enables the async keyword for methods that return a Promise. public struct PromiseMethodBuilder Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Properties Task A promise for the final outcome of an async methods. public Promise Task { get; } Property Value Promise Remarks Called by the compiler generated code at the callsite of an async method to retrieve a promise for the methods eventual outcome. Methods AwaitOnCompleted<TAwaiter, TStateMachine>(ref TAwaiter, ref TStateMachine) Schedule the resumption of an async method during a blocking await point for awaitables that only implement the base INotifyCompletion notification style. public void AwaitOnCompleted<TAwaiter, TStateMachine>(ref TAwaiter awaiter, ref TStateMachine stateMachine) where TAwaiter : INotifyCompletion where TStateMachine : IAsyncStateMachine Parameters awaiter TAwaiter The awaiter of the awaitable this async method is blocking on. stateMachine TStateMachine The state machine that captures the resumable state of this async method. Type Parameters TAwaiter The type of the awaiter of the awaitable this async method is blocking on. TStateMachine The anonymous type generated by the compiler to captured stack variables and provide resumption logic for each await point. AwaitUnsafeOnCompleted<TAwaiter, TStateMachine>(ref TAwaiter, ref TStateMachine) Schedule the resumption of an async method during a blocking await point for awaitables that also implement the newer ICriticalNotifyCompletion notification style. public void AwaitUnsafeOnCompleted<TAwaiter, TStateMachine>(ref TAwaiter awaiter, ref TStateMachine stateMachine) where TAwaiter : ICriticalNotifyCompletion where TStateMachine : IAsyncStateMachine Parameters awaiter TAwaiter The awaiter of the awaitable this async method is blocking on. stateMachine TStateMachine The state machine that captures the resumable state of this async method. Type Parameters TAwaiter The type of the awaiter of the awaitable this async method is blocking on. TStateMachine The anonymous type generated by the compiler to captured stack variables and provide resumption logic for each await point. Create() Factor method for this builder. public static PromiseMethodBuilder Create() Returns PromiseMethodBuilder A new builder. Remarks This is used by the generated code to create a new instance of the builder when an async method's is first pushed on the stack. SetException(Exception) Resolve the return value with a failed outcome. public void SetException(Exception ex) Parameters ex Exception The error that caused the failure. Remarks Called by the compiler generated code at any failure exit point from the async method to inform callers of the final outcome. SetResult() Resolve the return value with a successful outcome. public void SetResult() Remarks Called by the compiler generated code at any successful exit point from the async method to inform callers of the final outcome. SetStateMachine(IAsyncStateMachine) Hoists the state machine into the heap to be saved across a blocking await. public readonly void SetStateMachine(IAsyncStateMachine stateMachine) Parameters stateMachine IAsyncStateMachine The stack frame instance to be saved. Start<TStateMachine>(ref TStateMachine) Starts the async method's state machine. public readonly void Start<TStateMachine>(ref TStateMachine stateMachine) where TStateMachine : IAsyncStateMachine Parameters stateMachine TStateMachine An instance of TStateMachine for the current stack frame. Type Parameters TStateMachine The anonymous type generated by the compiler to captured stack variables and provide resumption logic for each await point. Remarks Note that stateMachine is passed by ref here because it has been allocated on the stack frame at this point. It won't be hoisted to the heap (causing a heap allocation) until and unless at least one of the await points actually blocks. This is an optimization to avoid unnecessary heap allocations if all awaitables turn out to already ben resolved (a common case in some circumstances)."
  },
  "api/MarymoorStudios.Core.Promises.PromiseOnCompleted.html": {
    "href": "api/MarymoorStudios.Core.Promises.PromiseOnCompleted.html",
    "title": "Class PromiseOnCompleted",
    "summary": "Class PromiseOnCompleted Namespace MarymoorStudios.Core.Promises Assembly MarymoorStudios.Core.Promises.dll public static class PromiseOnCompleted Inheritance object PromiseOnCompleted Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods OnCompleted(Promise, Action, Action<Exception>) Executes a continuation when the target resolves (with failure-coalescing). public static void OnCompleted(this Promise target, Action success, Action<Exception> failure) Parameters target Promise The trigger for execution. success Action The action to execute if the trigger succeeded. failure Action<Exception> The action to execute if the trigger failed. OnCompleted<T>(Promise<T>, Action<T>, Action<Exception>) Executes a continuation when the target resolves (with failure-coalescing). public static void OnCompleted<T>(this Promise<T> target, Action<T> success, Action<Exception> failure) Parameters target Promise<T> The trigger for execution. success Action<T> The action to execute if the trigger succeeded. failure Action<Exception> The action to execute if the trigger failed. Type Parameters T"
  },
  "api/MarymoorStudios.Core.Promises.PromiseWhen.html": {
    "href": "api/MarymoorStudios.Core.Promises.PromiseWhen.html",
    "title": "Class PromiseWhen",
    "summary": "Class PromiseWhen Namespace MarymoorStudios.Core.Promises Assembly MarymoorStudios.Core.Promises.dll public static class PromiseWhen Inheritance object PromiseWhen Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods When(Promise, Action) Executes a continuation when the target resolves (with failure-coalescing). public static Promise When(this Promise target, Action body) Parameters target Promise The trigger for execution. body Action The continuation to execute if the trigger succeeded. Returns Promise Resolves to the outcome (either the trigger's failure, or the continuation's outcome). When(Promise, Func<Promise>) Executes a continuation when the target resolves (with failure-coalescing). public static Promise When(this Promise target, Func<Promise> body) Parameters target Promise The trigger for execution. body Func<Promise> The continuation to execute if the trigger succeeded. Returns Promise Resolves to the outcome (either the trigger's failure, or the continuation's outcome). When<TResult>(Promise, Func<Promise<TResult>>) Executes a continuation when the target resolves (with failure-coalescing). public static Promise<TResult> When<TResult>(this Promise target, Func<Promise<TResult>> body) Parameters target Promise The trigger for execution. body Func<Promise<TResult>> The continuation to execute if the trigger succeeded. Returns Promise<TResult> Resolves to the outcome (either the trigger's failure, or the continuation's outcome). Type Parameters TResult When<T>(Promise<T>, Action<T>) Executes a continuation when the target resolves (with failure-coalescing). public static Promise When<T>(this Promise<T> target, Action<T> body) Parameters target Promise<T> The trigger for execution. body Action<T> The continuation to execute if the trigger succeeded. Returns Promise Resolves to the outcome (either the trigger's failure, or the continuation's outcome). Type Parameters T When<T>(Promise<T>, Func<T, Promise>) Executes a continuation when the target resolves (with failure-coalescing). public static Promise When<T>(this Promise<T> target, Func<T, Promise> body) Parameters target Promise<T> The trigger for execution. body Func<T, Promise> The continuation to execute if the trigger succeeded. Returns Promise Resolves to the outcome (either the trigger's failure, or the continuation's outcome). Type Parameters T When<T, TResult>(Promise<T>, Func<T, Promise<TResult>>) Executes a continuation when the target resolves (with failure-coalescing). public static Promise<TResult> When<T, TResult>(this Promise<T> target, Func<T, Promise<TResult>> body) Parameters target Promise<T> The trigger for execution. body Func<T, Promise<TResult>> The continuation to execute if the trigger succeeded. Returns Promise<TResult> Resolves to the outcome (either the trigger's failure, or the continuation's outcome). Type Parameters T TResult When<T, TResult>(Promise<T>, Func<T, TResult>) Executes a continuation when the target resolves (with failure-coalescing). public static Promise<TResult> When<T, TResult>(this Promise<T> target, Func<T, TResult> body) Parameters target Promise<T> The trigger for execution. body Func<T, TResult> The continuation to execute if the trigger succeeded. Returns Promise<TResult> Resolves to the outcome (either the trigger's failure, or the continuation's outcome). Type Parameters T TResult"
  },
  "api/MarymoorStudios.Core.Promises.PromiseWithCancellation.html": {
    "href": "api/MarymoorStudios.Core.Promises.PromiseWithCancellation.html",
    "title": "Class PromiseWithCancellation",
    "summary": "Class PromiseWithCancellation Namespace MarymoorStudios.Core.Promises Assembly MarymoorStudios.Core.Promises.dll public static class PromiseWithCancellation Inheritance object PromiseWithCancellation Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods WithCancellation(Promise, CancellationToken) Adds the ability to cancel awaiting on an underlying promise. public static Promise WithCancellation(this Promise target, CancellationToken cancel) Parameters target Promise The underlying promise. cancel CancellationToken A token to indicate that awaiting on target should be cancelled. Returns Promise A promise that either is cancelled or forwarded to the underlying promise. Remarks Cancellation ONLY cancels the awaiting on the underlying promise, not the underlying promise itself or the eventual computation that will produce that promise. To cancel the eventual computation itself a CancellationToken should be passed to that computation when it is started. WithCancellation<T>(Promise<T>, CancellationToken) Adds the ability to cancel awaiting on an underlying promise. public static Promise<T> WithCancellation<T>(this Promise<T> target, CancellationToken cancel) Parameters target Promise<T> The underlying promise. cancel CancellationToken A token to indicate that awaiting on target should be cancelled. Returns Promise<T> A promise that either is cancelled or forwarded to the underlying promise. Type Parameters T The type of the underlying promise. Remarks Cancellation ONLY cancels the awaiting on the underlying promise, not the underlying promise itself or the eventual computation that will produce that promise. To cancel the eventual computation itself a CancellationToken should be passed to that computation when it is started."
  },
  "api/MarymoorStudios.Core.Promises.Resolver-1.html": {
    "href": "api/MarymoorStudios.Core.Promises.Resolver-1.html",
    "title": "Class Resolver<T>",
    "summary": "Class Resolver<T> Namespace MarymoorStudios.Core.Promises Assembly MarymoorStudios.Core.Promises.dll A capability for resolving an eventual computation. public sealed class Resolver<T> : AResolver Type Parameters T Inheritance object AResolver Resolver<T> Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Remarks A resolver is used to produce the outcome for an eventual computation being tracked by a Promise or a Promise<T>. Producing an outcome (success or failure) is a one-way function. Once an outcome is determined it cannot be taken back or altered. Multiple observers (e.g. multiple Promise's) may share the outcome. Constructors Resolver() Creates a new unresolved resolver. public Resolver() Resolver(Exception) Creates a failed resolver whose outcome is ex. public Resolver(Exception ex) Parameters ex Exception The error the resolver failed with. Resolver(T) Creates a successfully resolved resolver whose outcome is value. public Resolver(T value) Parameters value T The successful value. Properties Failure The error the resolver failed with. public Exception Failure { get; } Property Value Exception Remarks REQUIRES: the resolver has failed. IsFailed True if the resolver has failed. public bool IsFailed { get; } Property Value bool IsResolved True if the resolver is in a resolved state (either success or failure). public override sealed bool IsResolved { get; } Property Value bool IsSuccess True if the resolver has been resolved successfully. public bool IsSuccess { get; } Property Value bool ValueType For a Resolver<T>, returns typeof(T). public override sealed Type ValueType { get; } Property Value Type Methods AppendOne(Turn) Registers a turn to be scheduled when this resolver becomes resolved. public override sealed void AppendOne(Turn turn) Parameters turn Turn The turn to be scheduled. Remarks If this resolver is already resolved then turn will be scheduled immediately. Break(Exception) Permanently transition the resolver to the \"failed\" state with ex as the outcome. public void Break(Exception ex) Parameters ex Exception The error to use in a failed outcome. Forward(Promise<T>) Permanently transition the resolver to the \"forwarded\" state with whatever p's outcome becomes as the outcome. public void Forward(Promise<T> p) Parameters p Promise<T> The promise whose future outcome should be this resolver's outcome. Forward(Resolver<T>) Permanently transition the resolver to the \"forwarded\" state with whatever r's outcome becomes as the outcome. public void Forward(Resolver<T> r) Parameters r Resolver<T> The resolver whose future outcome should be this resolver's outcome. GetResult() Returns the final outcome. public T GetResult() Returns T Remarks REQUIRES: the resolver is resolved. If the resolver has failed then the failing error is rethrown from this method. Resolve(T) Permanently transition the resolver to the \"success\" state with value as the outcome. public void Resolve(T value) Parameters value T The value to use in a successful outcome."
  },
  "api/MarymoorStudios.Core.Promises.ResolverExtensions.html": {
    "href": "api/MarymoorStudios.Core.Promises.ResolverExtensions.html",
    "title": "Class ResolverExtensions",
    "summary": "Class ResolverExtensions Namespace MarymoorStudios.Core.Promises Assembly MarymoorStudios.Core.Promises.dll Extensions for Resolver<T>. public static class ResolverExtensions Inheritance object ResolverExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods Resolve(Resolver<Void>) Resolve Promise without a value. public static void Resolve(this Resolver<Void> r) Parameters r Resolver<Void> The resolver"
  },
  "api/MarymoorStudios.Core.Promises.ResolverTurn-1.html": {
    "href": "api/MarymoorStudios.Core.Promises.ResolverTurn-1.html",
    "title": "Class ResolverTurn<T>",
    "summary": "Class ResolverTurn<T> Namespace MarymoorStudios.Core.Promises Assembly MarymoorStudios.Core.Promises.dll public abstract class ResolverTurn<T> : Turn Type Parameters T Inheritance object Turn ResolverTurn<T> Derived ARpcMessage<TServer> Inherited Members Turn.Id object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors ResolverTurn() protected ResolverTurn() Methods OnFailure(Exception) Execute the error path when the outcome is a failure. protected abstract void OnFailure(Exception ex) Parameters ex Exception The failed outcome. OnSuccess(T) Execute the success path when the outcome is a success. protected abstract void OnSuccess(T value) Parameters value T The successful outcome. ResetTurnState() Allows the turn to be reused (after Run()). protected void ResetTurnState() Run() Runs the computation of this Turn when chosen for execution by the Scheduler. protected override sealed void Run()"
  },
  "api/MarymoorStudios.Core.Promises.RingBuffer-1.html": {
    "href": "api/MarymoorStudios.Core.Promises.RingBuffer-1.html",
    "title": "Class RingBuffer<T>",
    "summary": "Class RingBuffer<T> Namespace MarymoorStudios.Core.Promises Assembly MarymoorStudios.Core.Promises.dll A fixed-sized, shared-memory, Transport<T>. public sealed class RingBuffer<T> : Transport<T>, IAsyncDisposable Type Parameters T The item type. Inheritance object Transport<T> RingBuffer<T> Implements IAsyncDisposable Inherited Members Transport<T>.DisposeAsync() object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors RingBuffer(ushort, ushort) Constructs a new RingBuffer<T> public RingBuffer(ushort capacity, ushort threshold = 1) Parameters capacity ushort The size of the buffer allocated (in number of items). threshold ushort The number of items of empty space available before the producer is signaled. Remarks REQUIRES: capacity > 2 REQUIRES: 1 <= threshold < capacity -1 Capacity is equal to the size of the memory allocation (in number of items) but one item is consumed as a sentinel for \"full\", so the buffer can actually hold one less. Threshold is used to decrease ping-ponging by delaying waking the producer until there are more items in the buffer. There is a tradeoff between added latency and buffering costs on the writer side versus signalling costs. The default value is 1 causing the producer to be signalled whenever there is at least one slot available. Properties ConsumerEvent Event to efficiently signal the consumer when items are available to read. public override sealed WaitHandle ConsumerEvent { get; } Property Value WaitHandle Remarks This event only signals on the transition between an empty queue and having at least one item, so the caller should read the queue to completion before waiting on this event. ProducerEvent Event to efficiently signal the producer when slots are available to write. public override sealed WaitHandle ProducerEvent { get; } Property Value WaitHandle Remarks This event only signals on the transition between a full queue and having at least threshold items, so the caller should write to the queue until full before waiting on this event. Methods Close(TransportFlags) Marks the buffer as closed atomically. public override sealed bool Close(TransportFlags flags = TransportFlags.Closed) Parameters flags TransportFlags Indicates which side(s) to close. Returns bool True if the both sides have closed, false if only one side has closed as of this call. Remarks No more items can be inserted after this call returns. Either side (producer or consumer) can close the buffer. Typically, the consumer will continue to read items until TryDequeue(out T) indicates the closure has been seen. This ensures that all buffered items have been removed, regardless of which side closed first. Both sides should close the buffer before the last side to close can then safely dispose. DisposeAsync(bool) Standard dispose pattern for subclasses. protected override sealed ValueTask DisposeAsync(bool disposing) Parameters disposing bool True if both native and managed resources are being disposed. False if only native resources (i.e. in finalizer). When native only then MUST be prompt. Returns ValueTask TryDequeue(out T) Attempt to remove an item from the front of the buffer. public override sealed bool TryDequeue(out T item) Parameters item T If successful, the item removed from the buffer, default otherwise. Returns bool True if an item was successfully remove, false if the buffer is empty. Remarks If item is successfully removed the caller takes ownership of it and is responsible for releasing its resources. If the attempt to dequeue fails then item is default. Exceptions AbortedException If the buffer has been closed AND all buffered items have been read. TryEnqueue(ref T) Attempt to insert an item at the end of the buffer. public override sealed bool TryEnqueue(ref T item) Parameters item T The item to be inserted. Returns bool True if the item was inserted, false if the buffer is full. Remarks On a successful insert the buffer takes ownership of item and its value is set to default. If item cannot be inserted (either because 'full' or 'closed') then false is returned and item is unmodified (still owned by the caller); the caller is then responsible for releasing any resources. Exceptions AbortedException If the buffer has already been closed."
  },
  "api/MarymoorStudios.Core.Promises.Runner.html": {
    "href": "api/MarymoorStudios.Core.Promises.Runner.html",
    "title": "Class Runner",
    "summary": "Class Runner Namespace MarymoorStudios.Core.Promises Assembly MarymoorStudios.Core.Promises.dll Abstract based class for turn runners. public abstract class Runner : IDisposable Inheritance object Runner Implements IDisposable Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Remarks Turn runners can be registered with the scheduler. Each runner handles a source of turns external to the local Scheduler's computation (e.g. external IO). Constructors Runner() protected Runner() Properties WaitHandle A wait handle for efficient waiting for work. public abstract WaitHandle WaitHandle { get; } Property Value WaitHandle Remarks This wait handle should become signaled when Run() is likely to produce turns. A Runner with a signaled wait handle is consider \"runnable\" and will be scheduled (according to a fair scheduling policy defined by the Scheduler in some order interleaved with other runnable Runners and other local turns. It is acceptable for WaitHandle to over-signal (i.e. to become signaled even when Run() does NOT have work to do), but it MUST never be under-signaled (i.e. it MUST become signaled whenever Run() DOES have work to do). Under-signaled Runners will not be properly scheduled by the Scheduler. Methods Dispose() public void Dispose() Dispose(bool) Standard dispose pattern for subclasses. protected virtual void Dispose(bool disposing) Parameters disposing bool True if both native and managed resources are being disposed. False if only native resources (i.e. in finalizer). ~Runner() Finalizer. protected ~Runner() Run() Performs work on behalf of the Runner. protected abstract bool Run() Returns bool True if this Runner is still \"runnable\" after this call returns (and so should be scheduled again without waiting for WaitHandle to become signaled). False if this Runner is no longer \"runnable\" (has completed all pending work) and shouldn't be scheduled again until its WaitHandle becomes signaled once again. Remarks This method is guaranteed to be called by the Scheduler at the \"top-of-turn\" (i.e. when there is no other context pushed on the stack above the call to Run())."
  },
  "api/MarymoorStudios.Core.Promises.SafeDispose.html": {
    "href": "api/MarymoorStudios.Core.Promises.SafeDispose.html",
    "title": "Class SafeDispose",
    "summary": "Class SafeDispose Namespace MarymoorStudios.Core.Promises Assembly MarymoorStudios.Core.Promises.dll Utilities to safely dispose generic values. public static class SafeDispose Inheritance object SafeDispose Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods Dispose<T>(Span<T>) Disposes a set of generic values IFF each is disposable. public static Promise Dispose<T>(Span<T> batch) Parameters batch Span<T> Returns Promise Type Parameters T Remarks This method is a no-op for non-disposable values. This method NEVER fails. Dispose<T>(T) Disposes a generic value IFF it is disposable. public static Promise Dispose<T>(T item) Parameters item T Returns Promise Type Parameters T Remarks This method is a no-op for non-disposable values. This method NEVER fails."
  },
  "api/MarymoorStudios.Core.Promises.Scheduler.html": {
    "href": "api/MarymoorStudios.Core.Promises.Scheduler.html",
    "title": "Class Scheduler",
    "summary": "Class Scheduler Namespace MarymoorStudios.Core.Promises Assembly MarymoorStudios.Core.Promises.dll A scheduler of turns. public sealed class Scheduler : IDisposable Inheritance object Scheduler Implements IDisposable Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors Scheduler() public Scheduler() Properties Current The current scheduler. public static Scheduler Current { get; set; } Property Value Scheduler Remarks Only one scheduler can be active on a thread at one time. Id The diagnostic id of the current scheduler. public static DiagnosticId Id { get; } Property Value DiagnosticId IsAttached True if a scheduler is attached to the current thread. public static bool IsAttached { get; } Property Value bool Methods AddExternal(Action) Adds an external (thread-safe) turn to the external turn queue. public void AddExternal(Action turn) Parameters turn Action Remarks The caller is responsible for ensuring that turn does not close over any non-thread safe state. AddExternal(Action<object?, object?, object?>, object?, object?, object?) Adds an external (thread-safe) turn to the external turn queue. public void AddExternal(Action<object?, object?, object?> turn, object? state1, object? state2, object? state3) Parameters turn Action<object, object, object> state1 object 1st state to be passed to the action. state2 object 2nd state to be passed to the action. state3 object 3rd state to be passed to the action. Remarks The caller is responsible for ensuring that turn does not close over any non-thread safe state. AddExternal(Action<object?, object?>, object?, object?) Adds an external (thread-safe) turn to the external turn queue. public void AddExternal(Action<object?, object?> turn, object? state1, object? state2) Parameters turn Action<object, object> state1 object 1st state to be passed to the action. state2 object 2nd state to be passed to the action. Remarks The caller is responsible for ensuring that turn does not close over any non-thread safe state. AddExternal(Action<object?>, object?) Adds an external (thread-safe) turn to the external turn queue. public void AddExternal(Action<object?> turn, object? state) Parameters turn Action<object> state object state to be passed to the action. Remarks The caller is responsible for ensuring that turn does not close over any non-thread safe state. Delay(TimeSpan) Creates a promise that will resolve after a time delay. public static Promise Delay(TimeSpan delay) Parameters delay TimeSpan The time span to wait. Returns Promise A Promise that will resolve when at least delay time has passed. Detach() Detaches a scheduler from the current thread. public void Detach() Remarks Attempts to detach a scheduler from the current thread. If the given scheduler is NOT the current scheduler on the thread (perhaps because it has already been detached or disposed) then this method does nothing. Dispose() public void Dispose() Register(Runner) Registers a Runner with this scheduler. public static void Register(Runner runner) Parameters runner Runner The runner to register. Remarks The scheduler takes \"ownership\" of the runner and will dispose its resources. Run(Turn) Runs an abstract turn on the current scheduler. public static void Run(Turn turn) Parameters turn Turn The turn to run. Run(Func<Promise>) Runs an abstract eventual function on the current scheduler. public static Promise Run(Func<Promise> func) Parameters func Func<Promise> The function to run. Returns Promise A Promise that will resolve when func completes. Run(CancellationToken) Converts a cancellation token into a Promise on the current scheduler. public static Promise Run(CancellationToken cancel) Parameters cancel CancellationToken The cancellation token to convert. Returns Promise A Promise that will resolve when cancel is cancelled. RunUntilCancelled(CancellationToken, bool) Runs all turns (internal and external) until cancellation is signaled. public bool RunUntilCancelled(CancellationToken cancel, bool canBlock = true) Parameters cancel CancellationToken The cancellation token to cancel operation. canBlock bool True if the loop should block on IO (or exit). Returns bool True if there is more local work to do, or false if blocked on IO or cancelled. Unregister(Runner) Unregisters a Runner from this scheduler. public static void Unregister(Runner runner) Parameters runner Runner The runner to unregister. Remarks The runner is removed atomically. No further calls to Run() will be made after this call returns. It is safe to call this method from within a call to Run(). The scheduler releases \"ownership\" of the runner to the caller who is now responsible for calling dispose to release its resources."
  },
  "api/MarymoorStudios.Core.Promises.Sip.html": {
    "href": "api/MarymoorStudios.Core.Promises.Sip.html",
    "title": "Class Sip",
    "summary": "Class Sip Namespace MarymoorStudios.Core.Promises Assembly MarymoorStudios.Core.Promises.dll A Software Isolated Process (SIP). public sealed class Sip : IDisposable Inheritance object Sip Implements IDisposable Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Remarks A Software Isolated Process (SIP) is a single-threaded container that logically encapsulates a collection of concurrent (but not parallel) activities. A SIP may only execute on a single thread at a time, but at certain points (aka top-of-turn) it can be moved between threads (as all program state is known to be in the heap). Being single-threaded, all computation within a SIP does not need locks, and is free from race conditions. Computations running within a SIP can communicate with other SIP, either in the same process, in another process on the same machine, or on another machine, by using non-blocking Remote Procedure Calls (such as through Promise-based RPC). Once created, a SIP can be run until either: The completion of a root computation (e.g. an AsyncMain function). The SIP's progress is blocked on IO (including timers). Constructors Sip() Constructs a new SIP. public Sip() Methods CreateAndRun(Func<Promise>) Create a sip, run it to completion on the current thread, and then dispose it. public static void CreateAndRun(Func<Promise> asyncMain) Parameters asyncMain Func<Promise> The root computation. See Run(Func<Promise>) CreateAndRun<TArgs>(TArgs, Func<TArgs, Promise>) Create a sip, run it to completion on the current thread, and then dispose it. public static void CreateAndRun<TArgs>(TArgs args, Func<TArgs, Promise> asyncMain) Parameters args TArgs The arguments to the root computation. asyncMain Func<TArgs, Promise> The root computation. See Run(Func<Promise>) Type Parameters TArgs CreateAndRun<TArgs, TReturn>(TArgs, Func<TArgs, Promise<TReturn>>) Create a sip, run it to completion on the current thread, and then dispose it. public static TReturn CreateAndRun<TArgs, TReturn>(TArgs args, Func<TArgs, Promise<TReturn>> asyncMain) Parameters args TArgs The arguments to the root computation. asyncMain Func<TArgs, Promise<TReturn>> The root computation. See Run(Func<Promise>) Returns TReturn Type Parameters TArgs TReturn Dispose() public void Dispose() Run(Func<Promise>) Run until the root computation asyncMain has completed. public void Run(Func<Promise> asyncMain) Parameters asyncMain Func<Promise> The root computation. Remarks All computation within the SIP should be rolled up hierarchically into the return value of asyncMain. Run<TArgs>(TArgs, Func<TArgs, Promise>) Run until the root computation asyncMain has completed. public void Run<TArgs>(TArgs args, Func<TArgs, Promise> asyncMain) Parameters args TArgs The arguments to the root computation. asyncMain Func<TArgs, Promise> The root computation. Type Parameters TArgs Remarks All computation within the SIP should be rolled up hierarchically into the return value of asyncMain. Run<TArgs, TReturn>(TArgs, Func<TArgs, Promise<TReturn>>) Run until the root computation asyncMain has completed. public TReturn Run<TArgs, TReturn>(TArgs args, Func<TArgs, Promise<TReturn>> asyncMain) Parameters args TArgs The arguments to the root computation. asyncMain Func<TArgs, Promise<TReturn>> The root computation. Returns TReturn Type Parameters TArgs TReturn Remarks All computation within the SIP should be rolled up hierarchically into the return value of asyncMain."
  },
  "api/MarymoorStudios.Core.Promises.Transport-1.html": {
    "href": "api/MarymoorStudios.Core.Promises.Transport-1.html",
    "title": "Class Transport<T>",
    "summary": "Class Transport<T> Namespace MarymoorStudios.Core.Promises Assembly MarymoorStudios.Core.Promises.dll A FIFO queue of ordered discrete items. public abstract class Transport<T> : IAsyncDisposable Type Parameters T The item type. Inheritance object Transport<T> Implements IAsyncDisposable Derived RingBuffer<T> Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Remarks The Transport<T> is a FIFO for communicating a totally ordered series of \"items\" from a producer to a consumer. Though the Transport<T> is thread-safe, it supports only a single producer and a single consumer at one time. The producer and consumer MAY (and usually do) operate in separate threads. (The producer and consumer MAY operate in a single thread, but care should be taken when waiting on the handles (see below) to ensure the thread is not live-locked.) A Transport<T> takes \"ownership\" of any item written to the queue and subsequently transfers \"ownership\" to the consumer when the item is read. The consumer is responsible for releasing or disposing any linear resources transferred through the queue (including memory buffers). The Transport<T> supports efficient blocking for both producer and consumer operations through the ProducerEvent and ConsumerEvent properties respectively. The producer handle is guaranteed to be signaled ONLY AFTER a failed enqueue operation due to the queue being full. Similarly, the consumer handle is guaranteed to be signaled ONLY AFTER a failed dequeue operation due to the queue being empty. Both the producer and the consumer should loop performing their operations until a blocking condition is so indicated before attempting to wait on their respective handle. The wait handles MAY over-signal (i.e. signal even though the corresponding operation will fail due to resource constraints). The caller should be prepared to wait again if that happens. All events will be signaled at least once if the buffer is \"closed\" by either party. Events are NOT guaranteed to be signaled MORE THAN ONCE after a Close(TransportFlags), so both parties MUST aggressively respond to closure indications. It is \"safe\" to call any operation after a successful \"close\" by either (or both) parties. Producers will receive a persistent AbortedException on all enqueue attempts after closure. Consumers will receive a persistent AbortedException on all dequeue attempts ONLY AFTER all pending items have been delivered (allowing the consumer to release and dispose all pending resources safely). Both parties MUST call Close(TransportFlags) at least once. In general the consumer \"owns\" the Transport<T> and is responsible for calling DisposeAsync() when it is no longer needed. The consumer MUST ensure that the producer has released any references to the ProducerEvent which it does so by calling Close(TransportFlags) on its side and receiving a true response. The producer should NEVER access any part of the Transport<T> or its handles AFTER calling Close(TransportFlags) for its side. The consumer MUST release any references to the ConsumerEvent BEFORE calling DisposeAsync(). If the consumer initiates closure it should: Call TryDequeue(out T) in a loop until the queue is empty, then Call Close(TransportFlags) again. If Close(TransportFlags) returns true then it is \"safe\" to dispose, otherwise. Wait on ConsumerEvent until it signals (indicating that the producer has called Close(TransportFlags)) and then dispose. It is \"safe\" for the producer to dispose the Transport<T> ONLY IF the consumer was never successfully started. Constructors Transport() protected Transport() Properties ConsumerEvent Event to efficiently signal the consumer when items are available to read. public abstract WaitHandle ConsumerEvent { get; } Property Value WaitHandle Remarks This event only signals on the transition between an empty queue and having at least one item, so the caller should read the queue to completion before waiting on this event. ProducerEvent Event to efficiently signal the producer when slots are available to write. public abstract WaitHandle ProducerEvent { get; } Property Value WaitHandle Remarks This event only signals on the transition between a full queue and having at least threshold items, so the caller should write to the queue until full before waiting on this event. Methods Close(TransportFlags) Marks the buffer as closed atomically. public abstract bool Close(TransportFlags flags = TransportFlags.Closed) Parameters flags TransportFlags Indicates which side(s) to close. Returns bool True if the both sides have closed, false if only one side has closed as of this call. Remarks No more items can be inserted after this call returns. Either side (producer or consumer) can close the buffer. Typically, the consumer will continue to read items until TryDequeue(out T) indicates the closure has been seen. This ensures that all buffered items have been removed, regardless of which side closed first. Both sides should close the buffer before the last side to close can then safely dispose. DisposeAsync() public ValueTask DisposeAsync() Returns ValueTask DisposeAsync(bool) Standard dispose pattern for subclasses. protected virtual ValueTask DisposeAsync(bool disposing) Parameters disposing bool True if both native and managed resources are being disposed. False if only native resources (i.e. in finalizer). When native only then MUST be prompt. Returns ValueTask ~Transport() Finalizer. protected ~Transport() TryDequeue(out T) Attempt to remove an item from the front of the buffer. public abstract bool TryDequeue(out T item) Parameters item T If successful, the item removed from the buffer, default otherwise. Returns bool True if an item was successfully remove, false if the buffer is empty. Remarks If item is successfully removed the caller takes ownership of it and is responsible for releasing its resources. If the attempt to dequeue fails then item is default. Exceptions AbortedException If the buffer has been closed AND all buffered items have been read. TryEnqueue(ref T) Attempt to insert an item at the end of the buffer. public abstract bool TryEnqueue(ref T item) Parameters item T The item to be inserted. Returns bool True if the item was inserted, false if the buffer is full. Remarks On a successful insert the buffer takes ownership of item and its value is set to default. If item cannot be inserted (either because 'full' or 'closed') then false is returned and item is unmodified (still owned by the caller); the caller is then responsible for releasing any resources. Exceptions AbortedException If the buffer has already been closed."
  },
  "api/MarymoorStudios.Core.Promises.TransportFlags.html": {
    "href": "api/MarymoorStudios.Core.Promises.TransportFlags.html",
    "title": "Enum TransportFlags",
    "summary": "Enum TransportFlags Namespace MarymoorStudios.Core.Promises Assembly MarymoorStudios.Core.Promises.dll Status flags for a Transport<T>. [Flags] public enum TransportFlags : ushort Fields None = 0 Nothing ConsumerClosed = 1 The transport has been closed by the Consumer. ProducerClosed = 2 The transport has been closed by the Producer. Closed = ConsumerClosed | ProducerClosed Both sides have closed."
  },
  "api/MarymoorStudios.Core.Promises.Turn.TurnEnumerator.html": {
    "href": "api/MarymoorStudios.Core.Promises.Turn.TurnEnumerator.html",
    "title": "Struct Turn.TurnEnumerator",
    "summary": "Struct Turn.TurnEnumerator Namespace MarymoorStudios.Core.Promises Assembly MarymoorStudios.Core.Promises.dll An enumerator for a TurnList. public struct Turn.TurnEnumerator : IEnumerator<Turn>, IEnumerator, IDisposable Implements IEnumerator<Turn> IEnumerator IDisposable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Properties Current public readonly Turn Current { get; } Property Value Turn Methods Dispose() public readonly void Dispose() MoveNext() public bool MoveNext() Returns bool Reset() public void Reset()"
  },
  "api/MarymoorStudios.Core.Promises.Turn.html": {
    "href": "api/MarymoorStudios.Core.Promises.Turn.html",
    "title": "Class Turn",
    "summary": "Class Turn Namespace MarymoorStudios.Core.Promises Assembly MarymoorStudios.Core.Promises.dll The basic unit of work in the scheduler. public abstract class Turn Inheritance object Turn Derived ResolverTurn<T> Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Remarks A Turn can represent a single function, a complex prompt computation, an RPC method, an external IO or any other kind of prompt computation. A Turn is a single unit of prompt computation within a single-threaded Scheduler. Complex computations involving one or more blocking states or multiple IOs can be broken up into a directed graph of Turns, each of which is scheduled independently and are typically linked together through a chain of Promises. Such a complex computation is considered complete when the Promise returned by its root Turn resolves. Constructors Turn() Creates a new unattached (not part of a list) turn. protected Turn() Properties Id A unique identifier for this turn. public ulong Id { get; } Property Value ulong Remarks Ids are guaranteed to be monotonic. Methods Run() Runs the computation of this Turn when chosen for execution by the Scheduler. protected abstract void Run()"
  },
  "api/MarymoorStudios.Core.Promises.TurnList.html": {
    "href": "api/MarymoorStudios.Core.Promises.TurnList.html",
    "title": "Struct TurnList",
    "summary": "Struct TurnList Namespace MarymoorStudios.Core.Promises Assembly MarymoorStudios.Core.Promises.dll A circular, singularly-linked list of turns. public struct TurnList : IEnumerable<Turn>, IEnumerable Implements IEnumerable<Turn> IEnumerable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Properties Count The number of items in this (possibly empty) list. public readonly int Count { get; } Property Value int IsEmpty True if the list is empty, false otherwise. public readonly bool IsEmpty { get; } Property Value bool Methods Append(ref TurnList) Appends a complete (possibly empty) list to another (possibly empty) list. public void Append(ref TurnList source) Parameters source TurnList The (possibly empty) list of turns to append to the end of this list. AppendOne(Turn) Appends an unattached (not part of a list) turn to this list. public void AppendOne(Turn source) Parameters source Turn The unattached turn to append to the end of this list. GetEnumerator() Returns a pattern-based (non-allocating) enumerator. public readonly Turn.TurnEnumerator GetEnumerator() Returns Turn.TurnEnumerator TryRemoveHead(out Turn) Attempts to remove one item from the head of this list. public bool TryRemoveHead(out Turn item) Parameters item Turn If successful, the item that was removed from the head of this list, null otherwise. Returns bool True if an item was successfully removed, false otherwise."
  },
  "api/MarymoorStudios.Core.Promises.Void.html": {
    "href": "api/MarymoorStudios.Core.Promises.Void.html",
    "title": "Class Void",
    "summary": "Class Void Namespace MarymoorStudios.Core.Promises Assembly MarymoorStudios.Core.Promises.dll A marker type that reifies void. public sealed class Void Inheritance object Void Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Fields Instance The one and only instance. public static readonly Void Instance Field Value Void"
  },
  "api/MarymoorStudios.Core.Promises.html": {
    "href": "api/MarymoorStudios.Core.Promises.html",
    "title": "Namespace MarymoorStudios.Core.Promises",
    "summary": "Namespace MarymoorStudios.Core.Promises Classes AResolver Abstract base class for Resolver<T>. AutoResetEventAsync An eventual auto-reset event. Joiner Joins multiple promises together. PromiseFinally PromiseJoin PromiseOnCompleted PromiseWhen PromiseWithCancellation ResolverExtensions Extensions for Resolver<T>. ResolverTurn<T> Resolver<T> A capability for resolving an eventual computation. RingBuffer<T> A fixed-sized, shared-memory, Transport<T>. Runner Abstract based class for turn runners. SafeDispose Utilities to safely dispose generic values. Scheduler A scheduler of turns. Sip A Software Isolated Process (SIP). Transport<T> A FIFO queue of ordered discrete items. Turn The basic unit of work in the scheduler. Void A marker type that reifies void. Structs DiagnosticId A unique id for diagnostic purposes. Promise A representation of the future outcome of a computation. PromiseAwaiter Enables the await keyword for Promise. PromiseAwaiter<T> Enables the await keyword for Promise<T>. PromiseMethodBuilder Enables the async keyword for methods that return a Promise. PromiseMethodBuilder<T> Enables the async keyword for methods that return a Promise<T>. Promise<T> A representation of the future outcome of a computation. Turn.TurnEnumerator An enumerator for a TurnList. TurnList A circular, singularly-linked list of turns. Interfaces IIPromiseEnumerator<T> Supports a simple asynchronous iteration over a generic collection. IPromiseDisposable A promise-based replacement for IAsyncDisposable. IPromiseEnumerable<T> Factory for asynchronous enumerators. Enums TransportFlags Status flags for a Transport<T>."
  },
  "api/MarymoorStudios.Core.RandomExtensions.html": {
    "href": "api/MarymoorStudios.Core.RandomExtensions.html",
    "title": "Class RandomExtensions",
    "summary": "Class RandomExtensions Namespace MarymoorStudios.Core Assembly MarymoorStudios.Core.dll public static class RandomExtensions Inheritance object RandomExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods NextBool(Random) Returns a fairly distributed boolean. public static bool NextBool(this Random rand) Parameters rand Random Returns bool NextEnum<TEnum>(Random) Returns a uniformly distributed value from chosen enum. public static TEnum NextEnum<TEnum>(this Random rand) where TEnum : struct, Enum Parameters rand Random Returns TEnum Type Parameters TEnum NextNormal(Random) Generates two pseudo-random independent variables from a normal distribution. public static (double Z0, double Z1) NextNormal(this Random rand) Parameters rand Random Random source Returns (double Z0, double Z1) A pair of independent variables. NextNormal(Random, double, double) Generates two pseudo-random independent variables from a normal distribution. public static (double Z0, double Z1) NextNormal(this Random rand, double mean, double stddev) Parameters rand Random Random source mean double mean of the distribution stddev double standard deviation Returns (double Z0, double Z1) NextNormal(Random, TimeSpan, TimeSpan) Generates two pseudo-random independent variables from a normal distribution. public static (TimeSpan Z0, TimeSpan Z1) NextNormal(this Random rand, TimeSpan mean, TimeSpan stddev) Parameters rand Random Random source mean TimeSpan mean of the distribution stddev TimeSpan standard deviation Returns (TimeSpan Z0, TimeSpan Z1) NextUInt16(Random, ushort, ushort) Returns a uniformly distributed (max-inclusive) 16-bit unsigned integer. public static ushort NextUInt16(this Random rand, ushort min = 0, ushort max = 65535) Parameters rand Random min ushort max ushort Returns ushort NextUInt32(Random, uint, uint) Returns a uniformly distributed (max-inclusive) 32-bit unsigned integer. public static uint NextUInt32(this Random rand, uint min = 0, uint max = 4294967295) Parameters rand Random min uint max uint Returns uint NextUInt64(Random) Returns a uniformly distributed 64-bit unsigned integer. public static ulong NextUInt64(this Random rand) Parameters rand Random Returns ulong NextUInt8(Random, byte, byte) Returns a uniformly distributed (max-inclusive) 8-bit unsigned integer. public static byte NextUInt8(this Random rand, byte min = 0, byte max = 255) Parameters rand Random min byte max byte Returns byte"
  },
  "api/MarymoorStudios.Core.ReadLockScope.html": {
    "href": "api/MarymoorStudios.Core.ReadLockScope.html",
    "title": "Struct ReadLockScope",
    "summary": "Struct ReadLockScope Namespace MarymoorStudios.Core Assembly MarymoorStudios.Core.dll A read-lock scope for use with ReaderWriterLockSlim. public readonly struct ReadLockScope : IDisposable Implements IDisposable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors ReadLockScope(ReaderWriterLockSlim) Acquires a read-lock which is released on dispose. public ReadLockScope(ReaderWriterLockSlim m) Parameters m ReaderWriterLockSlim Methods Dispose() Releases the held lock. public void Dispose()"
  },
  "api/MarymoorStudios.Core.Rpc.ABytesRpcMessage-2.html": {
    "href": "api/MarymoorStudios.Core.Rpc.ABytesRpcMessage-2.html",
    "title": "Class ABytesRpcMessage<TMessage, TServer>",
    "summary": "Class ABytesRpcMessage<TMessage, TServer> Namespace MarymoorStudios.Core.Rpc Assembly MarymoorStudios.Core.Rpc.dll Abstract base class for all generated data-returning message types. public abstract class ABytesRpcMessage<TMessage, TServer> : ARpcMessage<TServer> where TMessage : ABytesRpcMessage<TMessage, TServer> where TServer : AServer<TServer> Type Parameters TMessage The message type itself. TServer The abstract server base class generated from the eventual interface. Inheritance object Turn ResolverTurn<TServer> ARpcMessage<TServer> ABytesRpcMessage<TMessage, TServer> Inherited Members ARpcMessage<TServer>.MethodName ResolverTurn<TServer>.ResetTurnState() ResolverTurn<TServer>.Run() Turn.Id object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors ABytesRpcMessage(MethodId) protected ABytesRpcMessage(MethodId methodId) Parameters methodId MethodId Properties Resolver protected override AResolver Resolver { get; } Property Value AResolver Result public Bytes Result { get; } Property Value Bytes Methods Break(Exception) protected override sealed void Break(Exception ex) Parameters ex Exception OnFailure(Exception) Execute the error path when the outcome is a failure. protected override sealed void OnFailure(Exception ex) Parameters ex Exception The failed outcome. OnSuccess(TServer) Execute the success path when the outcome is a success. protected override sealed void OnSuccess(TServer value) Parameters value TServer The successful outcome. Run(TServer) protected abstract Bytes Run(TServer server) Parameters server TServer Returns Bytes SizeOf(SerializationContext) protected override sealed int SizeOf(SerializationContext context) Parameters context SerializationContext Returns int Write(SerializationContext, ref RowBuffer) protected override sealed void Write(SerializationContext context, ref RowBuffer buffer) Parameters context SerializationContext buffer RowBuffer"
  },
  "api/MarymoorStudios.Core.Rpc.ADataRpcMessage-2.html": {
    "href": "api/MarymoorStudios.Core.Rpc.ADataRpcMessage-2.html",
    "title": "Class ADataRpcMessage<TMessage, TServer>",
    "summary": "Class ADataRpcMessage<TMessage, TServer> Namespace MarymoorStudios.Core.Rpc Assembly MarymoorStudios.Core.Rpc.dll Abstract base class for all generated void-returning message types. public abstract class ADataRpcMessage<TMessage, TServer> : ARpcMessage<TServer> where TMessage : ADataRpcMessage<TMessage, TServer> where TServer : AServer<TServer> Type Parameters TMessage The message type itself. TServer The abstract server base class generated from the eventual interface. Inheritance object Turn ResolverTurn<TServer> ARpcMessage<TServer> ADataRpcMessage<TMessage, TServer> Derived SyncMessage<TServer> Inherited Members ARpcMessage<TServer>.MethodName ResolverTurn<TServer>.ResetTurnState() ResolverTurn<TServer>.Run() Turn.Id object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors ADataRpcMessage(MethodId) protected ADataRpcMessage(MethodId methodId) Parameters methodId MethodId Properties Resolver protected override AResolver Resolver { get; } Property Value AResolver Result public Promise Result { get; } Property Value Promise Methods Break(Exception) protected override sealed void Break(Exception ex) Parameters ex Exception OnFailure(Exception) Execute the error path when the outcome is a failure. protected override sealed void OnFailure(Exception ex) Parameters ex Exception The failed outcome. OnSuccess(TServer) Execute the success path when the outcome is a success. protected override sealed void OnSuccess(TServer value) Parameters value TServer The successful outcome. Run(TServer) protected abstract Promise Run(TServer server) Parameters server TServer Returns Promise SizeOf(SerializationContext) protected override sealed int SizeOf(SerializationContext context) Parameters context SerializationContext Returns int Write(SerializationContext, ref RowBuffer) protected override sealed void Write(SerializationContext context, ref RowBuffer buffer) Parameters context SerializationContext buffer RowBuffer"
  },
  "api/MarymoorStudios.Core.Rpc.ADataRpcMessage-3.html": {
    "href": "api/MarymoorStudios.Core.Rpc.ADataRpcMessage-3.html",
    "title": "Class ADataRpcMessage<TMessage, TResult, TServer>",
    "summary": "Class ADataRpcMessage<TMessage, TResult, TServer> Namespace MarymoorStudios.Core.Rpc Assembly MarymoorStudios.Core.Rpc.dll Abstract base class for all generated data-returning message types. public abstract class ADataRpcMessage<TMessage, TResult, TServer> : ARpcMessage<TServer> where TMessage : ADataRpcMessage<TMessage, TResult, TServer> where TServer : AServer<TServer> Type Parameters TMessage The message type itself. TResult The type of the result. TServer The abstract server base class generated from the eventual interface. Inheritance object Turn ResolverTurn<TServer> ARpcMessage<TServer> ADataRpcMessage<TMessage, TResult, TServer> Inherited Members ARpcMessage<TServer>.MethodName ResolverTurn<TServer>.ResetTurnState() ResolverTurn<TServer>.Run() Turn.Id object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors ADataRpcMessage(MethodId) protected ADataRpcMessage(MethodId methodId) Parameters methodId MethodId Properties Resolver protected override AResolver Resolver { get; } Property Value AResolver Result public Promise<TResult> Result { get; } Property Value Promise<TResult> Methods Break(Exception) protected override sealed void Break(Exception ex) Parameters ex Exception OnFailure(Exception) Execute the error path when the outcome is a failure. protected override sealed void OnFailure(Exception ex) Parameters ex Exception The failed outcome. OnSuccess(TServer) Execute the success path when the outcome is a success. protected override sealed void OnSuccess(TServer value) Parameters value TServer The successful outcome. Run(TServer) protected abstract Promise<TResult> Run(TServer server) Parameters server TServer Returns Promise<TResult> SizeOf(SerializationContext) protected override sealed int SizeOf(SerializationContext context) Parameters context SerializationContext Returns int Write(SerializationContext, ref RowBuffer) protected override sealed void Write(SerializationContext context, ref RowBuffer buffer) Parameters context SerializationContext buffer RowBuffer"
  },
  "api/MarymoorStudios.Core.Rpc.AProxyRpcMessage-4.html": {
    "href": "api/MarymoorStudios.Core.Rpc.AProxyRpcMessage-4.html",
    "title": "Class AProxyRpcMessage<TMessage, TReturnProxy, TReturnServer, TServer>",
    "summary": "Class AProxyRpcMessage<TMessage, TReturnProxy, TReturnServer, TServer> Namespace MarymoorStudios.Core.Rpc Assembly MarymoorStudios.Core.Rpc.dll Abstract base class for all generated proxy-returning message types. public abstract class AProxyRpcMessage<TMessage, TReturnProxy, TReturnServer, TServer> : ARpcMessage<TServer> where TMessage : AProxyRpcMessage<TMessage, TReturnProxy, TReturnServer, TServer> where TReturnProxy : Proxy<TReturnServer>, IProxy<TReturnProxy, TReturnServer> where TReturnServer : AServer<TReturnServer> where TServer : AServer<TServer> Type Parameters TMessage The message type itself. TReturnProxy The type of the result. TReturnServer The type of the result abstract server base. TServer The abstract server base class generated from the eventual interface. Inheritance object Turn ResolverTurn<TServer> ARpcMessage<TServer> AProxyRpcMessage<TMessage, TReturnProxy, TReturnServer, TServer> Inherited Members ARpcMessage<TServer>.MethodName ResolverTurn<TServer>.ResetTurnState() ResolverTurn<TServer>.Run() Turn.Id object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors AProxyRpcMessage(MethodId) protected AProxyRpcMessage(MethodId methodId) Parameters methodId MethodId Properties Resolver protected override AResolver Resolver { get; } Property Value AResolver Result public TReturnProxy Result { get; } Property Value TReturnProxy Methods Break(Exception) protected override sealed void Break(Exception ex) Parameters ex Exception OnFailure(Exception) Execute the error path when the outcome is a failure. protected override sealed void OnFailure(Exception ex) Parameters ex Exception The failed outcome. OnSuccess(TServer) Execute the success path when the outcome is a success. protected override sealed void OnSuccess(TServer value) Parameters value TServer The successful outcome. Run(TServer) protected abstract TReturnProxy Run(TServer server) Parameters server TServer Returns TReturnProxy SizeOf(SerializationContext) protected override sealed int SizeOf(SerializationContext context) Parameters context SerializationContext Returns int Write(SerializationContext, ref RowBuffer) protected override sealed void Write(SerializationContext context, ref RowBuffer buffer) Parameters context SerializationContext buffer RowBuffer"
  },
  "api/MarymoorStudios.Core.Rpc.ARpcMessage-1.html": {
    "href": "api/MarymoorStudios.Core.Rpc.ARpcMessage-1.html",
    "title": "Class ARpcMessage<TServer>",
    "summary": "Class ARpcMessage<TServer> Namespace MarymoorStudios.Core.Rpc Assembly MarymoorStudios.Core.Rpc.dll public abstract class ARpcMessage<TServer> : ResolverTurn<TServer> Type Parameters TServer Inheritance object Turn ResolverTurn<TServer> ARpcMessage<TServer> Derived ABytesRpcMessage<TMessage, TServer> ADataRpcMessage<TMessage, TServer> ADataRpcMessage<TMessage, TResult, TServer> AProxyRpcMessage<TMessage, TReturnProxy, TReturnServer, TServer> ASequenceRpcMessage<TMessage, TItem, TServer> Inherited Members ResolverTurn<TServer>.ResetTurnState() ResolverTurn<TServer>.Run() ResolverTurn<TServer>.OnSuccess(TServer) ResolverTurn<TServer>.OnFailure(Exception) Turn.Id object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors ARpcMessage(MethodId) protected ARpcMessage(MethodId methodId) Parameters methodId MethodId Properties MethodName protected abstract string MethodName { get; } Property Value string Resolver protected abstract AResolver Resolver { get; } Property Value AResolver Methods Break(Exception) protected abstract void Break(Exception ex) Parameters ex Exception SizeOf(SerializationContext) protected abstract int SizeOf(SerializationContext context) Parameters context SerializationContext Returns int Write(SerializationContext, ref RowBuffer) protected abstract void Write(SerializationContext context, ref RowBuffer buffer) Parameters context SerializationContext buffer RowBuffer"
  },
  "api/MarymoorStudios.Core.Rpc.ASequenceRpcMessage-3.html": {
    "href": "api/MarymoorStudios.Core.Rpc.ASequenceRpcMessage-3.html",
    "title": "Class ASequenceRpcMessage<TMessage, TItem, TServer>",
    "summary": "Class ASequenceRpcMessage<TMessage, TItem, TServer> Namespace MarymoorStudios.Core.Rpc Assembly MarymoorStudios.Core.Rpc.dll Abstract base class for all generated data-returning message types. public abstract class ASequenceRpcMessage<TMessage, TItem, TServer> : ARpcMessage<TServer> where TMessage : ASequenceRpcMessage<TMessage, TItem, TServer> where TServer : AServer<TServer> Type Parameters TMessage The message type itself. TItem The type of the sequence items. TServer The abstract server base class generated from the eventual interface. Inheritance object Turn ResolverTurn<TServer> ARpcMessage<TServer> ASequenceRpcMessage<TMessage, TItem, TServer> Inherited Members ARpcMessage<TServer>.MethodName ResolverTurn<TServer>.ResetTurnState() ResolverTurn<TServer>.Run() Turn.Id object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors ASequenceRpcMessage(MethodId) protected ASequenceRpcMessage(MethodId methodId) Parameters methodId MethodId Properties Resolver protected override AResolver Resolver { get; } Property Value AResolver Result public Sequence<TItem> Result { get; } Property Value Sequence<TItem> Methods Break(Exception) protected override sealed void Break(Exception ex) Parameters ex Exception OnFailure(Exception) Execute the error path when the outcome is a failure. protected override sealed void OnFailure(Exception ex) Parameters ex Exception The failed outcome. OnSuccess(TServer) Execute the success path when the outcome is a success. protected override sealed void OnSuccess(TServer value) Parameters value TServer The successful outcome. Run(TServer) protected abstract Sequence<TItem> Run(TServer server) Parameters server TServer Returns Sequence<TItem> SizeOf(SerializationContext) protected override sealed int SizeOf(SerializationContext context) Parameters context SerializationContext Returns int Write(SerializationContext, ref RowBuffer) protected override sealed void Write(SerializationContext context, ref RowBuffer buffer) Parameters context SerializationContext buffer RowBuffer"
  },
  "api/MarymoorStudios.Core.Rpc.AServer-1.html": {
    "href": "api/MarymoorStudios.Core.Rpc.AServer-1.html",
    "title": "Class AServer<TServer>",
    "summary": "Class AServer<TServer> Namespace MarymoorStudios.Core.Rpc Assembly MarymoorStudios.Core.Rpc.dll Abstract base class for all eventual server types. public abstract class AServer<TServer> : IByRefRemotable where TServer : AServer<TServer> Type Parameters TServer The abstract server base class generated from the eventual interface. Inheritance object AServer<TServer> Implements IByRefRemotable Derived FileServer RemoteAdmissionManager.AdmissionServer MetadataServer NothingServer Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors AServer() protected AServer()"
  },
  "api/MarymoorStudios.Core.Rpc.BackgroundSip-2.html": {
    "href": "api/MarymoorStudios.Core.Rpc.BackgroundSip-2.html",
    "title": "Class BackgroundSip<TChildProxy, TChildServer>",
    "summary": "Class BackgroundSip<TChildProxy, TChildServer> Namespace MarymoorStudios.Core.Rpc Assembly MarymoorStudios.Core.Rpc.dll A Software Isolated Process (Sip) that runs in a background thread. public sealed class BackgroundSip<TChildProxy, TChildServer> : IPromiseDisposable where TChildProxy : Proxy<TChildServer>, IProxy<TChildProxy, TChildServer> where TChildServer : AServer<TChildServer> Type Parameters TChildProxy TChildServer Inheritance object BackgroundSip<TChildProxy, TChildServer> Implements IPromiseDisposable Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Remarks A BackgroundSip<TChildProxy, TChildServer> executes as a separate isolated container with its own Scheduler and lifetime on its own background thread. The only way to communicate with a BackgroundSip<TChildProxy, TChildServer> is through a proxy to its root object. Each BackgroundSip<TChildProxy, TChildServer> begins its lifetime with an established shared-memory channel between itself and its parent Sip. A BackgroundSip<TChildProxy, TChildServer>'s parent can control its lifetime through its CancellationToken. The parent establishes the root object during the creation process, and the root's proxy is made available to the parent as part of initialization. Any other objects that live within the isolation boundary of the BackgroundSip<TChildProxy, TChildServer> must be created indirectly through a request made on the root object. The lifetime of all such objects are managed by the internal state of BackgroundSip<TChildProxy, TChildServer> including its comm system, the state of all objects reachable from it (including the root object). Properties Root A proxy to the root object exported by the child sip. public TChildProxy Root { get; } Property Value TChildProxy Methods Create(UserIdentity?, UserIdentity?, MemoryPool<byte>, Func<UserIdentity?, MemoryPool<byte>, ILoggerFactory, Resolver<TChildServer>, CancellationToken, Promise>, ILoggerFactory?) Creates a new background sip. public static BackgroundSip<TChildProxy, TChildServer> Create(UserIdentity? localIdentity, UserIdentity? remoteIdentity, MemoryPool<byte> pool, Func<UserIdentity?, MemoryPool<byte>, ILoggerFactory, Resolver<TChildServer>, CancellationToken, Promise> init, ILoggerFactory? loggerFactory = null) Parameters localIdentity UserIdentity The user identity of this sip. remoteIdentity UserIdentity The user identity of the background sip. pool MemoryPool<byte> A memory pool. init Func<UserIdentity, MemoryPool<byte>, ILoggerFactory, Resolver<TChildServer>, CancellationToken, Promise> A factory for the new root object. loggerFactory ILoggerFactory The logging factory. Returns BackgroundSip<TChildProxy, TChildServer> The background sip. Create(UserIdentity?, UserIdentity?, MemoryPool<byte>, Func<CancellationToken, TChildProxy>, ILoggerFactory?) Creates a new background sip. public static BackgroundSip<TChildProxy, TChildServer> Create(UserIdentity? localIdentity, UserIdentity? remoteIdentity, MemoryPool<byte> pool, Func<CancellationToken, TChildProxy> init, ILoggerFactory? loggerFactory = null) Parameters localIdentity UserIdentity The user identity of this sip. remoteIdentity UserIdentity The user identity of the background sip. pool MemoryPool<byte> A memory pool. init Func<CancellationToken, TChildProxy> A factory for the new root object. loggerFactory ILoggerFactory The logging factory. Returns BackgroundSip<TChildProxy, TChildServer> The background sip. Create<TArg>(UserIdentity?, UserIdentity?, MemoryPool<byte>, Func<UserIdentity?, MemoryPool<byte>, ILoggerFactory, TArg, Resolver<TChildServer>, CancellationToken, Promise>, TArg, ILoggerFactory?) Creates a new background sip. public static BackgroundSip<TChildProxy, TChildServer> Create<TArg>(UserIdentity? localIdentity, UserIdentity? remoteIdentity, MemoryPool<byte> pool, Func<UserIdentity?, MemoryPool<byte>, ILoggerFactory, TArg, Resolver<TChildServer>, CancellationToken, Promise> init, TArg arg, ILoggerFactory? loggerFactory = null) Parameters localIdentity UserIdentity The user identity of this sip. remoteIdentity UserIdentity The user identity of the background sip. pool MemoryPool<byte> A memory pool. init Func<UserIdentity, MemoryPool<byte>, ILoggerFactory, TArg, Resolver<TChildServer>, CancellationToken, Promise> A factory for the new root object. arg TArg A serializable argument to marshall to the init function. loggerFactory ILoggerFactory The logging factory. Returns BackgroundSip<TChildProxy, TChildServer> The background sip. Type Parameters TArg The type of the serializable argument to marshall to the init function. Create<TArg>(UserIdentity?, UserIdentity?, MemoryPool<byte>, Func<TArg, CancellationToken, TChildProxy>, TArg, ILoggerFactory?) Creates a new background sip. public static BackgroundSip<TChildProxy, TChildServer> Create<TArg>(UserIdentity? localIdentity, UserIdentity? remoteIdentity, MemoryPool<byte> pool, Func<TArg, CancellationToken, TChildProxy> init, TArg arg, ILoggerFactory? loggerFactory = null) Parameters localIdentity UserIdentity The user identity of this sip. remoteIdentity UserIdentity The user identity of the background sip. pool MemoryPool<byte> A memory pool. init Func<TArg, CancellationToken, TChildProxy> A factory for the new root object. arg TArg A serializable argument to marshall to the init function. loggerFactory ILoggerFactory The logging factory. Returns BackgroundSip<TChildProxy, TChildServer> The background sip. Type Parameters TArg The type of the serializable argument to marshall to the init function. Create<TParentProxy, TParentServer>(UserIdentity?, UserIdentity?, MemoryPool<byte>, Func<UserIdentity?, MemoryPool<byte>, ILoggerFactory, TParentProxy, Resolver<TChildServer>, CancellationToken, Promise>, TParentProxy, ILoggerFactory?) Creates a new background sip. public static BackgroundSip<TChildProxy, TChildServer> Create<TParentProxy, TParentServer>(UserIdentity? localIdentity, UserIdentity? remoteIdentity, MemoryPool<byte> pool, Func<UserIdentity?, MemoryPool<byte>, ILoggerFactory, TParentProxy, Resolver<TChildServer>, CancellationToken, Promise> init, TParentProxy parent, ILoggerFactory? loggerFactory = null) where TParentProxy : Proxy<TParentServer>, IProxy<TParentProxy, TParentServer> where TParentServer : AServer<TParentServer> Parameters localIdentity UserIdentity The user identity of this sip. remoteIdentity UserIdentity The user identity of the background sip. pool MemoryPool<byte> A memory pool. init Func<UserIdentity, MemoryPool<byte>, ILoggerFactory, TParentProxy, Resolver<TChildServer>, CancellationToken, Promise> A factory for the new root object. parent TParentProxy A capability for the new sip to access the parent. loggerFactory ILoggerFactory The logging factory. Returns BackgroundSip<TChildProxy, TChildServer> The background sip. Type Parameters TParentProxy The proxy type of the object exported by the parent to the new sip. TParentServer The server type of the object exported by the parent to the new sip. Create<TParentProxy, TParentServer>(UserIdentity?, UserIdentity?, MemoryPool<byte>, Func<TParentProxy, CancellationToken, TChildProxy>, TParentProxy, ILoggerFactory?) Creates a new background sip. public static BackgroundSip<TChildProxy, TChildServer> Create<TParentProxy, TParentServer>(UserIdentity? localIdentity, UserIdentity? remoteIdentity, MemoryPool<byte> pool, Func<TParentProxy, CancellationToken, TChildProxy> init, TParentProxy parent, ILoggerFactory? loggerFactory = null) where TParentProxy : Proxy<TParentServer>, IProxy<TParentProxy, TParentServer> where TParentServer : AServer<TParentServer> Parameters localIdentity UserIdentity The user identity of this sip. remoteIdentity UserIdentity The user identity of the background sip. pool MemoryPool<byte> A memory pool. init Func<TParentProxy, CancellationToken, TChildProxy> A factory for the new root object. parent TParentProxy A capability for the new sip to access the parent. loggerFactory ILoggerFactory The logging factory. Returns BackgroundSip<TChildProxy, TChildServer> The background sip. Type Parameters TParentProxy The proxy type of the object exported by the parent to the new sip. TParentServer The server type of the object exported by the parent to the new sip. DisposeAsync() public Promise DisposeAsync() Returns Promise"
  },
  "api/MarymoorStudios.Core.Rpc.Bytes.Writer.html": {
    "href": "api/MarymoorStudios.Core.Rpc.Bytes.Writer.html",
    "title": "Class Bytes.Writer",
    "summary": "Class Bytes.Writer Namespace MarymoorStudios.Core.Rpc Assembly MarymoorStudios.Core.Rpc.dll The writer capability for a Bytes. public sealed class Bytes.Writer : IPromiseDisposable, IDisposable Inheritance object Bytes.Writer Implements IPromiseDisposable IDisposable Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods Abort() Promptly aborts the sequence. public void Abort() Remarks Write initiated abort is best-effort transmitted across the transport to the reader. If the transport has itself been aborted then the abort signal is discarded (but the reader will see an abort from the transport). Any items in flight that cannot be transmitted before the transport has been torn down are immediately released. Close(Exception?) Terminates the sequence. public Promise Close(Exception? error = null) Parameters error Exception An optional error to terminate the sequence with. Returns Promise A promise that resolves when the reader has seen the entire sequence. Remarks If the sequence is terminated without an error (a successful termination) the reader will see an End of Sequence (EOS). If an error is provided, the reader will eventually see that error as the result of a call to Read(). Dispose() Promptly terminates the sequence. public void Dispose() Remarks If the sequence is already terminated or a graceful Close(Exception?) can be promptly transmitted on the transport, it is done. Otherwise, an Abort() occurs. If any untransmitted items cannot be promptly transmitted they are released without being transmitted and the termination becomes an Abort(). DisposeAsync() Asynchronously terminates the sequence. public Promise DisposeAsync() Returns Promise Remarks If the sequence is not already terminated, a graceful Close(Exception?) is performed. The result then resolves after a graceful termination acknowledgement is received from the reader (indicating that all items have been received including the graceful termination signal). If the transport is torn down before all pending items can be transmitted, or before a graceful termination acknowledgement has been received from the reader, then any untransmitted items are released without being transmitted and the termination becomes an Abort(). ~Writer() protected ~Writer() Flush() Returns a promise that resolves when flow control would allow additional writes without buffering. public Promise Flush() Returns Promise Remarks If there is no flow control pressure the return value will be promptly resolved. Write(OwnedMem<byte>) Writes an item to the sequence. public void Write(OwnedMem<byte> item) Parameters item OwnedMem<byte> The item to be written. Remarks On a successful return, ownership of the provided item is transferred to the sequence. Items successfully written to the sequence but never delivered to a reader (e.g. because the sequence is disposed or the transport is terminated) will be disposed by the sequence itself. The error EndOfSequenceException occurs when the Writer comes to know that the sequence has been disposed before the EOS has been written. This error will be thrown repeatedly on all subsequent writes after this point. The Writer should gracefully terminate production. If the sequence is cancelled by the reader (optionally with an error), OperationCanceledException) (or that error) will be returned by the next call to Write(OwnedMem<byte>) or Flush() after the Writer comes to know of the cancellation. Cancellation is propagated asynchronously backward through the transport and may be subject to propagation delay. Cancellation delivery cannot be guaranteed as it may be lost if the underlying channel is aborted before it can be delivered. If the sequence is aborted by the reader or the underlying transport, a call to Write(OwnedMem<byte>) or Flush() will yield an AbortedException. Some items in the sequence may have been lost in the event of an abort."
  },
  "api/MarymoorStudios.Core.Rpc.Bytes.html": {
    "href": "api/MarymoorStudios.Core.Rpc.Bytes.html",
    "title": "Class Bytes",
    "summary": "Class Bytes Namespace MarymoorStudios.Core.Rpc Assembly MarymoorStudios.Core.Rpc.dll public sealed class Bytes : IPromiseDisposable, IDisposable Inheritance object Bytes Implements IPromiseDisposable IDisposable Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Properties BatchSize The batch size suggested by the reader. public int BatchSize { get; set; } Property Value int Capacity The desired capacity of the reader. public int Capacity { get; set; } Property Value int Methods Cancel(Exception?) Attempts to perform a graceful early termination by the sequence with a diagnostic error for the Writer. public void Cancel(Exception? error = null) Parameters error Exception An optional diagnostic error. If no error is provided then OperationCanceledException will be sent. Remarks The Read() method will eventually return EOS (or error) after Cancel(Exception?) has been called, either because cancellation is successfully propagated to the Writer or because the underlying channel is aborted before cancellation can be propagated. Cancellation is pr Create(Func<Writer, Promise>, int, int) Constructs a new Pipe<T> public static Bytes Create(Func<Bytes.Writer, Promise> body, int capacity = 65536, int batchSize = 8192) Parameters body Func<Bytes.Writer, Promise> A function that will generate the contents of the sequence. capacity int The maximum number of items before backpressure is applied. batchSize int The reader suggested batch size. Returns Bytes Remarks REQUIRES: capacity > 0 REQUIRES: 1 <= batchSize <= capacity The batchSize is used to decrease ping-ponging by delaying waking the producer until there are more items in the window. There is a tradeoff between added latency and buffering costs on the writer side versus signalling costs. The default value is 1 causing the producer to be signalled whenever there is at least one slot available. Create(int, int) Constructs a new Pipe<T> public static (Bytes reader, Bytes.Writer writer) Create(int capacity = 65536, int batchSize = 8192) Parameters capacity int The maximum number of items before backpressure is applied. batchSize int The reader suggested batch size. Returns (Bytes reader, Bytes.Writer writer) Remarks REQUIRES: capacity > 0 REQUIRES: 1 <= batchSize <= capacity The batchSize is used to decrease ping-ponging by delaying waking the producer until there are more items in the window. There is a tradeoff between added latency and buffering costs on the writer side versus signalling costs. The default value is 1 causing the producer to be signalled whenever there is at least one slot available. Dispose() Releases all received but unread items. public void Dispose() Remarks Implies a call to Cancel(Exception?) if the sequence has not seen EOS or already been cancelled. Any items that are received by the transport after the Reader has been disposed will be immediately released. DisposeAsync() Releases all received but unread items. public Promise DisposeAsync() Returns Promise A promise that resolves when all in-flight items have been exhausted from the transport. Remarks Implies a call to Cancel(Exception?) if the sequence has not seen EOS or already been cancelled. Any items that are received by the transport after the Reader has been disposed will be immediately released. ForEach(Func<OwnedMem<byte>, Promise>) Yields each of the items in the sequence to the body function. public Promise ForEach(Func<OwnedMem<byte>, Promise> body) Parameters body Func<OwnedMem<byte>, Promise> A function to process each item. Returns Promise Resolves successfully if the entire sequence was read to the end without encountering an error, otherwise breaks with the first error encountered by the sequence. Read() Reads the next available item from the sequence. public Promise<OwnedMem<byte>> Read() Returns Promise<OwnedMem<byte>> The next item or an error. Remarks Returns the next item in the sequence. If there are no items available immediately, then the return resolves when the next item arrives. On a successful return ownership for the item returned is transferred to the caller who is responsible for disposing it. If the end of the sequence (EOS) is reached (i.e. a finite sequence) then reading after the EOS will yield an EndOfSequenceException error. If the sequence is closed by the Writer with an error, that error will be returned in sequence order after all items successfully written before the error have been delivered. If the sequence is aborted by the Writer or the underlying transport a read will yield an AbortedException. Some items in the sequence may have been lost in the event of an abort."
  },
  "api/MarymoorStudios.Core.Rpc.BytesSerializer.html": {
    "href": "api/MarymoorStudios.Core.Rpc.BytesSerializer.html",
    "title": "Class BytesSerializer",
    "summary": "Class BytesSerializer Namespace MarymoorStudios.Core.Rpc Assembly MarymoorStudios.Core.Rpc.dll public sealed class BytesSerializer : Serializer<Bytes?> Inheritance object Serializer Serializer<Bytes> BytesSerializer Inherited Members Serializer<Bytes>.Default Serializer.Register(Type, Type) Serializer.TrySizeOfDerived<TSuper>(SerializationContext, in TSuper, out int) Serializer.TryWriteDerived<TSuper>(SerializationContext, ref RowBuffer, in TSuper) Serializer.Slice(TypeId, ref TypeId, SerializationContext, ref ReadOnlyRowBuffer) Serializer.Dice(int, SerializationContext, ref ReadOnlyRowBuffer) Serializer.TryReadDerived<TSuper>(TypeId, SerializationContext, ref ReadOnlyRowBuffer, out TSuper) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors BytesSerializer() public BytesSerializer() Properties TypeId public static TypeId TypeId { get; } Property Value TypeId Methods GetTypeId() public override TypeId GetTypeId() Returns TypeId SizeOf(SerializationContext, in Bytes?) public override int SizeOf(SerializationContext context, in Bytes? value) Parameters context SerializationContext value Bytes Returns int TryRead(SerializationContext, ref ReadOnlyRowBuffer, out Bytes?) public override bool TryRead(SerializationContext context, ref ReadOnlyRowBuffer buffer, out Bytes? value) Parameters context SerializationContext buffer ReadOnlyRowBuffer value Bytes Returns bool Write(SerializationContext, ref RowBuffer, in Bytes?) public override void Write(SerializationContext context, ref RowBuffer buffer, in Bytes? value) Parameters context SerializationContext buffer RowBuffer value Bytes"
  },
  "api/MarymoorStudios.Core.Rpc.CommException.html": {
    "href": "api/MarymoorStudios.Core.Rpc.CommException.html",
    "title": "Class CommException",
    "summary": "Class CommException Namespace MarymoorStudios.Core.Rpc Assembly MarymoorStudios.Core.Rpc.dll [DataContract] public class CommException : Exception, ISerializable Inheritance object Exception CommException Implements ISerializable Derived ProtocolViolationException Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetType() Exception.TargetSite Exception.Message Exception.Data Exception.InnerException Exception.HelpLink Exception.Source Exception.HResult Exception.StackTrace Exception.SerializeObjectState object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors CommException() public CommException() CommException(string?) public CommException(string? message) Parameters message string CommException(string?, Exception?) public CommException(string? message, Exception? innerException) Parameters message string innerException Exception"
  },
  "api/MarymoorStudios.Core.Rpc.CommExceptionSerializer.html": {
    "href": "api/MarymoorStudios.Core.Rpc.CommExceptionSerializer.html",
    "title": "Class CommExceptionSerializer",
    "summary": "Class CommExceptionSerializer Namespace MarymoorStudios.Core.Rpc Assembly MarymoorStudios.Core.Rpc.dll public sealed class CommExceptionSerializer : Serializer<CommException?>, IDerivedSerializer<CommException?>, IDerivedSerializer Inheritance object Serializer Serializer<CommException> CommExceptionSerializer Implements IDerivedSerializer<CommException> IDerivedSerializer Inherited Members Serializer<CommException>.Default Serializer.Register(Type, Type) Serializer.TrySizeOfDerived<TSuper>(SerializationContext, in TSuper, out int) Serializer.TryWriteDerived<TSuper>(SerializationContext, ref RowBuffer, in TSuper) Serializer.Slice(TypeId, ref TypeId, SerializationContext, ref ReadOnlyRowBuffer) Serializer.Dice(int, SerializationContext, ref ReadOnlyRowBuffer) Serializer.TryReadDerived<TSuper>(TypeId, SerializationContext, ref ReadOnlyRowBuffer, out TSuper) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors CommExceptionSerializer() public CommExceptionSerializer() Properties TypeId public static TypeId TypeId { get; } Property Value TypeId Methods GetTypeId() public override TypeId GetTypeId() Returns TypeId SizeOf(SerializationContext, in CommException?) public override int SizeOf(SerializationContext context, in CommException? value) Parameters context SerializationContext value CommException Returns int SizeOfSegment(SerializationContext, in CommException) public static int SizeOfSegment(SerializationContext context, in CommException value) Parameters context SerializationContext value CommException Returns int TryRead(SerializationContext, ref ReadOnlyRowBuffer, out CommException?) public override bool TryRead(SerializationContext context, ref ReadOnlyRowBuffer buffer, out CommException? value) Parameters context SerializationContext buffer ReadOnlyRowBuffer value CommException Returns bool TryReadSegment(SerializationContext, ref ReadOnlyRowBuffer) public static bool TryReadSegment(SerializationContext context, ref ReadOnlyRowBuffer buffer) Parameters context SerializationContext buffer ReadOnlyRowBuffer Returns bool Write(SerializationContext, ref RowBuffer, in CommException?) public override void Write(SerializationContext context, ref RowBuffer buffer, in CommException? value) Parameters context SerializationContext buffer RowBuffer value CommException WriteSegment(SerializationContext, ref RowBuffer, in CommException) public static void WriteSegment(SerializationContext context, ref RowBuffer buffer, in CommException value) Parameters context SerializationContext buffer RowBuffer value CommException"
  },
  "api/MarymoorStudios.Core.Rpc.CommId.html": {
    "href": "api/MarymoorStudios.Core.Rpc.CommId.html",
    "title": "Struct CommId",
    "summary": "Struct CommId Namespace MarymoorStudios.Core.Rpc Assembly MarymoorStudios.Core.Rpc.dll A unique id that represents an object (local or remote) to the channel. public readonly struct CommId : IEquatable<CommId> Implements IEquatable<CommId> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Remarks CommIds are unique only within the scope of the MarymoorStudios.Core.Rpc.CommChannel that allocated them. Different MarymoorStudios.Core.Rpc.CommChannels may reuse the same CommIds for different objects. Constructors CommId(int) public CommId(int id) Parameters id int Properties Id The underlying value. [DataMember] public int Id { get; } Property Value int Invalid The invalid id. public static CommId Invalid { get; } Property Value CommId IsRemote True if the was allocated by the remote peer. public bool IsRemote { get; } Property Value bool IsValid True if the CommId is not Invalid. public bool IsValid { get; } Property Value bool Methods Equals(CommId) Value-based equality. public bool Equals(CommId other) Parameters other CommId Returns bool Equals(object?) public override bool Equals(object? obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int Invert() Returns the negative reciprocal. public CommId Invert() Returns CommId ToString() public override string ToString() Returns string Operators operator ==(CommId, CommId) Value-based equality. public static bool operator ==(CommId left, CommId right) Parameters left CommId right CommId Returns bool operator ++(CommId) Return the next id numerically (no wrap-around). public static CommId operator ++(CommId left) Parameters left CommId Returns CommId operator !=(CommId, CommId) Value-based equality. public static bool operator !=(CommId left, CommId right) Parameters left CommId right CommId Returns bool"
  },
  "api/MarymoorStudios.Core.Rpc.CommIdSerializer.html": {
    "href": "api/MarymoorStudios.Core.Rpc.CommIdSerializer.html",
    "title": "Class CommIdSerializer",
    "summary": "Class CommIdSerializer Namespace MarymoorStudios.Core.Rpc Assembly MarymoorStudios.Core.Rpc.dll public sealed class CommIdSerializer : Serializer<CommId> Inheritance object Serializer Serializer<CommId> CommIdSerializer Inherited Members Serializer<CommId>.Default Serializer.Register(Type, Type) Serializer.TrySizeOfDerived<TSuper>(SerializationContext, in TSuper, out int) Serializer.TryWriteDerived<TSuper>(SerializationContext, ref RowBuffer, in TSuper) Serializer.Slice(TypeId, ref TypeId, SerializationContext, ref ReadOnlyRowBuffer) Serializer.Dice(int, SerializationContext, ref ReadOnlyRowBuffer) Serializer.TryReadDerived<TSuper>(TypeId, SerializationContext, ref ReadOnlyRowBuffer, out TSuper) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors CommIdSerializer() public CommIdSerializer() Properties TypeId public static TypeId TypeId { get; } Property Value TypeId Methods GetTypeId() public override TypeId GetTypeId() Returns TypeId SizeOf(SerializationContext, in CommId) public override int SizeOf(SerializationContext context, in CommId value) Parameters context SerializationContext value CommId Returns int TryRead(SerializationContext, ref ReadOnlyRowBuffer, out CommId) public override bool TryRead(SerializationContext context, ref ReadOnlyRowBuffer buffer, out CommId value) Parameters context SerializationContext buffer ReadOnlyRowBuffer value CommId Returns bool Write(SerializationContext, ref RowBuffer, in CommId) public override void Write(SerializationContext context, ref RowBuffer buffer, in CommId value) Parameters context SerializationContext buffer RowBuffer value CommId"
  },
  "api/MarymoorStudios.Core.Rpc.CommProtocol.html": {
    "href": "api/MarymoorStudios.Core.Rpc.CommProtocol.html",
    "title": "Class CommProtocol",
    "summary": "Class CommProtocol Namespace MarymoorStudios.Core.Rpc Assembly MarymoorStudios.Core.Rpc.dll public static class CommProtocol Inheritance object CommProtocol Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode()"
  },
  "api/MarymoorStudios.Core.Rpc.EventualAttribute.html": {
    "href": "api/MarymoorStudios.Core.Rpc.EventualAttribute.html",
    "title": "Class EventualAttribute",
    "summary": "Class EventualAttribute Namespace MarymoorStudios.Core.Rpc Assembly MarymoorStudios.Core.Rpc.dll [AttributeUsage(AttributeTargets.Interface)] public sealed class EventualAttribute : Attribute Inheritance object Attribute EventualAttribute Inherited Members Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.Equals(object) Attribute.GetHashCode() Attribute.Match(object) Attribute.IsDefaultAttribute() Attribute.TypeId object.GetType() object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors EventualAttribute() public EventualAttribute() Properties NoCode If true then no code is generated (a custom implementation must be provided). public bool NoCode { get; set; } Property Value bool"
  },
  "api/MarymoorStudios.Core.Rpc.EventualType.html": {
    "href": "api/MarymoorStudios.Core.Rpc.EventualType.html",
    "title": "Class EventualType",
    "summary": "Class EventualType Namespace MarymoorStudios.Core.Rpc Assembly MarymoorStudios.Core.Rpc.dll public abstract class EventualType Inheritance object EventualType Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors EventualType() protected EventualType() Methods DispatchRpcMessage<TMessage, TServer>(AResolver, DiagnosticId, CommId, MethodId, SerializationContext, ref ReadOnlyRowBuffer) Dispatches an incoming serialized message packet as an ARpcMessage<TServer>. protected static bool DispatchRpcMessage<TMessage, TServer>(AResolver target, DiagnosticId channelId, CommId resultId, MethodId methodId, SerializationContext context, ref ReadOnlyRowBuffer payload) where TMessage : ARpcMessage<TServer> where TServer : AServer<TServer> Parameters target AResolver The target to receive the dispatching message. channelId DiagnosticId The id of the channel dispatching the message. resultId CommId The id of the result to be registered in the MarymoorStudios.Core.Rpc.CommTable. methodId MethodId The id of the method being dispatched. context SerializationContext Serialization context. payload ReadOnlyRowBuffer A serialized message to be materialized and dispatched. Returns bool Type Parameters TMessage The message type derived from ARpcMessage<TServer> TServer The server type derived from AServer<TServer> Register(Type, Type) public static void Register(Type genericType, Type templateType) Parameters genericType Type templateType Type TryDispatch(AResolver, DiagnosticId, CommId, MethodId, SerializationContext, ref ReadOnlyRowBuffer) Dispatches an incoming serialized message packet. public abstract bool TryDispatch(AResolver target, DiagnosticId channelId, CommId resultId, MethodId methodId, SerializationContext context, ref ReadOnlyRowBuffer payload) Parameters target AResolver The target to receive the dispatching message. channelId DiagnosticId The id of the channel dispatching the message. resultId CommId The id of the result to be registered in the MarymoorStudios.Core.Rpc.CommTable. methodId MethodId The id of the method being dispatched. context SerializationContext Serialization context. payload ReadOnlyRowBuffer A serialized message to be materialized and dispatched. Returns bool TryGet(AResolver, out EventualType) public static bool TryGet(AResolver resolver, out EventualType retval) Parameters resolver AResolver retval EventualType Returns bool TryGetMethodName(AResolver, MethodId, out string) Returns a diagnostic string describing the method matching methodId. public abstract bool TryGetMethodName(AResolver target, MethodId methodId, out string methodName) Parameters target AResolver The target to receive the dispatching message. methodId MethodId The id of the method whose name is being looked up. methodName string A diagnostic string describing the method. Returns bool True if successfully looked up, false otherwise."
  },
  "api/MarymoorStudios.Core.Rpc.Exceptions.AbortedException.html": {
    "href": "api/MarymoorStudios.Core.Rpc.Exceptions.AbortedException.html",
    "title": "Class AbortedException",
    "summary": "Class AbortedException Namespace MarymoorStudios.Core.Rpc.Exceptions Assembly MarymoorStudios.Core.Rpc.Exceptions.dll The operation has been terminated ungracefully. [DataContract] public class AbortedException : Exception, ISerializable Inheritance object Exception AbortedException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetType() Exception.TargetSite Exception.Message Exception.Data Exception.InnerException Exception.HelpLink Exception.Source Exception.HResult Exception.StackTrace Exception.SerializeObjectState object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Remarks The operation was aborted, typically due to disconnection, a concurrency issue such as a sequencer check failure, or a transaction abort. See guidelines at: FailedPreconditionException and UnavailableException. Constructors AbortedException() public AbortedException() AbortedException(string?) public AbortedException(string? message) Parameters message string AbortedException(string?, Exception?) public AbortedException(string? message, Exception? inner) Parameters message string inner Exception"
  },
  "api/MarymoorStudios.Core.Rpc.Exceptions.AbortedExceptionSerializer.html": {
    "href": "api/MarymoorStudios.Core.Rpc.Exceptions.AbortedExceptionSerializer.html",
    "title": "Class AbortedExceptionSerializer",
    "summary": "Class AbortedExceptionSerializer Namespace MarymoorStudios.Core.Rpc.Exceptions Assembly MarymoorStudios.Core.Rpc.Exceptions.dll public sealed class AbortedExceptionSerializer : Serializer<AbortedException?>, IDerivedSerializer<AbortedException?>, IDerivedSerializer Inheritance object Serializer Serializer<AbortedException> AbortedExceptionSerializer Implements IDerivedSerializer<AbortedException> IDerivedSerializer Inherited Members Serializer<AbortedException>.Default Serializer.Register(Type, Type) Serializer.TrySizeOfDerived<TSuper>(SerializationContext, in TSuper, out int) Serializer.TryWriteDerived<TSuper>(SerializationContext, ref RowBuffer, in TSuper) Serializer.Slice(TypeId, ref TypeId, SerializationContext, ref ReadOnlyRowBuffer) Serializer.Dice(int, SerializationContext, ref ReadOnlyRowBuffer) Serializer.TryReadDerived<TSuper>(TypeId, SerializationContext, ref ReadOnlyRowBuffer, out TSuper) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors AbortedExceptionSerializer() public AbortedExceptionSerializer() Properties TypeId public static TypeId TypeId { get; } Property Value TypeId Methods GetTypeId() public override TypeId GetTypeId() Returns TypeId SizeOf(SerializationContext, in AbortedException?) public override int SizeOf(SerializationContext context, in AbortedException? value) Parameters context SerializationContext value AbortedException Returns int SizeOfSegment(SerializationContext, in AbortedException) public static int SizeOfSegment(SerializationContext context, in AbortedException value) Parameters context SerializationContext value AbortedException Returns int TryRead(SerializationContext, ref ReadOnlyRowBuffer, out AbortedException?) public override bool TryRead(SerializationContext context, ref ReadOnlyRowBuffer buffer, out AbortedException? value) Parameters context SerializationContext buffer ReadOnlyRowBuffer value AbortedException Returns bool TryReadSegment(SerializationContext, ref ReadOnlyRowBuffer) public static bool TryReadSegment(SerializationContext context, ref ReadOnlyRowBuffer buffer) Parameters context SerializationContext buffer ReadOnlyRowBuffer Returns bool Write(SerializationContext, ref RowBuffer, in AbortedException?) public override void Write(SerializationContext context, ref RowBuffer buffer, in AbortedException? value) Parameters context SerializationContext buffer RowBuffer value AbortedException WriteSegment(SerializationContext, ref RowBuffer, in AbortedException) public static void WriteSegment(SerializationContext context, ref RowBuffer buffer, in AbortedException value) Parameters context SerializationContext buffer RowBuffer value AbortedException"
  },
  "api/MarymoorStudios.Core.Rpc.Exceptions.AlreadyExistsException.html": {
    "href": "api/MarymoorStudios.Core.Rpc.Exceptions.AlreadyExistsException.html",
    "title": "Class AlreadyExistsException",
    "summary": "Class AlreadyExistsException Namespace MarymoorStudios.Core.Rpc.Exceptions Assembly MarymoorStudios.Core.Rpc.Exceptions.dll The operation failed because the target already exists. [DataContract] public sealed class AlreadyExistsException : Exception, ISerializable Inheritance object Exception AlreadyExistsException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetType() Exception.TargetSite Exception.Message Exception.Data Exception.InnerException Exception.HelpLink Exception.Source Exception.HResult Exception.StackTrace object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors AlreadyExistsException() public AlreadyExistsException() AlreadyExistsException(string?) public AlreadyExistsException(string? message) Parameters message string AlreadyExistsException(string?, Exception?) public AlreadyExistsException(string? message, Exception? inner) Parameters message string inner Exception"
  },
  "api/MarymoorStudios.Core.Rpc.Exceptions.AlreadyExistsExceptionSerializer.html": {
    "href": "api/MarymoorStudios.Core.Rpc.Exceptions.AlreadyExistsExceptionSerializer.html",
    "title": "Class AlreadyExistsExceptionSerializer",
    "summary": "Class AlreadyExistsExceptionSerializer Namespace MarymoorStudios.Core.Rpc.Exceptions Assembly MarymoorStudios.Core.Rpc.Exceptions.dll public sealed class AlreadyExistsExceptionSerializer : Serializer<AlreadyExistsException?>, IDerivedSerializer<AlreadyExistsException?>, IDerivedSerializer Inheritance object Serializer Serializer<AlreadyExistsException> AlreadyExistsExceptionSerializer Implements IDerivedSerializer<AlreadyExistsException> IDerivedSerializer Inherited Members Serializer<AlreadyExistsException>.Default Serializer.Register(Type, Type) Serializer.TrySizeOfDerived<TSuper>(SerializationContext, in TSuper, out int) Serializer.TryWriteDerived<TSuper>(SerializationContext, ref RowBuffer, in TSuper) Serializer.Slice(TypeId, ref TypeId, SerializationContext, ref ReadOnlyRowBuffer) Serializer.Dice(int, SerializationContext, ref ReadOnlyRowBuffer) Serializer.TryReadDerived<TSuper>(TypeId, SerializationContext, ref ReadOnlyRowBuffer, out TSuper) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors AlreadyExistsExceptionSerializer() public AlreadyExistsExceptionSerializer() Properties TypeId public static TypeId TypeId { get; } Property Value TypeId Methods GetTypeId() public override TypeId GetTypeId() Returns TypeId SizeOf(SerializationContext, in AlreadyExistsException?) public override int SizeOf(SerializationContext context, in AlreadyExistsException? value) Parameters context SerializationContext value AlreadyExistsException Returns int SizeOfSegment(SerializationContext, in AlreadyExistsException) public static int SizeOfSegment(SerializationContext context, in AlreadyExistsException value) Parameters context SerializationContext value AlreadyExistsException Returns int TryRead(SerializationContext, ref ReadOnlyRowBuffer, out AlreadyExistsException?) public override bool TryRead(SerializationContext context, ref ReadOnlyRowBuffer buffer, out AlreadyExistsException? value) Parameters context SerializationContext buffer ReadOnlyRowBuffer value AlreadyExistsException Returns bool TryReadSegment(SerializationContext, ref ReadOnlyRowBuffer) public static bool TryReadSegment(SerializationContext context, ref ReadOnlyRowBuffer buffer) Parameters context SerializationContext buffer ReadOnlyRowBuffer Returns bool Write(SerializationContext, ref RowBuffer, in AlreadyExistsException?) public override void Write(SerializationContext context, ref RowBuffer buffer, in AlreadyExistsException? value) Parameters context SerializationContext buffer RowBuffer value AlreadyExistsException WriteSegment(SerializationContext, ref RowBuffer, in AlreadyExistsException) public static void WriteSegment(SerializationContext context, ref RowBuffer buffer, in AlreadyExistsException value) Parameters context SerializationContext buffer RowBuffer value AlreadyExistsException"
  },
  "api/MarymoorStudios.Core.Rpc.Exceptions.EndOfSequenceException.html": {
    "href": "api/MarymoorStudios.Core.Rpc.Exceptions.EndOfSequenceException.html",
    "title": "Class EndOfSequenceException",
    "summary": "Class EndOfSequenceException Namespace MarymoorStudios.Core.Rpc.Exceptions Assembly MarymoorStudios.Core.Rpc.Exceptions.dll A sequence has been read past its EOS. [DataContract] public class EndOfSequenceException : Exception, ISerializable Inheritance object Exception EndOfSequenceException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetType() Exception.TargetSite Exception.Message Exception.Data Exception.InnerException Exception.HelpLink Exception.Source Exception.HResult Exception.StackTrace Exception.SerializeObjectState object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors EndOfSequenceException() public EndOfSequenceException() EndOfSequenceException(string?) public EndOfSequenceException(string? message) Parameters message string EndOfSequenceException(string?, Exception?) public EndOfSequenceException(string? message, Exception? inner) Parameters message string inner Exception"
  },
  "api/MarymoorStudios.Core.Rpc.Exceptions.EndOfSequenceExceptionSerializer.html": {
    "href": "api/MarymoorStudios.Core.Rpc.Exceptions.EndOfSequenceExceptionSerializer.html",
    "title": "Class EndOfSequenceExceptionSerializer",
    "summary": "Class EndOfSequenceExceptionSerializer Namespace MarymoorStudios.Core.Rpc.Exceptions Assembly MarymoorStudios.Core.Rpc.Exceptions.dll public sealed class EndOfSequenceExceptionSerializer : Serializer<EndOfSequenceException?>, IDerivedSerializer<EndOfSequenceException?>, IDerivedSerializer Inheritance object Serializer Serializer<EndOfSequenceException> EndOfSequenceExceptionSerializer Implements IDerivedSerializer<EndOfSequenceException> IDerivedSerializer Inherited Members Serializer<EndOfSequenceException>.Default Serializer.Register(Type, Type) Serializer.TrySizeOfDerived<TSuper>(SerializationContext, in TSuper, out int) Serializer.TryWriteDerived<TSuper>(SerializationContext, ref RowBuffer, in TSuper) Serializer.Slice(TypeId, ref TypeId, SerializationContext, ref ReadOnlyRowBuffer) Serializer.Dice(int, SerializationContext, ref ReadOnlyRowBuffer) Serializer.TryReadDerived<TSuper>(TypeId, SerializationContext, ref ReadOnlyRowBuffer, out TSuper) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors EndOfSequenceExceptionSerializer() public EndOfSequenceExceptionSerializer() Properties TypeId public static TypeId TypeId { get; } Property Value TypeId Methods GetTypeId() public override TypeId GetTypeId() Returns TypeId SizeOf(SerializationContext, in EndOfSequenceException?) public override int SizeOf(SerializationContext context, in EndOfSequenceException? value) Parameters context SerializationContext value EndOfSequenceException Returns int SizeOfSegment(SerializationContext, in EndOfSequenceException) public static int SizeOfSegment(SerializationContext context, in EndOfSequenceException value) Parameters context SerializationContext value EndOfSequenceException Returns int TryRead(SerializationContext, ref ReadOnlyRowBuffer, out EndOfSequenceException?) public override bool TryRead(SerializationContext context, ref ReadOnlyRowBuffer buffer, out EndOfSequenceException? value) Parameters context SerializationContext buffer ReadOnlyRowBuffer value EndOfSequenceException Returns bool TryReadSegment(SerializationContext, ref ReadOnlyRowBuffer) public static bool TryReadSegment(SerializationContext context, ref ReadOnlyRowBuffer buffer) Parameters context SerializationContext buffer ReadOnlyRowBuffer Returns bool Write(SerializationContext, ref RowBuffer, in EndOfSequenceException?) public override void Write(SerializationContext context, ref RowBuffer buffer, in EndOfSequenceException? value) Parameters context SerializationContext buffer RowBuffer value EndOfSequenceException WriteSegment(SerializationContext, ref RowBuffer, in EndOfSequenceException) public static void WriteSegment(SerializationContext context, ref RowBuffer buffer, in EndOfSequenceException value) Parameters context SerializationContext buffer RowBuffer value EndOfSequenceException"
  },
  "api/MarymoorStudios.Core.Rpc.Exceptions.FailedPreconditionException.html": {
    "href": "api/MarymoorStudios.Core.Rpc.Exceptions.FailedPreconditionException.html",
    "title": "Class FailedPreconditionException",
    "summary": "Class FailedPreconditionException Namespace MarymoorStudios.Core.Rpc.Exceptions Assembly MarymoorStudios.Core.Rpc.Exceptions.dll The operation was rejected because the system is not in a state required for the operation's execution. [DataContract] public sealed class FailedPreconditionException : Exception, ISerializable Inheritance object Exception FailedPreconditionException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetType() Exception.TargetSite Exception.Message Exception.Data Exception.InnerException Exception.HelpLink Exception.Source Exception.HResult Exception.StackTrace object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Remarks Use the following guidelines to decide between FailedPreconditionException, AbortedException, and UnavailableException: See also: UnavailableException or AbortedException. Constructors FailedPreconditionException() public FailedPreconditionException() FailedPreconditionException(string?) public FailedPreconditionException(string? message) Parameters message string FailedPreconditionException(string?, Exception?) public FailedPreconditionException(string? message, Exception? inner) Parameters message string inner Exception"
  },
  "api/MarymoorStudios.Core.Rpc.Exceptions.FailedPreconditionExceptionSerializer.html": {
    "href": "api/MarymoorStudios.Core.Rpc.Exceptions.FailedPreconditionExceptionSerializer.html",
    "title": "Class FailedPreconditionExceptionSerializer",
    "summary": "Class FailedPreconditionExceptionSerializer Namespace MarymoorStudios.Core.Rpc.Exceptions Assembly MarymoorStudios.Core.Rpc.Exceptions.dll public sealed class FailedPreconditionExceptionSerializer : Serializer<FailedPreconditionException?>, IDerivedSerializer<FailedPreconditionException?>, IDerivedSerializer Inheritance object Serializer Serializer<FailedPreconditionException> FailedPreconditionExceptionSerializer Implements IDerivedSerializer<FailedPreconditionException> IDerivedSerializer Inherited Members Serializer<FailedPreconditionException>.Default Serializer.Register(Type, Type) Serializer.TrySizeOfDerived<TSuper>(SerializationContext, in TSuper, out int) Serializer.TryWriteDerived<TSuper>(SerializationContext, ref RowBuffer, in TSuper) Serializer.Slice(TypeId, ref TypeId, SerializationContext, ref ReadOnlyRowBuffer) Serializer.Dice(int, SerializationContext, ref ReadOnlyRowBuffer) Serializer.TryReadDerived<TSuper>(TypeId, SerializationContext, ref ReadOnlyRowBuffer, out TSuper) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors FailedPreconditionExceptionSerializer() public FailedPreconditionExceptionSerializer() Properties TypeId public static TypeId TypeId { get; } Property Value TypeId Methods GetTypeId() public override TypeId GetTypeId() Returns TypeId SizeOf(SerializationContext, in FailedPreconditionException?) public override int SizeOf(SerializationContext context, in FailedPreconditionException? value) Parameters context SerializationContext value FailedPreconditionException Returns int SizeOfSegment(SerializationContext, in FailedPreconditionException) public static int SizeOfSegment(SerializationContext context, in FailedPreconditionException value) Parameters context SerializationContext value FailedPreconditionException Returns int TryRead(SerializationContext, ref ReadOnlyRowBuffer, out FailedPreconditionException?) public override bool TryRead(SerializationContext context, ref ReadOnlyRowBuffer buffer, out FailedPreconditionException? value) Parameters context SerializationContext buffer ReadOnlyRowBuffer value FailedPreconditionException Returns bool TryReadSegment(SerializationContext, ref ReadOnlyRowBuffer) public static bool TryReadSegment(SerializationContext context, ref ReadOnlyRowBuffer buffer) Parameters context SerializationContext buffer ReadOnlyRowBuffer Returns bool Write(SerializationContext, ref RowBuffer, in FailedPreconditionException?) public override void Write(SerializationContext context, ref RowBuffer buffer, in FailedPreconditionException? value) Parameters context SerializationContext buffer RowBuffer value FailedPreconditionException WriteSegment(SerializationContext, ref RowBuffer, in FailedPreconditionException) public static void WriteSegment(SerializationContext context, ref RowBuffer buffer, in FailedPreconditionException value) Parameters context SerializationContext buffer RowBuffer value FailedPreconditionException"
  },
  "api/MarymoorStudios.Core.Rpc.Exceptions.InsufficientResourcesException.html": {
    "href": "api/MarymoorStudios.Core.Rpc.Exceptions.InsufficientResourcesException.html",
    "title": "Class InsufficientResourcesException",
    "summary": "Class InsufficientResourcesException Namespace MarymoorStudios.Core.Rpc.Exceptions Assembly MarymoorStudios.Core.Rpc.Exceptions.dll The needed resource are not available to complete the operation. [DataContract] public sealed class InsufficientResourcesException : Exception, ISerializable Inheritance object Exception InsufficientResourcesException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetType() Exception.TargetSite Exception.Message Exception.Data Exception.InnerException Exception.HelpLink Exception.Source Exception.HResult Exception.StackTrace object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Remarks Insufficient memory or quota is the most common cause. Constructors InsufficientResourcesException() public InsufficientResourcesException() InsufficientResourcesException(string?) public InsufficientResourcesException(string? message) Parameters message string InsufficientResourcesException(string?, Exception?) public InsufficientResourcesException(string? message, Exception? inner) Parameters message string inner Exception"
  },
  "api/MarymoorStudios.Core.Rpc.Exceptions.InsufficientResourcesExceptionSerializer.html": {
    "href": "api/MarymoorStudios.Core.Rpc.Exceptions.InsufficientResourcesExceptionSerializer.html",
    "title": "Class InsufficientResourcesExceptionSerializer",
    "summary": "Class InsufficientResourcesExceptionSerializer Namespace MarymoorStudios.Core.Rpc.Exceptions Assembly MarymoorStudios.Core.Rpc.Exceptions.dll public sealed class InsufficientResourcesExceptionSerializer : Serializer<InsufficientResourcesException?>, IDerivedSerializer<InsufficientResourcesException?>, IDerivedSerializer Inheritance object Serializer Serializer<InsufficientResourcesException> InsufficientResourcesExceptionSerializer Implements IDerivedSerializer<InsufficientResourcesException> IDerivedSerializer Inherited Members Serializer<InsufficientResourcesException>.Default Serializer.Register(Type, Type) Serializer.TrySizeOfDerived<TSuper>(SerializationContext, in TSuper, out int) Serializer.TryWriteDerived<TSuper>(SerializationContext, ref RowBuffer, in TSuper) Serializer.Slice(TypeId, ref TypeId, SerializationContext, ref ReadOnlyRowBuffer) Serializer.Dice(int, SerializationContext, ref ReadOnlyRowBuffer) Serializer.TryReadDerived<TSuper>(TypeId, SerializationContext, ref ReadOnlyRowBuffer, out TSuper) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors InsufficientResourcesExceptionSerializer() public InsufficientResourcesExceptionSerializer() Properties TypeId public static TypeId TypeId { get; } Property Value TypeId Methods GetTypeId() public override TypeId GetTypeId() Returns TypeId SizeOf(SerializationContext, in InsufficientResourcesException?) public override int SizeOf(SerializationContext context, in InsufficientResourcesException? value) Parameters context SerializationContext value InsufficientResourcesException Returns int SizeOfSegment(SerializationContext, in InsufficientResourcesException) public static int SizeOfSegment(SerializationContext context, in InsufficientResourcesException value) Parameters context SerializationContext value InsufficientResourcesException Returns int TryRead(SerializationContext, ref ReadOnlyRowBuffer, out InsufficientResourcesException?) public override bool TryRead(SerializationContext context, ref ReadOnlyRowBuffer buffer, out InsufficientResourcesException? value) Parameters context SerializationContext buffer ReadOnlyRowBuffer value InsufficientResourcesException Returns bool TryReadSegment(SerializationContext, ref ReadOnlyRowBuffer) public static bool TryReadSegment(SerializationContext context, ref ReadOnlyRowBuffer buffer) Parameters context SerializationContext buffer ReadOnlyRowBuffer Returns bool Write(SerializationContext, ref RowBuffer, in InsufficientResourcesException?) public override void Write(SerializationContext context, ref RowBuffer buffer, in InsufficientResourcesException? value) Parameters context SerializationContext buffer RowBuffer value InsufficientResourcesException WriteSegment(SerializationContext, ref RowBuffer, in InsufficientResourcesException) public static void WriteSegment(SerializationContext context, ref RowBuffer buffer, in InsufficientResourcesException value) Parameters context SerializationContext buffer RowBuffer value InsufficientResourcesException"
  },
  "api/MarymoorStudios.Core.Rpc.Exceptions.InvalidArgumentException.html": {
    "href": "api/MarymoorStudios.Core.Rpc.Exceptions.InvalidArgumentException.html",
    "title": "Class InvalidArgumentException",
    "summary": "Class InvalidArgumentException Namespace MarymoorStudios.Core.Rpc.Exceptions Assembly MarymoorStudios.Core.Rpc.Exceptions.dll [DataContract] public sealed class InvalidArgumentException : Exception, ISerializable Inheritance object Exception InvalidArgumentException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetType() Exception.TargetSite Exception.Message Exception.Data Exception.InnerException Exception.HelpLink Exception.Source Exception.HResult Exception.StackTrace object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors InvalidArgumentException() public InvalidArgumentException() InvalidArgumentException(string?) public InvalidArgumentException(string? message) Parameters message string InvalidArgumentException(string?, Exception?) public InvalidArgumentException(string? message, Exception? inner) Parameters message string inner Exception"
  },
  "api/MarymoorStudios.Core.Rpc.Exceptions.InvalidArgumentExceptionSerializer.html": {
    "href": "api/MarymoorStudios.Core.Rpc.Exceptions.InvalidArgumentExceptionSerializer.html",
    "title": "Class InvalidArgumentExceptionSerializer",
    "summary": "Class InvalidArgumentExceptionSerializer Namespace MarymoorStudios.Core.Rpc.Exceptions Assembly MarymoorStudios.Core.Rpc.Exceptions.dll public sealed class InvalidArgumentExceptionSerializer : Serializer<InvalidArgumentException?>, IDerivedSerializer<InvalidArgumentException?>, IDerivedSerializer Inheritance object Serializer Serializer<InvalidArgumentException> InvalidArgumentExceptionSerializer Implements IDerivedSerializer<InvalidArgumentException> IDerivedSerializer Inherited Members Serializer<InvalidArgumentException>.Default Serializer.Register(Type, Type) Serializer.TrySizeOfDerived<TSuper>(SerializationContext, in TSuper, out int) Serializer.TryWriteDerived<TSuper>(SerializationContext, ref RowBuffer, in TSuper) Serializer.Slice(TypeId, ref TypeId, SerializationContext, ref ReadOnlyRowBuffer) Serializer.Dice(int, SerializationContext, ref ReadOnlyRowBuffer) Serializer.TryReadDerived<TSuper>(TypeId, SerializationContext, ref ReadOnlyRowBuffer, out TSuper) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors InvalidArgumentExceptionSerializer() public InvalidArgumentExceptionSerializer() Properties TypeId public static TypeId TypeId { get; } Property Value TypeId Methods GetTypeId() public override TypeId GetTypeId() Returns TypeId SizeOf(SerializationContext, in InvalidArgumentException?) public override int SizeOf(SerializationContext context, in InvalidArgumentException? value) Parameters context SerializationContext value InvalidArgumentException Returns int SizeOfSegment(SerializationContext, in InvalidArgumentException) public static int SizeOfSegment(SerializationContext context, in InvalidArgumentException value) Parameters context SerializationContext value InvalidArgumentException Returns int TryRead(SerializationContext, ref ReadOnlyRowBuffer, out InvalidArgumentException?) public override bool TryRead(SerializationContext context, ref ReadOnlyRowBuffer buffer, out InvalidArgumentException? value) Parameters context SerializationContext buffer ReadOnlyRowBuffer value InvalidArgumentException Returns bool TryReadSegment(SerializationContext, ref ReadOnlyRowBuffer) public static bool TryReadSegment(SerializationContext context, ref ReadOnlyRowBuffer buffer) Parameters context SerializationContext buffer ReadOnlyRowBuffer Returns bool Write(SerializationContext, ref RowBuffer, in InvalidArgumentException?) public override void Write(SerializationContext context, ref RowBuffer buffer, in InvalidArgumentException? value) Parameters context SerializationContext buffer RowBuffer value InvalidArgumentException WriteSegment(SerializationContext, ref RowBuffer, in InvalidArgumentException) public static void WriteSegment(SerializationContext context, ref RowBuffer buffer, in InvalidArgumentException value) Parameters context SerializationContext buffer RowBuffer value InvalidArgumentException"
  },
  "api/MarymoorStudios.Core.Rpc.Exceptions.NotFoundException.html": {
    "href": "api/MarymoorStudios.Core.Rpc.Exceptions.NotFoundException.html",
    "title": "Class NotFoundException",
    "summary": "Class NotFoundException Namespace MarymoorStudios.Core.Rpc.Exceptions Assembly MarymoorStudios.Core.Rpc.Exceptions.dll The operation failed because the target could not be found. [DataContract] public sealed class NotFoundException : Exception, ISerializable Inheritance object Exception NotFoundException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetType() Exception.TargetSite Exception.Message Exception.Data Exception.InnerException Exception.HelpLink Exception.Source Exception.HResult Exception.StackTrace object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors NotFoundException() public NotFoundException() NotFoundException(string?) public NotFoundException(string? message) Parameters message string NotFoundException(string?, Exception?) public NotFoundException(string? message, Exception? inner) Parameters message string inner Exception"
  },
  "api/MarymoorStudios.Core.Rpc.Exceptions.NotFoundExceptionSerializer.html": {
    "href": "api/MarymoorStudios.Core.Rpc.Exceptions.NotFoundExceptionSerializer.html",
    "title": "Class NotFoundExceptionSerializer",
    "summary": "Class NotFoundExceptionSerializer Namespace MarymoorStudios.Core.Rpc.Exceptions Assembly MarymoorStudios.Core.Rpc.Exceptions.dll public sealed class NotFoundExceptionSerializer : Serializer<NotFoundException?>, IDerivedSerializer<NotFoundException?>, IDerivedSerializer Inheritance object Serializer Serializer<NotFoundException> NotFoundExceptionSerializer Implements IDerivedSerializer<NotFoundException> IDerivedSerializer Inherited Members Serializer<NotFoundException>.Default Serializer.Register(Type, Type) Serializer.TrySizeOfDerived<TSuper>(SerializationContext, in TSuper, out int) Serializer.TryWriteDerived<TSuper>(SerializationContext, ref RowBuffer, in TSuper) Serializer.Slice(TypeId, ref TypeId, SerializationContext, ref ReadOnlyRowBuffer) Serializer.Dice(int, SerializationContext, ref ReadOnlyRowBuffer) Serializer.TryReadDerived<TSuper>(TypeId, SerializationContext, ref ReadOnlyRowBuffer, out TSuper) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors NotFoundExceptionSerializer() public NotFoundExceptionSerializer() Properties TypeId public static TypeId TypeId { get; } Property Value TypeId Methods GetTypeId() public override TypeId GetTypeId() Returns TypeId SizeOf(SerializationContext, in NotFoundException?) public override int SizeOf(SerializationContext context, in NotFoundException? value) Parameters context SerializationContext value NotFoundException Returns int SizeOfSegment(SerializationContext, in NotFoundException) public static int SizeOfSegment(SerializationContext context, in NotFoundException value) Parameters context SerializationContext value NotFoundException Returns int TryRead(SerializationContext, ref ReadOnlyRowBuffer, out NotFoundException?) public override bool TryRead(SerializationContext context, ref ReadOnlyRowBuffer buffer, out NotFoundException? value) Parameters context SerializationContext buffer ReadOnlyRowBuffer value NotFoundException Returns bool TryReadSegment(SerializationContext, ref ReadOnlyRowBuffer) public static bool TryReadSegment(SerializationContext context, ref ReadOnlyRowBuffer buffer) Parameters context SerializationContext buffer ReadOnlyRowBuffer Returns bool Write(SerializationContext, ref RowBuffer, in NotFoundException?) public override void Write(SerializationContext context, ref RowBuffer buffer, in NotFoundException? value) Parameters context SerializationContext buffer RowBuffer value NotFoundException WriteSegment(SerializationContext, ref RowBuffer, in NotFoundException) public static void WriteSegment(SerializationContext context, ref RowBuffer buffer, in NotFoundException value) Parameters context SerializationContext buffer RowBuffer value NotFoundException"
  },
  "api/MarymoorStudios.Core.Rpc.Exceptions.Test2Exception.html": {
    "href": "api/MarymoorStudios.Core.Rpc.Exceptions.Test2Exception.html",
    "title": "Class Test2Exception",
    "summary": "Class Test2Exception Namespace MarymoorStudios.Core.Rpc.Exceptions Assembly MarymoorStudios.Core.Rpc.Exceptions.dll An exception used in testing for type-based error discrimination. [DataContract] public sealed class Test2Exception : Exception, ISerializable, IEquatable<Test2Exception> Inheritance object Exception Test2Exception Implements ISerializable IEquatable<Test2Exception> Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetType() Exception.TargetSite Exception.Message Exception.Data Exception.InnerException Exception.HelpLink Exception.Source Exception.HResult Exception.StackTrace object.Equals(object, object) object.ReferenceEquals(object, object) Constructors Test2Exception() public Test2Exception() Test2Exception(string?) public Test2Exception(string? message) Parameters message string Test2Exception(string?, Exception?) public Test2Exception(string? message, Exception? inner) Parameters message string inner Exception Methods Equals(Test2Exception?) public bool Equals(Test2Exception? other) Parameters other Test2Exception Returns bool Equals(object?) public override bool Equals(object? obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int Operators operator ==(Test2Exception?, Test2Exception?) public static bool operator ==(Test2Exception? left, Test2Exception? right) Parameters left Test2Exception right Test2Exception Returns bool operator !=(Test2Exception?, Test2Exception?) public static bool operator !=(Test2Exception? left, Test2Exception? right) Parameters left Test2Exception right Test2Exception Returns bool"
  },
  "api/MarymoorStudios.Core.Rpc.Exceptions.Test2ExceptionSerializer.html": {
    "href": "api/MarymoorStudios.Core.Rpc.Exceptions.Test2ExceptionSerializer.html",
    "title": "Class Test2ExceptionSerializer",
    "summary": "Class Test2ExceptionSerializer Namespace MarymoorStudios.Core.Rpc.Exceptions Assembly MarymoorStudios.Core.Rpc.Exceptions.dll public sealed class Test2ExceptionSerializer : Serializer<Test2Exception?>, IDerivedSerializer<Test2Exception?>, IDerivedSerializer Inheritance object Serializer Serializer<Test2Exception> Test2ExceptionSerializer Implements IDerivedSerializer<Test2Exception> IDerivedSerializer Inherited Members Serializer<Test2Exception>.Default Serializer.Register(Type, Type) Serializer.TrySizeOfDerived<TSuper>(SerializationContext, in TSuper, out int) Serializer.TryWriteDerived<TSuper>(SerializationContext, ref RowBuffer, in TSuper) Serializer.Slice(TypeId, ref TypeId, SerializationContext, ref ReadOnlyRowBuffer) Serializer.Dice(int, SerializationContext, ref ReadOnlyRowBuffer) Serializer.TryReadDerived<TSuper>(TypeId, SerializationContext, ref ReadOnlyRowBuffer, out TSuper) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors Test2ExceptionSerializer() public Test2ExceptionSerializer() Properties TypeId public static TypeId TypeId { get; } Property Value TypeId Methods GetTypeId() public override TypeId GetTypeId() Returns TypeId SizeOf(SerializationContext, in Test2Exception?) public override int SizeOf(SerializationContext context, in Test2Exception? value) Parameters context SerializationContext value Test2Exception Returns int SizeOfSegment(SerializationContext, in Test2Exception) public static int SizeOfSegment(SerializationContext context, in Test2Exception value) Parameters context SerializationContext value Test2Exception Returns int TryRead(SerializationContext, ref ReadOnlyRowBuffer, out Test2Exception?) public override bool TryRead(SerializationContext context, ref ReadOnlyRowBuffer buffer, out Test2Exception? value) Parameters context SerializationContext buffer ReadOnlyRowBuffer value Test2Exception Returns bool TryReadSegment(SerializationContext, ref ReadOnlyRowBuffer) public static bool TryReadSegment(SerializationContext context, ref ReadOnlyRowBuffer buffer) Parameters context SerializationContext buffer ReadOnlyRowBuffer Returns bool Write(SerializationContext, ref RowBuffer, in Test2Exception?) public override void Write(SerializationContext context, ref RowBuffer buffer, in Test2Exception? value) Parameters context SerializationContext buffer RowBuffer value Test2Exception WriteSegment(SerializationContext, ref RowBuffer, in Test2Exception) public static void WriteSegment(SerializationContext context, ref RowBuffer buffer, in Test2Exception value) Parameters context SerializationContext buffer RowBuffer value Test2Exception"
  },
  "api/MarymoorStudios.Core.Rpc.Exceptions.TestException.html": {
    "href": "api/MarymoorStudios.Core.Rpc.Exceptions.TestException.html",
    "title": "Class TestException",
    "summary": "Class TestException Namespace MarymoorStudios.Core.Rpc.Exceptions Assembly MarymoorStudios.Core.Rpc.Exceptions.dll An exception used in testing for type-based error discrimination. [DataContract] public sealed class TestException : Exception, ISerializable, IEquatable<TestException> Inheritance object Exception TestException Implements ISerializable IEquatable<TestException> Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetType() Exception.TargetSite Exception.Message Exception.Data Exception.InnerException Exception.HelpLink Exception.Source Exception.HResult Exception.StackTrace object.Equals(object, object) object.ReferenceEquals(object, object) Constructors TestException() public TestException() TestException(string?) public TestException(string? message) Parameters message string TestException(string?, Exception?) public TestException(string? message, Exception? inner) Parameters message string inner Exception Methods Equals(TestException?) public bool Equals(TestException? other) Parameters other TestException Returns bool Equals(object?) public override bool Equals(object? obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int Operators operator ==(TestException?, TestException?) public static bool operator ==(TestException? left, TestException? right) Parameters left TestException right TestException Returns bool operator !=(TestException?, TestException?) public static bool operator !=(TestException? left, TestException? right) Parameters left TestException right TestException Returns bool"
  },
  "api/MarymoorStudios.Core.Rpc.Exceptions.TestExceptionSerializer.html": {
    "href": "api/MarymoorStudios.Core.Rpc.Exceptions.TestExceptionSerializer.html",
    "title": "Class TestExceptionSerializer",
    "summary": "Class TestExceptionSerializer Namespace MarymoorStudios.Core.Rpc.Exceptions Assembly MarymoorStudios.Core.Rpc.Exceptions.dll public sealed class TestExceptionSerializer : Serializer<TestException?>, IDerivedSerializer<TestException?>, IDerivedSerializer Inheritance object Serializer Serializer<TestException> TestExceptionSerializer Implements IDerivedSerializer<TestException> IDerivedSerializer Inherited Members Serializer<TestException>.Default Serializer.Register(Type, Type) Serializer.TrySizeOfDerived<TSuper>(SerializationContext, in TSuper, out int) Serializer.TryWriteDerived<TSuper>(SerializationContext, ref RowBuffer, in TSuper) Serializer.Slice(TypeId, ref TypeId, SerializationContext, ref ReadOnlyRowBuffer) Serializer.Dice(int, SerializationContext, ref ReadOnlyRowBuffer) Serializer.TryReadDerived<TSuper>(TypeId, SerializationContext, ref ReadOnlyRowBuffer, out TSuper) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors TestExceptionSerializer() public TestExceptionSerializer() Properties TypeId public static TypeId TypeId { get; } Property Value TypeId Methods GetTypeId() public override TypeId GetTypeId() Returns TypeId SizeOf(SerializationContext, in TestException?) public override int SizeOf(SerializationContext context, in TestException? value) Parameters context SerializationContext value TestException Returns int SizeOfSegment(SerializationContext, in TestException) public static int SizeOfSegment(SerializationContext context, in TestException value) Parameters context SerializationContext value TestException Returns int TryRead(SerializationContext, ref ReadOnlyRowBuffer, out TestException?) public override bool TryRead(SerializationContext context, ref ReadOnlyRowBuffer buffer, out TestException? value) Parameters context SerializationContext buffer ReadOnlyRowBuffer value TestException Returns bool TryReadSegment(SerializationContext, ref ReadOnlyRowBuffer) public static bool TryReadSegment(SerializationContext context, ref ReadOnlyRowBuffer buffer) Parameters context SerializationContext buffer ReadOnlyRowBuffer Returns bool Write(SerializationContext, ref RowBuffer, in TestException?) public override void Write(SerializationContext context, ref RowBuffer buffer, in TestException? value) Parameters context SerializationContext buffer RowBuffer value TestException WriteSegment(SerializationContext, ref RowBuffer, in TestException) public static void WriteSegment(SerializationContext context, ref RowBuffer buffer, in TestException value) Parameters context SerializationContext buffer RowBuffer value TestException"
  },
  "api/MarymoorStudios.Core.Rpc.Exceptions.UnauthenticatedException.html": {
    "href": "api/MarymoorStudios.Core.Rpc.Exceptions.UnauthenticatedException.html",
    "title": "Class UnauthenticatedException",
    "summary": "Class UnauthenticatedException Namespace MarymoorStudios.Core.Rpc.Exceptions Assembly MarymoorStudios.Core.Rpc.Exceptions.dll Insufficient authentication credentials to perform the requested operation. [DataContract] public sealed class UnauthenticatedException : Exception, ISerializable Inheritance object Exception UnauthenticatedException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetType() Exception.TargetSite Exception.Message Exception.Data Exception.InnerException Exception.HelpLink Exception.Source Exception.HResult Exception.StackTrace object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors UnauthenticatedException() public UnauthenticatedException() UnauthenticatedException(string?) public UnauthenticatedException(string? message) Parameters message string UnauthenticatedException(string?, Exception?) public UnauthenticatedException(string? message, Exception? inner) Parameters message string inner Exception"
  },
  "api/MarymoorStudios.Core.Rpc.Exceptions.UnauthenticatedExceptionSerializer.html": {
    "href": "api/MarymoorStudios.Core.Rpc.Exceptions.UnauthenticatedExceptionSerializer.html",
    "title": "Class UnauthenticatedExceptionSerializer",
    "summary": "Class UnauthenticatedExceptionSerializer Namespace MarymoorStudios.Core.Rpc.Exceptions Assembly MarymoorStudios.Core.Rpc.Exceptions.dll public sealed class UnauthenticatedExceptionSerializer : Serializer<UnauthenticatedException?>, IDerivedSerializer<UnauthenticatedException?>, IDerivedSerializer Inheritance object Serializer Serializer<UnauthenticatedException> UnauthenticatedExceptionSerializer Implements IDerivedSerializer<UnauthenticatedException> IDerivedSerializer Inherited Members Serializer<UnauthenticatedException>.Default Serializer.Register(Type, Type) Serializer.TrySizeOfDerived<TSuper>(SerializationContext, in TSuper, out int) Serializer.TryWriteDerived<TSuper>(SerializationContext, ref RowBuffer, in TSuper) Serializer.Slice(TypeId, ref TypeId, SerializationContext, ref ReadOnlyRowBuffer) Serializer.Dice(int, SerializationContext, ref ReadOnlyRowBuffer) Serializer.TryReadDerived<TSuper>(TypeId, SerializationContext, ref ReadOnlyRowBuffer, out TSuper) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors UnauthenticatedExceptionSerializer() public UnauthenticatedExceptionSerializer() Properties TypeId public static TypeId TypeId { get; } Property Value TypeId Methods GetTypeId() public override TypeId GetTypeId() Returns TypeId SizeOf(SerializationContext, in UnauthenticatedException?) public override int SizeOf(SerializationContext context, in UnauthenticatedException? value) Parameters context SerializationContext value UnauthenticatedException Returns int SizeOfSegment(SerializationContext, in UnauthenticatedException) public static int SizeOfSegment(SerializationContext context, in UnauthenticatedException value) Parameters context SerializationContext value UnauthenticatedException Returns int TryRead(SerializationContext, ref ReadOnlyRowBuffer, out UnauthenticatedException?) public override bool TryRead(SerializationContext context, ref ReadOnlyRowBuffer buffer, out UnauthenticatedException? value) Parameters context SerializationContext buffer ReadOnlyRowBuffer value UnauthenticatedException Returns bool TryReadSegment(SerializationContext, ref ReadOnlyRowBuffer) public static bool TryReadSegment(SerializationContext context, ref ReadOnlyRowBuffer buffer) Parameters context SerializationContext buffer ReadOnlyRowBuffer Returns bool Write(SerializationContext, ref RowBuffer, in UnauthenticatedException?) public override void Write(SerializationContext context, ref RowBuffer buffer, in UnauthenticatedException? value) Parameters context SerializationContext buffer RowBuffer value UnauthenticatedException WriteSegment(SerializationContext, ref RowBuffer, in UnauthenticatedException) public static void WriteSegment(SerializationContext context, ref RowBuffer buffer, in UnauthenticatedException value) Parameters context SerializationContext buffer RowBuffer value UnauthenticatedException"
  },
  "api/MarymoorStudios.Core.Rpc.Exceptions.UnavailableException.html": {
    "href": "api/MarymoorStudios.Core.Rpc.Exceptions.UnavailableException.html",
    "title": "Class UnavailableException",
    "summary": "Class UnavailableException Namespace MarymoorStudios.Core.Rpc.Exceptions Assembly MarymoorStudios.Core.Rpc.Exceptions.dll The service is currently unavailable. [DataContract] public sealed class UnavailableException : Exception, ISerializable Inheritance object Exception UnavailableException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetType() Exception.TargetSite Exception.Message Exception.Data Exception.InnerException Exception.HelpLink Exception.Source Exception.HResult Exception.StackTrace object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Remarks This is most likely a transient condition, which can be corrected by retrying with a backoff. Note that it is not always safe to retry non-idempotent operations. See guidelines at: FailedPreconditionException and AbortedException . Constructors UnavailableException() public UnavailableException() UnavailableException(string?) public UnavailableException(string? message) Parameters message string UnavailableException(string?, Exception?) public UnavailableException(string? message, Exception? inner) Parameters message string inner Exception"
  },
  "api/MarymoorStudios.Core.Rpc.Exceptions.UnavailableExceptionSerializer.html": {
    "href": "api/MarymoorStudios.Core.Rpc.Exceptions.UnavailableExceptionSerializer.html",
    "title": "Class UnavailableExceptionSerializer",
    "summary": "Class UnavailableExceptionSerializer Namespace MarymoorStudios.Core.Rpc.Exceptions Assembly MarymoorStudios.Core.Rpc.Exceptions.dll public sealed class UnavailableExceptionSerializer : Serializer<UnavailableException?>, IDerivedSerializer<UnavailableException?>, IDerivedSerializer Inheritance object Serializer Serializer<UnavailableException> UnavailableExceptionSerializer Implements IDerivedSerializer<UnavailableException> IDerivedSerializer Inherited Members Serializer<UnavailableException>.Default Serializer.Register(Type, Type) Serializer.TrySizeOfDerived<TSuper>(SerializationContext, in TSuper, out int) Serializer.TryWriteDerived<TSuper>(SerializationContext, ref RowBuffer, in TSuper) Serializer.Slice(TypeId, ref TypeId, SerializationContext, ref ReadOnlyRowBuffer) Serializer.Dice(int, SerializationContext, ref ReadOnlyRowBuffer) Serializer.TryReadDerived<TSuper>(TypeId, SerializationContext, ref ReadOnlyRowBuffer, out TSuper) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors UnavailableExceptionSerializer() public UnavailableExceptionSerializer() Properties TypeId public static TypeId TypeId { get; } Property Value TypeId Methods GetTypeId() public override TypeId GetTypeId() Returns TypeId SizeOf(SerializationContext, in UnavailableException?) public override int SizeOf(SerializationContext context, in UnavailableException? value) Parameters context SerializationContext value UnavailableException Returns int SizeOfSegment(SerializationContext, in UnavailableException) public static int SizeOfSegment(SerializationContext context, in UnavailableException value) Parameters context SerializationContext value UnavailableException Returns int TryRead(SerializationContext, ref ReadOnlyRowBuffer, out UnavailableException?) public override bool TryRead(SerializationContext context, ref ReadOnlyRowBuffer buffer, out UnavailableException? value) Parameters context SerializationContext buffer ReadOnlyRowBuffer value UnavailableException Returns bool TryReadSegment(SerializationContext, ref ReadOnlyRowBuffer) public static bool TryReadSegment(SerializationContext context, ref ReadOnlyRowBuffer buffer) Parameters context SerializationContext buffer ReadOnlyRowBuffer Returns bool Write(SerializationContext, ref RowBuffer, in UnavailableException?) public override void Write(SerializationContext context, ref RowBuffer buffer, in UnavailableException? value) Parameters context SerializationContext buffer RowBuffer value UnavailableException WriteSegment(SerializationContext, ref RowBuffer, in UnavailableException) public static void WriteSegment(SerializationContext context, ref RowBuffer buffer, in UnavailableException value) Parameters context SerializationContext buffer RowBuffer value UnavailableException"
  },
  "api/MarymoorStudios.Core.Rpc.Exceptions.UnimplementedException.html": {
    "href": "api/MarymoorStudios.Core.Rpc.Exceptions.UnimplementedException.html",
    "title": "Class UnimplementedException",
    "summary": "Class UnimplementedException Namespace MarymoorStudios.Core.Rpc.Exceptions Assembly MarymoorStudios.Core.Rpc.Exceptions.dll The operation is not implemented, not supported or disabled. [DataContract] public sealed class UnimplementedException : Exception, ISerializable Inheritance object Exception UnimplementedException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetType() Exception.TargetSite Exception.Message Exception.Data Exception.InnerException Exception.HelpLink Exception.Source Exception.HResult Exception.StackTrace object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors UnimplementedException() public UnimplementedException() UnimplementedException(string?) public UnimplementedException(string? message) Parameters message string UnimplementedException(string?, Exception?) public UnimplementedException(string? message, Exception? inner) Parameters message string inner Exception"
  },
  "api/MarymoorStudios.Core.Rpc.Exceptions.UnimplementedExceptionSerializer.html": {
    "href": "api/MarymoorStudios.Core.Rpc.Exceptions.UnimplementedExceptionSerializer.html",
    "title": "Class UnimplementedExceptionSerializer",
    "summary": "Class UnimplementedExceptionSerializer Namespace MarymoorStudios.Core.Rpc.Exceptions Assembly MarymoorStudios.Core.Rpc.Exceptions.dll public sealed class UnimplementedExceptionSerializer : Serializer<UnimplementedException?>, IDerivedSerializer<UnimplementedException?>, IDerivedSerializer Inheritance object Serializer Serializer<UnimplementedException> UnimplementedExceptionSerializer Implements IDerivedSerializer<UnimplementedException> IDerivedSerializer Inherited Members Serializer<UnimplementedException>.Default Serializer.Register(Type, Type) Serializer.TrySizeOfDerived<TSuper>(SerializationContext, in TSuper, out int) Serializer.TryWriteDerived<TSuper>(SerializationContext, ref RowBuffer, in TSuper) Serializer.Slice(TypeId, ref TypeId, SerializationContext, ref ReadOnlyRowBuffer) Serializer.Dice(int, SerializationContext, ref ReadOnlyRowBuffer) Serializer.TryReadDerived<TSuper>(TypeId, SerializationContext, ref ReadOnlyRowBuffer, out TSuper) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors UnimplementedExceptionSerializer() public UnimplementedExceptionSerializer() Properties TypeId public static TypeId TypeId { get; } Property Value TypeId Methods GetTypeId() public override TypeId GetTypeId() Returns TypeId SizeOf(SerializationContext, in UnimplementedException?) public override int SizeOf(SerializationContext context, in UnimplementedException? value) Parameters context SerializationContext value UnimplementedException Returns int SizeOfSegment(SerializationContext, in UnimplementedException) public static int SizeOfSegment(SerializationContext context, in UnimplementedException value) Parameters context SerializationContext value UnimplementedException Returns int TryRead(SerializationContext, ref ReadOnlyRowBuffer, out UnimplementedException?) public override bool TryRead(SerializationContext context, ref ReadOnlyRowBuffer buffer, out UnimplementedException? value) Parameters context SerializationContext buffer ReadOnlyRowBuffer value UnimplementedException Returns bool TryReadSegment(SerializationContext, ref ReadOnlyRowBuffer) public static bool TryReadSegment(SerializationContext context, ref ReadOnlyRowBuffer buffer) Parameters context SerializationContext buffer ReadOnlyRowBuffer Returns bool Write(SerializationContext, ref RowBuffer, in UnimplementedException?) public override void Write(SerializationContext context, ref RowBuffer buffer, in UnimplementedException? value) Parameters context SerializationContext buffer RowBuffer value UnimplementedException WriteSegment(SerializationContext, ref RowBuffer, in UnimplementedException) public static void WriteSegment(SerializationContext context, ref RowBuffer buffer, in UnimplementedException value) Parameters context SerializationContext buffer RowBuffer value UnimplementedException"
  },
  "api/MarymoorStudios.Core.Rpc.Exceptions.UninitializedException.html": {
    "href": "api/MarymoorStudios.Core.Rpc.Exceptions.UninitializedException.html",
    "title": "Class UninitializedException",
    "summary": "Class UninitializedException Namespace MarymoorStudios.Core.Rpc.Exceptions Assembly MarymoorStudios.Core.Rpc.Exceptions.dll Exception thrown when an uninitialized structure is used. [DataContract] public class UninitializedException : Exception, ISerializable Inheritance object Exception UninitializedException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetType() Exception.TargetSite Exception.Message Exception.Data Exception.InnerException Exception.HelpLink Exception.Source Exception.HResult Exception.StackTrace Exception.SerializeObjectState object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors UninitializedException() Constructor. public UninitializedException() UninitializedException(string?) Standard Exception constructor. public UninitializedException(string? message) Parameters message string UninitializedException(string?, Exception?) Standard Exception constructor. public UninitializedException(string? message, Exception? inner) Parameters message string inner Exception"
  },
  "api/MarymoorStudios.Core.Rpc.Exceptions.UninitializedExceptionSerializer.html": {
    "href": "api/MarymoorStudios.Core.Rpc.Exceptions.UninitializedExceptionSerializer.html",
    "title": "Class UninitializedExceptionSerializer",
    "summary": "Class UninitializedExceptionSerializer Namespace MarymoorStudios.Core.Rpc.Exceptions Assembly MarymoorStudios.Core.Rpc.Exceptions.dll public sealed class UninitializedExceptionSerializer : Serializer<UninitializedException?>, IDerivedSerializer<UninitializedException?>, IDerivedSerializer Inheritance object Serializer Serializer<UninitializedException> UninitializedExceptionSerializer Implements IDerivedSerializer<UninitializedException> IDerivedSerializer Inherited Members Serializer<UninitializedException>.Default Serializer.Register(Type, Type) Serializer.TrySizeOfDerived<TSuper>(SerializationContext, in TSuper, out int) Serializer.TryWriteDerived<TSuper>(SerializationContext, ref RowBuffer, in TSuper) Serializer.Slice(TypeId, ref TypeId, SerializationContext, ref ReadOnlyRowBuffer) Serializer.Dice(int, SerializationContext, ref ReadOnlyRowBuffer) Serializer.TryReadDerived<TSuper>(TypeId, SerializationContext, ref ReadOnlyRowBuffer, out TSuper) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors UninitializedExceptionSerializer() public UninitializedExceptionSerializer() Properties TypeId public static TypeId TypeId { get; } Property Value TypeId Methods GetTypeId() public override TypeId GetTypeId() Returns TypeId SizeOf(SerializationContext, in UninitializedException?) public override int SizeOf(SerializationContext context, in UninitializedException? value) Parameters context SerializationContext value UninitializedException Returns int SizeOfSegment(SerializationContext, in UninitializedException) public static int SizeOfSegment(SerializationContext context, in UninitializedException value) Parameters context SerializationContext value UninitializedException Returns int TryRead(SerializationContext, ref ReadOnlyRowBuffer, out UninitializedException?) public override bool TryRead(SerializationContext context, ref ReadOnlyRowBuffer buffer, out UninitializedException? value) Parameters context SerializationContext buffer ReadOnlyRowBuffer value UninitializedException Returns bool TryReadSegment(SerializationContext, ref ReadOnlyRowBuffer) public static bool TryReadSegment(SerializationContext context, ref ReadOnlyRowBuffer buffer) Parameters context SerializationContext buffer ReadOnlyRowBuffer Returns bool Write(SerializationContext, ref RowBuffer, in UninitializedException?) public override void Write(SerializationContext context, ref RowBuffer buffer, in UninitializedException? value) Parameters context SerializationContext buffer RowBuffer value UninitializedException WriteSegment(SerializationContext, ref RowBuffer, in UninitializedException) public static void WriteSegment(SerializationContext context, ref RowBuffer buffer, in UninitializedException value) Parameters context SerializationContext buffer RowBuffer value UninitializedException"
  },
  "api/MarymoorStudios.Core.Rpc.Exceptions.html": {
    "href": "api/MarymoorStudios.Core.Rpc.Exceptions.html",
    "title": "Namespace MarymoorStudios.Core.Rpc.Exceptions",
    "summary": "Namespace MarymoorStudios.Core.Rpc.Exceptions Classes AbortedException The operation has been terminated ungracefully. AbortedExceptionSerializer AlreadyExistsException The operation failed because the target already exists. AlreadyExistsExceptionSerializer EndOfSequenceException A sequence has been read past its EOS. EndOfSequenceExceptionSerializer FailedPreconditionException The operation was rejected because the system is not in a state required for the operation's execution. FailedPreconditionExceptionSerializer InsufficientResourcesException The needed resource are not available to complete the operation. InsufficientResourcesExceptionSerializer InvalidArgumentException InvalidArgumentExceptionSerializer NotFoundException The operation failed because the target could not be found. NotFoundExceptionSerializer Test2Exception An exception used in testing for type-based error discrimination. Test2ExceptionSerializer TestException An exception used in testing for type-based error discrimination. TestExceptionSerializer UnauthenticatedException Insufficient authentication credentials to perform the requested operation. UnauthenticatedExceptionSerializer UnavailableException The service is currently unavailable. UnavailableExceptionSerializer UnimplementedException The operation is not implemented, not supported or disabled. UnimplementedExceptionSerializer UninitializedException Exception thrown when an uninitialized structure is used. UninitializedExceptionSerializer"
  },
  "api/MarymoorStudios.Core.Rpc.IByRefRemotable.html": {
    "href": "api/MarymoorStudios.Core.Rpc.IByRefRemotable.html",
    "title": "Interface IByRefRemotable",
    "summary": "Interface IByRefRemotable Namespace MarymoorStudios.Core.Rpc Assembly MarymoorStudios.Core.Rpc.dll Objects that are remoted by reference (instead of by value). public interface IByRefRemotable"
  },
  "api/MarymoorStudios.Core.Rpc.IMetadata.Descriptor.html": {
    "href": "api/MarymoorStudios.Core.Rpc.IMetadata.Descriptor.html",
    "title": "Class IMetadata.Descriptor",
    "summary": "Class IMetadata.Descriptor Namespace MarymoorStudios.Core.Rpc Assembly MarymoorStudios.Core.Rpc.dll The base type for all late-bound capability descriptions. [DataContract] public record IMetadata.Descriptor : IEquatable<IMetadata.Descriptor> Inheritance object IMetadata.Descriptor Implements IEquatable<IMetadata.Descriptor> Inherited Members object.GetType() object.MemberwiseClone() object.Equals(object, object) object.ReferenceEquals(object, object) Remarks Concrete late-bound capability descriptors should be derived from this base. This base is NOT to support partial materialization of capability descriptors by down-level consumers. Constructors Descriptor(Descriptor) protected Descriptor(IMetadata.Descriptor original) Parameters original IMetadata.Descriptor Descriptor(string, string) The base type for all late-bound capability descriptions. public Descriptor(string Name, string Description) Parameters Name string The name of the capability. Description string A brief description of the capability (for display). Remarks Concrete late-bound capability descriptors should be derived from this base. This base is NOT to support partial materialization of capability descriptors by down-level consumers. Properties Description A brief description of the capability (for display). public string Description { get; init; } Property Value string EqualityContract protected virtual Type EqualityContract { get; } Property Value Type Name The name of the capability. public string Name { get; init; } Property Value string Methods Deconstruct(out string, out string) public void Deconstruct(out string Name, out string Description) Parameters Name string Description string Equals(Descriptor?) public virtual bool Equals(IMetadata.Descriptor? other) Parameters other IMetadata.Descriptor Returns bool Equals(object?) public override bool Equals(object? obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int PrintMembers(StringBuilder) protected virtual bool PrintMembers(StringBuilder builder) Parameters builder StringBuilder Returns bool ToString() public override string ToString() Returns string Operators operator ==(Descriptor?, Descriptor?) public static bool operator ==(IMetadata.Descriptor? left, IMetadata.Descriptor? right) Parameters left IMetadata.Descriptor right IMetadata.Descriptor Returns bool operator !=(Descriptor?, Descriptor?) public static bool operator !=(IMetadata.Descriptor? left, IMetadata.Descriptor? right) Parameters left IMetadata.Descriptor right IMetadata.Descriptor Returns bool"
  },
  "api/MarymoorStudios.Core.Rpc.IMetadata.DescriptorSerializer.html": {
    "href": "api/MarymoorStudios.Core.Rpc.IMetadata.DescriptorSerializer.html",
    "title": "Class IMetadata.DescriptorSerializer",
    "summary": "Class IMetadata.DescriptorSerializer Namespace MarymoorStudios.Core.Rpc Assembly MarymoorStudios.Core.Rpc.dll public sealed class IMetadata.DescriptorSerializer : Serializer<IMetadata.Descriptor?>, IDerivedSerializer<IMetadata.Descriptor?>, IDerivedSerializer Inheritance object Serializer Serializer<IMetadata.Descriptor> IMetadata.DescriptorSerializer Implements IDerivedSerializer<IMetadata.Descriptor> IDerivedSerializer Inherited Members Serializer<IMetadata.Descriptor>.Default Serializer.Register(Type, Type) Serializer.TrySizeOfDerived<TSuper>(SerializationContext, in TSuper, out int) Serializer.TryWriteDerived<TSuper>(SerializationContext, ref RowBuffer, in TSuper) Serializer.Slice(TypeId, ref TypeId, SerializationContext, ref ReadOnlyRowBuffer) Serializer.Dice(int, SerializationContext, ref ReadOnlyRowBuffer) Serializer.TryReadDerived<TSuper>(TypeId, SerializationContext, ref ReadOnlyRowBuffer, out TSuper) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors DescriptorSerializer() public DescriptorSerializer() Properties TypeId public static TypeId TypeId { get; } Property Value TypeId Methods GetTypeId() public override TypeId GetTypeId() Returns TypeId SizeOf(SerializationContext, in Descriptor?) public override int SizeOf(SerializationContext context, in IMetadata.Descriptor? value) Parameters context SerializationContext value IMetadata.Descriptor Returns int SizeOfSegment(SerializationContext, in Descriptor) public static int SizeOfSegment(SerializationContext context, in IMetadata.Descriptor value) Parameters context SerializationContext value IMetadata.Descriptor Returns int TryRead(SerializationContext, ref ReadOnlyRowBuffer, out Descriptor?) public override bool TryRead(SerializationContext context, ref ReadOnlyRowBuffer buffer, out IMetadata.Descriptor? value) Parameters context SerializationContext buffer ReadOnlyRowBuffer value IMetadata.Descriptor Returns bool TryReadSegment(SerializationContext, ref ReadOnlyRowBuffer, out string, out string) public static bool TryReadSegment(SerializationContext context, ref ReadOnlyRowBuffer buffer, out string memberName, out string memberDescription) Parameters context SerializationContext buffer ReadOnlyRowBuffer memberName string memberDescription string Returns bool Write(SerializationContext, ref RowBuffer, in Descriptor?) public override void Write(SerializationContext context, ref RowBuffer buffer, in IMetadata.Descriptor? value) Parameters context SerializationContext buffer RowBuffer value IMetadata.Descriptor WriteSegment(SerializationContext, ref RowBuffer, in Descriptor) public static void WriteSegment(SerializationContext context, ref RowBuffer buffer, in IMetadata.Descriptor value) Parameters context SerializationContext buffer RowBuffer value IMetadata.Descriptor"
  },
  "api/MarymoorStudios.Core.Rpc.IMetadata.html": {
    "href": "api/MarymoorStudios.Core.Rpc.IMetadata.html",
    "title": "Interface IMetadata",
    "summary": "Interface IMetadata Namespace MarymoorStudios.Core.Rpc Assembly MarymoorStudios.Core.Rpc.dll A general mechanism for publishing late-bound eventual capabilities. [Eventual] public interface IMetadata Remarks IMetadata is a general Eventual interface for exposing a set of late-bound capabilities. Exactly which capabilities are published can be defined at runtime. IMetadata makes for a useful root capability from any Sip that may: Expose different capabilities to different clients (e.g. IMyService and IYourService). Expose different capabilities at different times (e.g. IStateState and IFinalState ). Expose multiple version-specific interfaces of the same service (e.g. IMyServiceV1 and IMyServiceV2). Methods GetCapabilities() Promise<IMetadata.Descriptor[]> GetCapabilities() Returns Promise<IMetadata.Descriptor[]>"
  },
  "api/MarymoorStudios.Core.Rpc.INothing.html": {
    "href": "api/MarymoorStudios.Core.Rpc.INothing.html",
    "title": "Interface INothing",
    "summary": "Interface INothing Namespace MarymoorStudios.Core.Rpc Assembly MarymoorStudios.Core.Rpc.dll Empty eventual interface that grants no capabilities. [Eventual] public interface INothing"
  },
  "api/MarymoorStudios.Core.Rpc.IProxy-2.html": {
    "href": "api/MarymoorStudios.Core.Rpc.IProxy-2.html",
    "title": "Interface IProxy<TProxy, TServer>",
    "summary": "Interface IProxy<TProxy, TServer> Namespace MarymoorStudios.Core.Rpc Assembly MarymoorStudios.Core.Rpc.dll Interface that provides generic constraints. public interface IProxy<out TProxy, TServer> where TProxy : Proxy<TServer> where TServer : AServer<TServer> Type Parameters TProxy TServer Methods Create(Promise<TServer>) Creates a forwarded promise whose outcome will be the same as p. public static abstract TProxy Create(Promise<TServer> p) Parameters p Promise<TServer> Returns TProxy Create(Resolver<TServer>) Creates an unresolved promise whose future outcome is defined by r. public static abstract TProxy Create(Resolver<TServer> r) Parameters r Resolver<TServer> Returns TProxy Create(Proxy<TServer>) Creates a forwarded promise whose outcome will be the same as proxy. public static abstract TProxy Create(Proxy<TServer> proxy) Parameters proxy Proxy<TServer> Returns TProxy Create(Exception) Creates a failed promise whose outcome is ex. public static abstract TProxy Create(Exception ex) Parameters ex Exception Returns TProxy Create(TServer) Creates a successfully resolved promise. public static abstract TProxy Create(TServer server) Parameters server TServer Returns TProxy"
  },
  "api/MarymoorStudios.Core.Rpc.Identity.AdmissionManager.AdmissionPolicy.html": {
    "href": "api/MarymoorStudios.Core.Rpc.Identity.AdmissionManager.AdmissionPolicy.html",
    "title": "Enum AdmissionManager.AdmissionPolicy",
    "summary": "Enum AdmissionManager.AdmissionPolicy Namespace MarymoorStudios.Core.Rpc.Identity Assembly MarymoorStudios.Core.Rpc.Identity.dll The admission policy. [DataContract] public enum AdmissionManager.AdmissionPolicy Fields FriendsOnly = 0 Admit only those explicitly approved (who are not also banned). AllowAll = 1 Admit everyone (except those explicitly banned)."
  },
  "api/MarymoorStudios.Core.Rpc.Identity.AdmissionManager.AdmissionPolicySerializer.html": {
    "href": "api/MarymoorStudios.Core.Rpc.Identity.AdmissionManager.AdmissionPolicySerializer.html",
    "title": "Class AdmissionManager.AdmissionPolicySerializer",
    "summary": "Class AdmissionManager.AdmissionPolicySerializer Namespace MarymoorStudios.Core.Rpc.Identity Assembly MarymoorStudios.Core.Rpc.Identity.dll public sealed class AdmissionManager.AdmissionPolicySerializer : Serializer<AdmissionManager.AdmissionPolicy> Inheritance object Serializer Serializer<AdmissionManager.AdmissionPolicy> AdmissionManager.AdmissionPolicySerializer Inherited Members Serializer<AdmissionManager.AdmissionPolicy>.Default Serializer.Register(Type, Type) Serializer.TrySizeOfDerived<TSuper>(SerializationContext, in TSuper, out int) Serializer.TryWriteDerived<TSuper>(SerializationContext, ref RowBuffer, in TSuper) Serializer.Slice(TypeId, ref TypeId, SerializationContext, ref ReadOnlyRowBuffer) Serializer.Dice(int, SerializationContext, ref ReadOnlyRowBuffer) Serializer.TryReadDerived<TSuper>(TypeId, SerializationContext, ref ReadOnlyRowBuffer, out TSuper) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors AdmissionPolicySerializer() public AdmissionPolicySerializer() Properties TypeId public static TypeId TypeId { get; } Property Value TypeId Methods GetTypeId() public override TypeId GetTypeId() Returns TypeId SizeOf(SerializationContext, in AdmissionPolicy) public override int SizeOf(SerializationContext context, in AdmissionManager.AdmissionPolicy value) Parameters context SerializationContext value AdmissionManager.AdmissionPolicy Returns int TryRead(SerializationContext, ref ReadOnlyRowBuffer, out AdmissionPolicy) public override bool TryRead(SerializationContext context, ref ReadOnlyRowBuffer buffer, out AdmissionManager.AdmissionPolicy value) Parameters context SerializationContext buffer ReadOnlyRowBuffer value AdmissionManager.AdmissionPolicy Returns bool Write(SerializationContext, ref RowBuffer, in AdmissionPolicy) public override void Write(SerializationContext context, ref RowBuffer buffer, in AdmissionManager.AdmissionPolicy value) Parameters context SerializationContext buffer RowBuffer value AdmissionManager.AdmissionPolicy"
  },
  "api/MarymoorStudios.Core.Rpc.Identity.AdmissionManager.html": {
    "href": "api/MarymoorStudios.Core.Rpc.Identity.AdmissionManager.html",
    "title": "Class AdmissionManager",
    "summary": "Class AdmissionManager Namespace MarymoorStudios.Core.Rpc.Identity Assembly MarymoorStudios.Core.Rpc.Identity.dll public class AdmissionManager : IAdmissionManager<AdmissionManager, object?> Inheritance object AdmissionManager Implements IAdmissionManager<AdmissionManager, object> Derived RemoteAdmissionManager Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors AdmissionManager(ILoggerFactory, AdmissionPolicy, int) Constructor. protected AdmissionManager(ILoggerFactory factory, AdmissionManager.AdmissionPolicy policy, int maxRecencyList) Parameters factory ILoggerFactory policy AdmissionManager.AdmissionPolicy maxRecencyList int Properties ActiveEndorsements Active Endorsements. public EndorsementCollection ActiveEndorsements { get; } Property Value EndorsementCollection Approved Users explicitly approved. public UserIdentityCollection Approved { get; } Property Value UserIdentityCollection Remarks These users (friends) are always admitted. Banned Users explicitly banned. public UserIdentityCollection Banned { get; } Property Value UserIdentityCollection Remarks These users are never admitted (even if also approved). InactiveEndorsements Inactive Endorsements. public EndorsementCollection InactiveEndorsements { get; } Property Value EndorsementCollection MaxRecencyList The maximum number of entries to maintain in RecencyList. public int MaxRecencyList { get; set; } Property Value int Policy The policy for which users to admit. public AdmissionManager.AdmissionPolicy Policy { get; set; } Property Value AdmissionManager.AdmissionPolicy RecencyList The list of recently seen users. public UserIdentityRecencyList RecencyList { get; } Property Value UserIdentityRecencyList Remarks This list includes both accepted and refused users. Methods Create(ILoggerFactory, AdmissionPolicy, int) Creates a new admission manager. public static AdmissionManager Create(ILoggerFactory factory, AdmissionManager.AdmissionPolicy policy = AdmissionPolicy.FriendsOnly, int maxRecencyList = 10) Parameters factory ILoggerFactory policy AdmissionManager.AdmissionPolicy maxRecencyList int Returns AdmissionManager OnAdmit(UserIdentity, IEnumerable<Endorsement>, DateTime) protected virtual ValueTask<bool> OnAdmit(UserIdentity identity, IEnumerable<Endorsement> endorsements, DateTime timestamp) Parameters identity UserIdentity endorsements IEnumerable<Endorsement> timestamp DateTime Returns ValueTask<bool> TryAdmit(UserIdentity, IEnumerable<Endorsement>, DateTime) Checks if the user identity can be admitted. public ValueTask<bool> TryAdmit(UserIdentity identity, IEnumerable<Endorsement> endorsements, DateTime timestamp) Parameters identity UserIdentity The user identity to check. endorsements IEnumerable<Endorsement> Endorsements that support the identity provided by identity. timestamp DateTime The timestamp. Returns ValueTask<bool> True if the user should be admitted, false otherwise. Explicit Interface Implementations Create(object?, ILoggerFactory, AdmissionPolicy, int) Creates a new admission manager. static AdmissionManager Create(object? args, ILoggerFactory factory, AdmissionManager.AdmissionPolicy policy = AdmissionPolicy.FriendsOnly, int maxRecencyList = 10) Parameters args object factory ILoggerFactory policy AdmissionManager.AdmissionPolicy maxRecencyList int Returns AdmissionManager"
  },
  "api/MarymoorStudios.Core.Rpc.Identity.CertificateManager.html": {
    "href": "api/MarymoorStudios.Core.Rpc.Identity.CertificateManager.html",
    "title": "Class CertificateManager",
    "summary": "Class CertificateManager Namespace MarymoorStudios.Core.Rpc.Identity Assembly MarymoorStudios.Core.Rpc.Identity.dll Manages the certificates that provide identity to others. public abstract class CertificateManager : IDisposable, IAsyncDisposable Inheritance object CertificateManager Implements IDisposable IAsyncDisposable Derived StoreCertificateManager Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors CertificateManager() protected CertificateManager() Properties ClientOptions The TLS client options used to negotiate authentication parameters. public abstract SslClientAuthenticationOptions ClientOptions { get; } Property Value SslClientAuthenticationOptions Endorsements Endorsements to support Identity. public abstract EndorsementCollection Endorsements { get; } Property Value EndorsementCollection Identity The identity. public abstract UserIdentity Identity { get; } Property Value UserIdentity ServerOptions The TLS server options used to negotiate authentication parameters. public abstract SslServerAuthenticationOptions ServerOptions { get; } Property Value SslServerAuthenticationOptions Methods Dispose() public void Dispose() Dispose(bool) protected virtual void Dispose(bool disposing) Parameters disposing bool DisposeAsync() public ValueTask DisposeAsync() Returns ValueTask DisposeAsyncCore() protected virtual ValueTask DisposeAsyncCore() Returns ValueTask TryAdmit(UserIdentity, IEnumerable<Endorsement>, DateTime) Checks if the user can be admitted. public abstract ValueTask<bool> TryAdmit(UserIdentity identity, IEnumerable<Endorsement> endorsements, DateTime timestamp) Parameters identity UserIdentity The identity of the user to be admitted. endorsements IEnumerable<Endorsement> Endorsements that support the identity provided by identity. timestamp DateTime The timestamp. Returns ValueTask<bool> True if the user should be admitted, false otherwise. TryAdmit(X509Certificate, IEnumerable<Endorsement>, DateTime) Checks if the user can be admitted. public abstract ValueTask<(bool IsAdmitted, UserIdentity Identity)> TryAdmit(X509Certificate cert, IEnumerable<Endorsement> endorsements, DateTime timestamp) Parameters cert X509Certificate The user's certificate. endorsements IEnumerable<Endorsement> Endorsements that support the identity provided by cert. timestamp DateTime The timestamp. Returns ValueTask<(bool IsAdmitted, UserIdentity Identity)> (True, the admitted identity) if the user should be admitted, (false, undefined) otherwise. TrySignData(ReadOnlySpan<byte>, out ReadOnlyMemory<byte>) Signs data with the Identity private key. public abstract bool TrySignData(ReadOnlySpan<byte> data, out ReadOnlyMemory<byte> signature) Parameters data ReadOnlySpan<byte> The data to sign. signature ReadOnlyMemory<byte> The signature, if successful, undefined otherwise. Returns bool True if successful, false otherwise. ValidateData(ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>) Validates a signature over the data. public abstract bool ValidateData(ReadOnlySpan<byte> publicKey, ReadOnlySpan<byte> data, ReadOnlySpan<byte> signature) Parameters publicKey ReadOnlySpan<byte> The public key whose private key was used to sign the data. data ReadOnlySpan<byte> The data that was signed. signature ReadOnlySpan<byte> The signature to validate. Returns bool True if successful, false otherwise."
  },
  "api/MarymoorStudios.Core.Rpc.Identity.Endorsement.html": {
    "href": "api/MarymoorStudios.Core.Rpc.Identity.Endorsement.html",
    "title": "Class Endorsement",
    "summary": "Class Endorsement Namespace MarymoorStudios.Core.Rpc.Identity Assembly MarymoorStudios.Core.Rpc.Identity.dll [DataContract] public sealed class Endorsement Inheritance object Endorsement Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors Endorsement(string, ReadOnlyMemory<byte>, DateTime, string, ReadOnlyMemory<byte>, ReadOnlyMemory<byte>, string[]?) public Endorsement(string email, ReadOnlyMemory<byte> publicKey, DateTime created, string issuer, ReadOnlyMemory<byte> issuerPublicKey, ReadOnlyMemory<byte> signature, string[]? claims = null) Parameters email string publicKey ReadOnlyMemory<byte> created DateTime issuer string issuerPublicKey ReadOnlyMemory<byte> signature ReadOnlyMemory<byte> claims string[] Properties Claims An (optional) set of additional claims. [DataMember] public string[]? Claims { get; } Property Value string[] Created Date the endorsement was created. [DataMember] public DateTime Created { get; } Property Value DateTime Email Email address of the endorsed identity. [DataMember] public string Email { get; } Property Value string Issuer Email address of the issuing identity. [DataMember] public string Issuer { get; } Property Value string IssuerPublicKey Public key of the issuing identity. [DataMember] public ReadOnlyMemory<byte> IssuerPublicKey { get; } Property Value ReadOnlyMemory<byte> PublicKey Public key of the endorsed identity. [DataMember] public ReadOnlyMemory<byte> PublicKey { get; } Property Value ReadOnlyMemory<byte> Signature The signed hash. [DataMember] public ReadOnlyMemory<byte> Signature { get; } Property Value ReadOnlyMemory<byte> Methods PublicKeyEquals(Endorsement, Endorsement) Returns true if the two endorsements have the same public keys. public static bool PublicKeyEquals(Endorsement e1, Endorsement e2) Parameters e1 Endorsement e2 Endorsement Returns bool TryCreate(CertificateManager, UserIdentity, DateTime, out Endorsement) Creates an endorsement for a given identity. public static bool TryCreate(CertificateManager issuer, UserIdentity target, DateTime timestamp, out Endorsement endorsement) Parameters issuer CertificateManager The identity issuing the endorsement. target UserIdentity The identity to be endorsed. timestamp DateTime The timestamp to use for the creation time. endorsement Endorsement If successful, the endorsement. Returns bool True is successful, false otherwise. Remarks The issuer MUST include a private key. TryCreate(CertificateManager, UserIdentity, DateTime, string[], out Endorsement) Creates an endorsement for a given identity. public static bool TryCreate(CertificateManager issuer, UserIdentity target, DateTime timestamp, string[] claims, out Endorsement endorsement) Parameters issuer CertificateManager The identity issuing the endorsement. target UserIdentity The identity to be endorsed. timestamp DateTime The timestamp to use for the creation time. claims string[] An (optional) set of additional claims. endorsement Endorsement If successful, the endorsement. Returns bool True is successful, false otherwise. Remarks The issuer MUST include a private key. Validate(CertificateManager) Validates an endorsement. public bool Validate(CertificateManager certMgr) Parameters certMgr CertificateManager Returns bool True if the endorsement is valid, false otherwise."
  },
  "api/MarymoorStudios.Core.Rpc.Identity.EndorsementCollection.html": {
    "href": "api/MarymoorStudios.Core.Rpc.Identity.EndorsementCollection.html",
    "title": "Class EndorsementCollection",
    "summary": "Class EndorsementCollection Namespace MarymoorStudios.Core.Rpc.Identity Assembly MarymoorStudios.Core.Rpc.Identity.dll An unordered set of Endorsement. [DataContract] public sealed class EndorsementCollection : IEnumerable<Endorsement>, IEnumerable Inheritance object EndorsementCollection Implements IEnumerable<Endorsement> IEnumerable Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors EndorsementCollection() Create an empty collection. public EndorsementCollection() EndorsementCollection(IEnumerable<Endorsement>) Create a collection prepopulated with a set of initial members. public EndorsementCollection(IEnumerable<Endorsement> members) Parameters members IEnumerable<Endorsement> The initial members. Properties Count The number of entries in the collection. public int Count { get; } Property Value int Members The members of the collection. [DataMember] public IEnumerable<Endorsement> Members { get; } Property Value IEnumerable<Endorsement> Methods Add(Endorsement) Adds an endorsement to the collection. public bool Add(Endorsement endorsement) Parameters endorsement Endorsement The endorsement. Returns bool True if successfully added, false otherwise. AddOrUpdate(Endorsement) Adds or updates an endorsement to the collection. public bool AddOrUpdate(Endorsement endorsement) Parameters endorsement Endorsement The endorsement. Returns bool True if updated, false if added. Contains(Endorsement) Returns true if the endorsement is a member of the collection, false otherwise. public bool Contains(Endorsement endorsement) Parameters endorsement Endorsement Returns bool GetEnumerator() public IEnumerator<Endorsement> GetEnumerator() Returns IEnumerator<Endorsement> Remove(Endorsement) Remove an endorsement from the collection. public bool Remove(Endorsement endorsement) Parameters endorsement Endorsement The endorsement. Returns bool True if removed, false otherwise."
  },
  "api/MarymoorStudios.Core.Rpc.Identity.EndorsementCollectionSerializer.html": {
    "href": "api/MarymoorStudios.Core.Rpc.Identity.EndorsementCollectionSerializer.html",
    "title": "Class EndorsementCollectionSerializer",
    "summary": "Class EndorsementCollectionSerializer Namespace MarymoorStudios.Core.Rpc.Identity Assembly MarymoorStudios.Core.Rpc.Identity.dll public sealed class EndorsementCollectionSerializer : Serializer<EndorsementCollection?>, IDerivedSerializer<EndorsementCollection?>, IDerivedSerializer Inheritance object Serializer Serializer<EndorsementCollection> EndorsementCollectionSerializer Implements IDerivedSerializer<EndorsementCollection> IDerivedSerializer Inherited Members Serializer<EndorsementCollection>.Default Serializer.Register(Type, Type) Serializer.TrySizeOfDerived<TSuper>(SerializationContext, in TSuper, out int) Serializer.TryWriteDerived<TSuper>(SerializationContext, ref RowBuffer, in TSuper) Serializer.Slice(TypeId, ref TypeId, SerializationContext, ref ReadOnlyRowBuffer) Serializer.Dice(int, SerializationContext, ref ReadOnlyRowBuffer) Serializer.TryReadDerived<TSuper>(TypeId, SerializationContext, ref ReadOnlyRowBuffer, out TSuper) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors EndorsementCollectionSerializer() public EndorsementCollectionSerializer() Properties TypeId public static TypeId TypeId { get; } Property Value TypeId Methods GetTypeId() public override TypeId GetTypeId() Returns TypeId SizeOf(SerializationContext, in EndorsementCollection?) public override int SizeOf(SerializationContext context, in EndorsementCollection? value) Parameters context SerializationContext value EndorsementCollection Returns int SizeOfSegment(SerializationContext, in EndorsementCollection) public static int SizeOfSegment(SerializationContext context, in EndorsementCollection value) Parameters context SerializationContext value EndorsementCollection Returns int TryRead(SerializationContext, ref ReadOnlyRowBuffer, out EndorsementCollection?) public override bool TryRead(SerializationContext context, ref ReadOnlyRowBuffer buffer, out EndorsementCollection? value) Parameters context SerializationContext buffer ReadOnlyRowBuffer value EndorsementCollection Returns bool TryReadSegment(SerializationContext, ref ReadOnlyRowBuffer, out IEnumerable<Endorsement>) public static bool TryReadSegment(SerializationContext context, ref ReadOnlyRowBuffer buffer, out IEnumerable<Endorsement> memberMembers) Parameters context SerializationContext buffer ReadOnlyRowBuffer memberMembers IEnumerable<Endorsement> Returns bool Write(SerializationContext, ref RowBuffer, in EndorsementCollection?) public override void Write(SerializationContext context, ref RowBuffer buffer, in EndorsementCollection? value) Parameters context SerializationContext buffer RowBuffer value EndorsementCollection WriteSegment(SerializationContext, ref RowBuffer, in EndorsementCollection) public static void WriteSegment(SerializationContext context, ref RowBuffer buffer, in EndorsementCollection value) Parameters context SerializationContext buffer RowBuffer value EndorsementCollection"
  },
  "api/MarymoorStudios.Core.Rpc.Identity.EndorsementSerializer.html": {
    "href": "api/MarymoorStudios.Core.Rpc.Identity.EndorsementSerializer.html",
    "title": "Class EndorsementSerializer",
    "summary": "Class EndorsementSerializer Namespace MarymoorStudios.Core.Rpc.Identity Assembly MarymoorStudios.Core.Rpc.Identity.dll public sealed class EndorsementSerializer : Serializer<Endorsement?>, IDerivedSerializer<Endorsement?>, IDerivedSerializer Inheritance object Serializer Serializer<Endorsement> EndorsementSerializer Implements IDerivedSerializer<Endorsement> IDerivedSerializer Inherited Members Serializer<Endorsement>.Default Serializer.Register(Type, Type) Serializer.TrySizeOfDerived<TSuper>(SerializationContext, in TSuper, out int) Serializer.TryWriteDerived<TSuper>(SerializationContext, ref RowBuffer, in TSuper) Serializer.Slice(TypeId, ref TypeId, SerializationContext, ref ReadOnlyRowBuffer) Serializer.Dice(int, SerializationContext, ref ReadOnlyRowBuffer) Serializer.TryReadDerived<TSuper>(TypeId, SerializationContext, ref ReadOnlyRowBuffer, out TSuper) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors EndorsementSerializer() public EndorsementSerializer() Properties TypeId public static TypeId TypeId { get; } Property Value TypeId Methods GetTypeId() public override TypeId GetTypeId() Returns TypeId SizeOf(SerializationContext, in Endorsement?) public override int SizeOf(SerializationContext context, in Endorsement? value) Parameters context SerializationContext value Endorsement Returns int SizeOfSegment(SerializationContext, in Endorsement) public static int SizeOfSegment(SerializationContext context, in Endorsement value) Parameters context SerializationContext value Endorsement Returns int TryRead(SerializationContext, ref ReadOnlyRowBuffer, out Endorsement?) public override bool TryRead(SerializationContext context, ref ReadOnlyRowBuffer buffer, out Endorsement? value) Parameters context SerializationContext buffer ReadOnlyRowBuffer value Endorsement Returns bool TryReadSegment(SerializationContext, ref ReadOnlyRowBuffer, out string, out ReadOnlyMemory<byte>, out DateTime, out string, out ReadOnlyMemory<byte>, out ReadOnlyMemory<byte>, out string[]?) public static bool TryReadSegment(SerializationContext context, ref ReadOnlyRowBuffer buffer, out string memberEmail, out ReadOnlyMemory<byte> memberPublicKey, out DateTime memberCreated, out string memberIssuer, out ReadOnlyMemory<byte> memberIssuerPublicKey, out ReadOnlyMemory<byte> memberSignature, out string[]? memberClaims) Parameters context SerializationContext buffer ReadOnlyRowBuffer memberEmail string memberPublicKey ReadOnlyMemory<byte> memberCreated DateTime memberIssuer string memberIssuerPublicKey ReadOnlyMemory<byte> memberSignature ReadOnlyMemory<byte> memberClaims string[] Returns bool Write(SerializationContext, ref RowBuffer, in Endorsement?) public override void Write(SerializationContext context, ref RowBuffer buffer, in Endorsement? value) Parameters context SerializationContext buffer RowBuffer value Endorsement WriteSegment(SerializationContext, ref RowBuffer, in Endorsement) public static void WriteSegment(SerializationContext context, ref RowBuffer buffer, in Endorsement value) Parameters context SerializationContext buffer RowBuffer value Endorsement"
  },
  "api/MarymoorStudios.Core.Rpc.Identity.IAdmissionManager-2.html": {
    "href": "api/MarymoorStudios.Core.Rpc.Identity.IAdmissionManager-2.html",
    "title": "Interface IAdmissionManager<TAdmissionManager, TArg>",
    "summary": "Interface IAdmissionManager<TAdmissionManager, TArg> Namespace MarymoorStudios.Core.Rpc.Identity Assembly MarymoorStudios.Core.Rpc.Identity.dll Interface that provides generic constraints. public interface IAdmissionManager<out TAdmissionManager, in TArg> where TAdmissionManager : AdmissionManager Type Parameters TAdmissionManager TArg Methods Create(TArg, ILoggerFactory, AdmissionPolicy, int) Creates a new admission manager. public static abstract TAdmissionManager Create(TArg args, ILoggerFactory factory, AdmissionManager.AdmissionPolicy policy, int maxRecencyList) Parameters args TArg factory ILoggerFactory policy AdmissionManager.AdmissionPolicy maxRecencyList int Returns TAdmissionManager"
  },
  "api/MarymoorStudios.Core.Rpc.Identity.IO.AdmissionPolicyFile.html": {
    "href": "api/MarymoorStudios.Core.Rpc.Identity.IO.AdmissionPolicyFile.html",
    "title": "Class AdmissionPolicyFile",
    "summary": "Class AdmissionPolicyFile Namespace MarymoorStudios.Core.Rpc.Identity.IO Assembly MarymoorStudios.Core.Rpc.Identity.IO.dll public static class AdmissionPolicyFile Inheritance object AdmissionPolicyFile Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods Read<T>(FileProxy, ILoggerFactory, MemoryPool<byte>) Reads the admission policy file and creates an AdmissionManager from it. public static Promise<(UserIdentity Owner, T Manager)> Read<T>(FileProxy file, ILoggerFactory factory, MemoryPool<byte> pool) where T : AdmissionManager, IAdmissionManager<T, object?> Parameters file FileProxy The file to read from. factory ILoggerFactory The logger factory for audits. pool MemoryPool<byte> The pool to allocate buffers from. Returns Promise<(UserIdentity Owner, T Manager)> The manager. Type Parameters T Exceptions SerializationException If file corruption is detected. Read<T, TArg>(FileProxy, TArg, ILoggerFactory, MemoryPool<byte>) Reads the admission policy file and creates an AdmissionManager from it. public static Promise<(UserIdentity Owner, T Manager)> Read<T, TArg>(FileProxy file, TArg arg, ILoggerFactory factory, MemoryPool<byte> pool) where T : AdmissionManager, IAdmissionManager<T, TArg> Parameters file FileProxy The file to read from. arg TArg State passed to the admission manager constructor. factory ILoggerFactory The logger factory for audits. pool MemoryPool<byte> The pool to allocate buffers from. Returns Promise<(UserIdentity Owner, T Manager)> The manager. Type Parameters T TArg Exceptions SerializationException If file corruption is detected. Write(FileProxy, UserIdentity, AdmissionManager, MemoryPool<byte>) Writes an admission policy file. public static Promise Write(FileProxy file, UserIdentity owner, AdmissionManager manager, MemoryPool<byte> pool) Parameters file FileProxy The file to write to. owner UserIdentity The owning identity of this policy. manager AdmissionManager The manager whose policy should be written. pool MemoryPool<byte> The pool to allocate buffers from. Returns Promise"
  },
  "api/MarymoorStudios.Core.Rpc.Identity.IO.RemoteAdmissionManager.AdmissionOutcome.html": {
    "href": "api/MarymoorStudios.Core.Rpc.Identity.IO.RemoteAdmissionManager.AdmissionOutcome.html",
    "title": "Enum RemoteAdmissionManager.AdmissionOutcome",
    "summary": "Enum RemoteAdmissionManager.AdmissionOutcome Namespace MarymoorStudios.Core.Rpc.Identity.IO Assembly MarymoorStudios.Core.Rpc.Identity.IO.dll The outcome of an admission decision. [DataContract] public enum RemoteAdmissionManager.AdmissionOutcome Fields AllowOnce = 0 Allow this identity this one time. AllowAlways = 1 Allow this identity from now on. DenyOnce = 2 Refuse this identity this one time. DenyAlways = 3 Refuse this identity from now on."
  },
  "api/MarymoorStudios.Core.Rpc.Identity.IO.RemoteAdmissionManager.AdmissionOutcomeSerializer.html": {
    "href": "api/MarymoorStudios.Core.Rpc.Identity.IO.RemoteAdmissionManager.AdmissionOutcomeSerializer.html",
    "title": "Class RemoteAdmissionManager.AdmissionOutcomeSerializer",
    "summary": "Class RemoteAdmissionManager.AdmissionOutcomeSerializer Namespace MarymoorStudios.Core.Rpc.Identity.IO Assembly MarymoorStudios.Core.Rpc.Identity.IO.dll public sealed class RemoteAdmissionManager.AdmissionOutcomeSerializer : Serializer<RemoteAdmissionManager.AdmissionOutcome> Inheritance object Serializer Serializer<RemoteAdmissionManager.AdmissionOutcome> RemoteAdmissionManager.AdmissionOutcomeSerializer Inherited Members Serializer<RemoteAdmissionManager.AdmissionOutcome>.Default Serializer.Register(Type, Type) Serializer.TrySizeOfDerived<TSuper>(SerializationContext, in TSuper, out int) Serializer.TryWriteDerived<TSuper>(SerializationContext, ref RowBuffer, in TSuper) Serializer.Slice(TypeId, ref TypeId, SerializationContext, ref ReadOnlyRowBuffer) Serializer.Dice(int, SerializationContext, ref ReadOnlyRowBuffer) Serializer.TryReadDerived<TSuper>(TypeId, SerializationContext, ref ReadOnlyRowBuffer, out TSuper) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors AdmissionOutcomeSerializer() public AdmissionOutcomeSerializer() Properties TypeId public static TypeId TypeId { get; } Property Value TypeId Methods GetTypeId() public override TypeId GetTypeId() Returns TypeId SizeOf(SerializationContext, in AdmissionOutcome) public override int SizeOf(SerializationContext context, in RemoteAdmissionManager.AdmissionOutcome value) Parameters context SerializationContext value RemoteAdmissionManager.AdmissionOutcome Returns int TryRead(SerializationContext, ref ReadOnlyRowBuffer, out AdmissionOutcome) public override bool TryRead(SerializationContext context, ref ReadOnlyRowBuffer buffer, out RemoteAdmissionManager.AdmissionOutcome value) Parameters context SerializationContext buffer ReadOnlyRowBuffer value RemoteAdmissionManager.AdmissionOutcome Returns bool Write(SerializationContext, ref RowBuffer, in AdmissionOutcome) public override void Write(SerializationContext context, ref RowBuffer buffer, in RemoteAdmissionManager.AdmissionOutcome value) Parameters context SerializationContext buffer RowBuffer value RemoteAdmissionManager.AdmissionOutcome"
  },
  "api/MarymoorStudios.Core.Rpc.Identity.IO.RemoteAdmissionManager.AdmissionProxy.html": {
    "href": "api/MarymoorStudios.Core.Rpc.Identity.IO.RemoteAdmissionManager.AdmissionProxy.html",
    "title": "Class RemoteAdmissionManager.AdmissionProxy",
    "summary": "Class RemoteAdmissionManager.AdmissionProxy Namespace MarymoorStudios.Core.Rpc.Identity.IO Assembly MarymoorStudios.Core.Rpc.Identity.IO.dll public sealed class RemoteAdmissionManager.AdmissionProxy : Proxy<RemoteAdmissionManager.AdmissionServer>, IProxy<RemoteAdmissionManager.AdmissionProxy, RemoteAdmissionManager.AdmissionServer> Inheritance object Proxy<RemoteAdmissionManager.AdmissionServer> RemoteAdmissionManager.AdmissionProxy Implements IProxy<RemoteAdmissionManager.AdmissionProxy, RemoteAdmissionManager.AdmissionServer> Inherited Members Proxy<RemoteAdmissionManager.AdmissionServer>.Sync() Proxy<RemoteAdmissionManager.AdmissionServer>.GetRemoteIdentity() Proxy<RemoteAdmissionManager.AdmissionServer>.AppendOne(ResolverTurn<RemoteAdmissionManager.AdmissionServer>) Proxy<RemoteAdmissionManager.AdmissionServer>.IsFailed Proxy<RemoteAdmissionManager.AdmissionServer>.IsResolved Proxy<RemoteAdmissionManager.AdmissionServer>.Failure object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors AdmissionProxy(Promise<AdmissionServer>) Creates a forwarded promise whose outcome will be the same as p. public AdmissionProxy(Promise<RemoteAdmissionManager.AdmissionServer> p) Parameters p Promise<RemoteAdmissionManager.AdmissionServer> AdmissionProxy(Resolver<AdmissionServer>) Creates an unresolved promise whose future outcome is defined by r. public AdmissionProxy(Resolver<RemoteAdmissionManager.AdmissionServer> r) Parameters r Resolver<RemoteAdmissionManager.AdmissionServer> AdmissionProxy(AdmissionServer) Creates a successfully resolved promise. public AdmissionProxy(RemoteAdmissionManager.AdmissionServer value) Parameters value RemoteAdmissionManager.AdmissionServer AdmissionProxy(Proxy<AdmissionServer>) Creates a forwarded promise whose outcome will be the same as p. public AdmissionProxy(Proxy<RemoteAdmissionManager.AdmissionServer> p) Parameters p Proxy<RemoteAdmissionManager.AdmissionServer> AdmissionProxy(Exception) Creates a failed promise whose outcome is ex. public AdmissionProxy(Exception ex) Parameters ex Exception Methods OnAdmit(UserIdentity, IEnumerable<Endorsement>, DateTime) public Promise<RemoteAdmissionManager.AdmissionOutcome> OnAdmit(UserIdentity identity, IEnumerable<Endorsement> endorsements, DateTime timestamp) Parameters identity UserIdentity endorsements IEnumerable<Endorsement> timestamp DateTime Returns Promise<RemoteAdmissionManager.AdmissionOutcome> Operators implicit operator AdmissionProxy(Promise<AdmissionProxy>) Implicit conversion to its syntax. public static implicit operator RemoteAdmissionManager.AdmissionProxy(Promise<RemoteAdmissionManager.AdmissionProxy> p) Parameters p Promise<RemoteAdmissionManager.AdmissionProxy> Returns RemoteAdmissionManager.AdmissionProxy Explicit Interface Implementations Create(Promise<AdmissionServer>) Creates a forwarded promise whose outcome will be the same as p. static RemoteAdmissionManager.AdmissionProxy Create(Promise<RemoteAdmissionManager.AdmissionServer> p) Parameters p Promise<RemoteAdmissionManager.AdmissionServer> Returns RemoteAdmissionManager.AdmissionProxy Create(Resolver<AdmissionServer>) Creates an unresolved promise whose future outcome is defined by r. static RemoteAdmissionManager.AdmissionProxy Create(Resolver<RemoteAdmissionManager.AdmissionServer> r) Parameters r Resolver<RemoteAdmissionManager.AdmissionServer> Returns RemoteAdmissionManager.AdmissionProxy Create(AdmissionServer) Creates a successfully resolved promise. static RemoteAdmissionManager.AdmissionProxy Create(RemoteAdmissionManager.AdmissionServer value) Parameters value RemoteAdmissionManager.AdmissionServer Returns RemoteAdmissionManager.AdmissionProxy Create(Proxy<AdmissionServer>) Creates a forwarded promise whose outcome will be the same as p. static RemoteAdmissionManager.AdmissionProxy Create(Proxy<RemoteAdmissionManager.AdmissionServer> p) Parameters p Proxy<RemoteAdmissionManager.AdmissionServer> Returns RemoteAdmissionManager.AdmissionProxy Create(Exception) Creates a failed promise whose outcome is ex. static RemoteAdmissionManager.AdmissionProxy Create(Exception ex) Parameters ex Exception Returns RemoteAdmissionManager.AdmissionProxy"
  },
  "api/MarymoorStudios.Core.Rpc.Identity.IO.RemoteAdmissionManager.AdmissionServer.html": {
    "href": "api/MarymoorStudios.Core.Rpc.Identity.IO.RemoteAdmissionManager.AdmissionServer.html",
    "title": "Class RemoteAdmissionManager.AdmissionServer",
    "summary": "Class RemoteAdmissionManager.AdmissionServer Namespace MarymoorStudios.Core.Rpc.Identity.IO Assembly MarymoorStudios.Core.Rpc.Identity.IO.dll public abstract class RemoteAdmissionManager.AdmissionServer : AServer<RemoteAdmissionManager.AdmissionServer>, IByRefRemotable Inheritance object AServer<RemoteAdmissionManager.AdmissionServer> RemoteAdmissionManager.AdmissionServer Implements IByRefRemotable Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors AdmissionServer() protected AdmissionServer() Methods OnAdmit(UserIdentity, IEnumerable<Endorsement>, DateTime) public abstract Promise<RemoteAdmissionManager.AdmissionOutcome> OnAdmit(UserIdentity identity, IEnumerable<Endorsement> endorsements, DateTime timestamp) Parameters identity UserIdentity endorsements IEnumerable<Endorsement> timestamp DateTime Returns Promise<RemoteAdmissionManager.AdmissionOutcome>"
  },
  "api/MarymoorStudios.Core.Rpc.Identity.IO.RemoteAdmissionManager.IAdmission.html": {
    "href": "api/MarymoorStudios.Core.Rpc.Identity.IO.RemoteAdmissionManager.IAdmission.html",
    "title": "Interface RemoteAdmissionManager.IAdmission",
    "summary": "Interface RemoteAdmissionManager.IAdmission Namespace MarymoorStudios.Core.Rpc.Identity.IO Assembly MarymoorStudios.Core.Rpc.Identity.IO.dll An eventual interface that can be implemented to received remote admission requests. [Eventual] public interface RemoteAdmissionManager.IAdmission Methods OnAdmit(UserIdentity, IEnumerable<Endorsement>, DateTime) Promise<RemoteAdmissionManager.AdmissionOutcome> OnAdmit(UserIdentity identity, IEnumerable<Endorsement> endorsements, DateTime timestamp) Parameters identity UserIdentity endorsements IEnumerable<Endorsement> timestamp DateTime Returns Promise<RemoteAdmissionManager.AdmissionOutcome>"
  },
  "api/MarymoorStudios.Core.Rpc.Identity.IO.RemoteAdmissionManager.html": {
    "href": "api/MarymoorStudios.Core.Rpc.Identity.IO.RemoteAdmissionManager.html",
    "title": "Class RemoteAdmissionManager",
    "summary": "Class RemoteAdmissionManager Namespace MarymoorStudios.Core.Rpc.Identity.IO Assembly MarymoorStudios.Core.Rpc.Identity.IO.dll An AdmissionManager that delegates admission decisions through a proxy. public sealed class RemoteAdmissionManager : AdmissionManager, IAdmissionManager<AdmissionManager, object?> Inheritance object AdmissionManager RemoteAdmissionManager Implements IAdmissionManager<AdmissionManager, object> Inherited Members AdmissionManager.Create(ILoggerFactory, AdmissionManager.AdmissionPolicy, int) AdmissionManager.Create(object, ILoggerFactory, AdmissionManager.AdmissionPolicy, int) AdmissionManager.TryAdmit(UserIdentity, IEnumerable<Endorsement>, DateTime) AdmissionManager.Policy AdmissionManager.ActiveEndorsements AdmissionManager.InactiveEndorsements AdmissionManager.Approved AdmissionManager.Banned AdmissionManager.RecencyList AdmissionManager.MaxRecencyList object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors RemoteAdmissionManager(AdmissionProxy, ILoggerFactory, AdmissionPolicy, int) public RemoteAdmissionManager(RemoteAdmissionManager.AdmissionProxy proxy, ILoggerFactory factory, AdmissionManager.AdmissionPolicy policy, int maxRecencyList) Parameters proxy RemoteAdmissionManager.AdmissionProxy factory ILoggerFactory policy AdmissionManager.AdmissionPolicy maxRecencyList int Methods OnAdmit(UserIdentity, IEnumerable<Endorsement>, DateTime) protected override ValueTask<bool> OnAdmit(UserIdentity identity, IEnumerable<Endorsement> endorsements, DateTime timestamp) Parameters identity UserIdentity endorsements IEnumerable<Endorsement> timestamp DateTime Returns ValueTask<bool>"
  },
  "api/MarymoorStudios.Core.Rpc.Identity.IO.html": {
    "href": "api/MarymoorStudios.Core.Rpc.Identity.IO.html",
    "title": "Namespace MarymoorStudios.Core.Rpc.Identity.IO",
    "summary": "Namespace MarymoorStudios.Core.Rpc.Identity.IO Classes AdmissionPolicyFile RemoteAdmissionManager An AdmissionManager that delegates admission decisions through a proxy. RemoteAdmissionManager.AdmissionOutcomeSerializer RemoteAdmissionManager.AdmissionProxy RemoteAdmissionManager.AdmissionServer Interfaces RemoteAdmissionManager.IAdmission An eventual interface that can be implemented to received remote admission requests. Enums RemoteAdmissionManager.AdmissionOutcome The outcome of an admission decision."
  },
  "api/MarymoorStudios.Core.Rpc.Identity.StoreCertificateManager.html": {
    "href": "api/MarymoorStudios.Core.Rpc.Identity.StoreCertificateManager.html",
    "title": "Class StoreCertificateManager",
    "summary": "Class StoreCertificateManager Namespace MarymoorStudios.Core.Rpc.Identity Assembly MarymoorStudios.Core.Rpc.Identity.dll An implementation of CertificateManager that stores its certificates in an X509Store. public sealed class StoreCertificateManager : CertificateManager, IDisposable, IAsyncDisposable Inheritance object CertificateManager StoreCertificateManager Implements IDisposable IAsyncDisposable Inherited Members CertificateManager.Dispose() CertificateManager.DisposeAsync() object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors StoreCertificateManager(UserIdentity, AdmissionManager) public StoreCertificateManager(UserIdentity identity, AdmissionManager admission) Parameters identity UserIdentity admission AdmissionManager StoreCertificateManager(string, string, AdmissionManager) public StoreCertificateManager(string name, string email, AdmissionManager admission) Parameters name string email string admission AdmissionManager Properties ClientOptions The TLS client options used to negotiate authentication parameters. public override SslClientAuthenticationOptions ClientOptions { get; } Property Value SslClientAuthenticationOptions Endorsements Endorsements to support Identity. public override EndorsementCollection Endorsements { get; } Property Value EndorsementCollection Identity The identity. public override UserIdentity Identity { get; } Property Value UserIdentity ServerOptions The TLS server options used to negotiate authentication parameters. public override SslServerAuthenticationOptions ServerOptions { get; } Property Value SslServerAuthenticationOptions Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetIdentities(string) Enumerates the identities in the store. public static IEnumerable<UserIdentity> GetIdentities(string filter = \"\") Parameters filter string An optional filter that can match either name or email. Returns IEnumerable<UserIdentity> RemoveIdentity(UserIdentity) Removes the identity from the store. public static bool RemoveIdentity(UserIdentity identity) Parameters identity UserIdentity The identity to remove. Returns bool True if successful, false otherwise. TryAdmit(UserIdentity, IEnumerable<Endorsement>, DateTime) Checks if the user can be admitted. public override ValueTask<bool> TryAdmit(UserIdentity identity, IEnumerable<Endorsement> endorsements, DateTime timestamp) Parameters identity UserIdentity The identity of the user to be admitted. endorsements IEnumerable<Endorsement> Endorsements that support the identity provided by identity. timestamp DateTime The timestamp. Returns ValueTask<bool> True if the user should be admitted, false otherwise. TryAdmit(X509Certificate, IEnumerable<Endorsement>, DateTime) Checks if the user can be admitted. public override ValueTask<(bool IsAdmitted, UserIdentity Identity)> TryAdmit(X509Certificate cert, IEnumerable<Endorsement> endorsements, DateTime timestamp) Parameters cert X509Certificate The user's certificate. endorsements IEnumerable<Endorsement> Endorsements that support the identity provided by cert. timestamp DateTime The timestamp. Returns ValueTask<(bool IsAdmitted, UserIdentity Identity)> (True, the admitted identity) if the user should be admitted, (false, undefined) otherwise. TryCreateIdentity(string, string, out UserIdentity) Creates a new identity. public static bool TryCreateIdentity(string name, string email, out UserIdentity identity) Parameters name string The unique name of the identity. email string An email to associate with the identity. identity UserIdentity If successful, the identity, otherwise. Returns bool True if successful, false an identity with the same name already exists. TryGetIdentity(string, string, out UserIdentity) Loads an existing identity. public static bool TryGetIdentity(string name, string email, out UserIdentity identity) Parameters name string The unique name of the identity. email string An email to associate with the identity. identity UserIdentity If successful, the identity, otherwise. Returns bool True if successful, false an identity with the same name already exists. TrySignData(ReadOnlySpan<byte>, out ReadOnlyMemory<byte>) Signs data with the Identity private key. public override bool TrySignData(ReadOnlySpan<byte> data, out ReadOnlyMemory<byte> signature) Parameters data ReadOnlySpan<byte> The data to sign. signature ReadOnlyMemory<byte> The signature, if successful, undefined otherwise. Returns bool True if successful, false otherwise. ValidateData(ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>) Validates a signature over the data. public override bool ValidateData(ReadOnlySpan<byte> publicKey, ReadOnlySpan<byte> data, ReadOnlySpan<byte> signature) Parameters publicKey ReadOnlySpan<byte> The public key whose private key was used to sign the data. data ReadOnlySpan<byte> The data that was signed. signature ReadOnlySpan<byte> The signature to validate. Returns bool True if successful, false otherwise."
  },
  "api/MarymoorStudios.Core.Rpc.Identity.UserIdentity.html": {
    "href": "api/MarymoorStudios.Core.Rpc.Identity.UserIdentity.html",
    "title": "Class UserIdentity",
    "summary": "Class UserIdentity Namespace MarymoorStudios.Core.Rpc.Identity Assembly MarymoorStudios.Core.Rpc.Identity.dll The identity of an RPC peer. [DataContract] public sealed class UserIdentity Inheritance object UserIdentity Inherited Members object.GetType() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors UserIdentity(string, string, ReadOnlyMemory<byte>, DateTime) Constructor. public UserIdentity(string name, string email, ReadOnlyMemory<byte> publicKey, DateTime created) Parameters name string email string publicKey ReadOnlyMemory<byte> created DateTime Fields AuthScopeUri URI that MUST appear as a claim in a SubjectAlternativeNameExtension of any valid certificate. public static readonly Uri AuthScopeUri Field Value Uri AuthenticationId The name of the MSC authentication protocol. public const string AuthenticationId = \"MarymoorStudios Authentication\" Field Value string Properties Created Date the identity was created. [DataMember] public DateTime Created { get; } Property Value DateTime Email User's email address. [DataMember] public string Email { get; } Property Value string Remarks Email may not be unique. May be attested, but still not unique. The same user can have multiple user identities with different public keys but the same email. (E.g. during certificate renewal.) Name User's display name. [DataMember] public string Name { get; } Property Value string Remarks Display name may not be unique. PublicKey User's public key. [DataMember] public ReadOnlyMemory<byte> PublicKey { get; } Property Value ReadOnlyMemory<byte> Remarks Globally unique identity. X500DistinguishedName Returns the X500 distinguished name for this identity. public X500DistinguishedName X500DistinguishedName { get; } Property Value X500DistinguishedName Methods CreateIdentityCertificate(string, string, TimeSpan, int) Creates a new MarymoorStudios Authentication Identity certificate. public static X509Certificate2 CreateIdentityCertificate(string name, string email, TimeSpan duration = default, int keySizeInBits = 2048) Parameters name string The display name of the new identity. email string The email address of the new identity. duration TimeSpan The duration for the certificate (default: 1 year). keySizeInBits int The desired key size. Returns X509Certificate2 The identity certificate. MakeX500DistinguishedName(string, string) Creates an appropriate X500DistinguishedName for an identity. public static X500DistinguishedName MakeX500DistinguishedName(string name, string email) Parameters name string The name of the identity. email string The email associated with the identity. Returns X500DistinguishedName The distinguished name. PublicKeyEquals(UserIdentity, UserIdentity) Returns true if the two user identities have the same public key. public static bool PublicKeyEquals(UserIdentity i1, UserIdentity i2) Parameters i1 UserIdentity i2 UserIdentity Returns bool ToString() public override string ToString() Returns string TryCreateFromCert(X509Certificate2, out UserIdentity) Creates a UserIdentity from a X509Certificate. public static bool TryCreateFromCert(X509Certificate2 cert, out UserIdentity identity) Parameters cert X509Certificate2 The certificate from which to extract an identity. identity UserIdentity If successful the identity extracted from the certificate. Returns bool True if a single identity was successfully determined from the provided certificate. False if the certificate does not satisfy the MSC authentication protocol."
  },
  "api/MarymoorStudios.Core.Rpc.Identity.UserIdentityCollection.html": {
    "href": "api/MarymoorStudios.Core.Rpc.Identity.UserIdentityCollection.html",
    "title": "Class UserIdentityCollection",
    "summary": "Class UserIdentityCollection Namespace MarymoorStudios.Core.Rpc.Identity Assembly MarymoorStudios.Core.Rpc.Identity.dll An unordered set of UserIdentity. [DataContract] public sealed class UserIdentityCollection : IEnumerable<UserIdentity>, IEnumerable Inheritance object UserIdentityCollection Implements IEnumerable<UserIdentity> IEnumerable Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors UserIdentityCollection() Create an empty collection. public UserIdentityCollection() UserIdentityCollection(IEnumerable<UserIdentity>) Create a collection prepopulated with a set of initial members. public UserIdentityCollection(IEnumerable<UserIdentity> members) Parameters members IEnumerable<UserIdentity> The initial members. Properties Count The number of entries in the collection. public int Count { get; } Property Value int Members The members of the collection. [DataMember] public IEnumerable<UserIdentity> Members { get; } Property Value IEnumerable<UserIdentity> Methods Add(UserIdentity) Adds a user identity to the collection. public bool Add(UserIdentity identity) Parameters identity UserIdentity The user identity. Returns bool True if successfully added, false otherwise. AddOrUpdate(UserIdentity) Adds or updates a user identity to the collection. public bool AddOrUpdate(UserIdentity identity) Parameters identity UserIdentity The user identity. Returns bool True if updated, false if added. Contains(UserIdentity) Returns true if the identity is a member of the collection, false otherwise. public bool Contains(UserIdentity identity) Parameters identity UserIdentity Returns bool GetEnumerator() public IEnumerator<UserIdentity> GetEnumerator() Returns IEnumerator<UserIdentity> Remove(UserIdentity) Remove a user identity from the collection. public bool Remove(UserIdentity identity) Parameters identity UserIdentity The user identity. Returns bool True if removed, false otherwise."
  },
  "api/MarymoorStudios.Core.Rpc.Identity.UserIdentityCollectionSerializer.html": {
    "href": "api/MarymoorStudios.Core.Rpc.Identity.UserIdentityCollectionSerializer.html",
    "title": "Class UserIdentityCollectionSerializer",
    "summary": "Class UserIdentityCollectionSerializer Namespace MarymoorStudios.Core.Rpc.Identity Assembly MarymoorStudios.Core.Rpc.Identity.dll public sealed class UserIdentityCollectionSerializer : Serializer<UserIdentityCollection?>, IDerivedSerializer<UserIdentityCollection?>, IDerivedSerializer Inheritance object Serializer Serializer<UserIdentityCollection> UserIdentityCollectionSerializer Implements IDerivedSerializer<UserIdentityCollection> IDerivedSerializer Inherited Members Serializer<UserIdentityCollection>.Default Serializer.Register(Type, Type) Serializer.TrySizeOfDerived<TSuper>(SerializationContext, in TSuper, out int) Serializer.TryWriteDerived<TSuper>(SerializationContext, ref RowBuffer, in TSuper) Serializer.Slice(TypeId, ref TypeId, SerializationContext, ref ReadOnlyRowBuffer) Serializer.Dice(int, SerializationContext, ref ReadOnlyRowBuffer) Serializer.TryReadDerived<TSuper>(TypeId, SerializationContext, ref ReadOnlyRowBuffer, out TSuper) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors UserIdentityCollectionSerializer() public UserIdentityCollectionSerializer() Properties TypeId public static TypeId TypeId { get; } Property Value TypeId Methods GetTypeId() public override TypeId GetTypeId() Returns TypeId SizeOf(SerializationContext, in UserIdentityCollection?) public override int SizeOf(SerializationContext context, in UserIdentityCollection? value) Parameters context SerializationContext value UserIdentityCollection Returns int SizeOfSegment(SerializationContext, in UserIdentityCollection) public static int SizeOfSegment(SerializationContext context, in UserIdentityCollection value) Parameters context SerializationContext value UserIdentityCollection Returns int TryRead(SerializationContext, ref ReadOnlyRowBuffer, out UserIdentityCollection?) public override bool TryRead(SerializationContext context, ref ReadOnlyRowBuffer buffer, out UserIdentityCollection? value) Parameters context SerializationContext buffer ReadOnlyRowBuffer value UserIdentityCollection Returns bool TryReadSegment(SerializationContext, ref ReadOnlyRowBuffer, out IEnumerable<UserIdentity>) public static bool TryReadSegment(SerializationContext context, ref ReadOnlyRowBuffer buffer, out IEnumerable<UserIdentity> memberMembers) Parameters context SerializationContext buffer ReadOnlyRowBuffer memberMembers IEnumerable<UserIdentity> Returns bool Write(SerializationContext, ref RowBuffer, in UserIdentityCollection?) public override void Write(SerializationContext context, ref RowBuffer buffer, in UserIdentityCollection? value) Parameters context SerializationContext buffer RowBuffer value UserIdentityCollection WriteSegment(SerializationContext, ref RowBuffer, in UserIdentityCollection) public static void WriteSegment(SerializationContext context, ref RowBuffer buffer, in UserIdentityCollection value) Parameters context SerializationContext buffer RowBuffer value UserIdentityCollection"
  },
  "api/MarymoorStudios.Core.Rpc.Identity.UserIdentityRecencyList.Entry.html": {
    "href": "api/MarymoorStudios.Core.Rpc.Identity.UserIdentityRecencyList.Entry.html",
    "title": "Struct UserIdentityRecencyList.Entry",
    "summary": "Struct UserIdentityRecencyList.Entry Namespace MarymoorStudios.Core.Rpc.Identity Assembly MarymoorStudios.Core.Rpc.Identity.dll public struct UserIdentityRecencyList.Entry : IEquatable<UserIdentityRecencyList.Entry> Implements IEquatable<UserIdentityRecencyList.Entry> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors Entry(UserIdentity, DateTime, DateTime, int) public Entry(UserIdentity Identity, DateTime CreationTime, DateTime LastUpdateTime, int AccessCount) Parameters Identity UserIdentity CreationTime DateTime LastUpdateTime DateTime AccessCount int Properties AccessCount public int AccessCount { readonly get; set; } Property Value int CreationTime public DateTime CreationTime { readonly get; set; } Property Value DateTime Identity public UserIdentity Identity { readonly get; set; } Property Value UserIdentity LastUpdateTime public DateTime LastUpdateTime { readonly get; set; } Property Value DateTime Methods Deconstruct(out UserIdentity, out DateTime, out DateTime, out int) public readonly void Deconstruct(out UserIdentity Identity, out DateTime CreationTime, out DateTime LastUpdateTime, out int AccessCount) Parameters Identity UserIdentity CreationTime DateTime LastUpdateTime DateTime AccessCount int Equals(Entry) public readonly bool Equals(UserIdentityRecencyList.Entry other) Parameters other UserIdentityRecencyList.Entry Returns bool Equals(object) public override readonly bool Equals(object obj) Parameters obj object Returns bool GetHashCode() public override readonly int GetHashCode() Returns int ToString() public override readonly string ToString() Returns string Operators operator ==(Entry, Entry) public static bool operator ==(UserIdentityRecencyList.Entry left, UserIdentityRecencyList.Entry right) Parameters left UserIdentityRecencyList.Entry right UserIdentityRecencyList.Entry Returns bool operator !=(Entry, Entry) public static bool operator !=(UserIdentityRecencyList.Entry left, UserIdentityRecencyList.Entry right) Parameters left UserIdentityRecencyList.Entry right UserIdentityRecencyList.Entry Returns bool"
  },
  "api/MarymoorStudios.Core.Rpc.Identity.UserIdentityRecencyList.html": {
    "href": "api/MarymoorStudios.Core.Rpc.Identity.UserIdentityRecencyList.html",
    "title": "Class UserIdentityRecencyList",
    "summary": "Class UserIdentityRecencyList Namespace MarymoorStudios.Core.Rpc.Identity Assembly MarymoorStudios.Core.Rpc.Identity.dll A set of UserIdentity that keeps track of accesses. public sealed class UserIdentityRecencyList : IEnumerable<UserIdentityRecencyList.Entry>, IEnumerable Inheritance object UserIdentityRecencyList Implements IEnumerable<UserIdentityRecencyList.Entry> IEnumerable Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors UserIdentityRecencyList() Create an empty recency list. public UserIdentityRecencyList() UserIdentityRecencyList(IEnumerable<UserIdentity>, DateTime) Create a recency list prepopulated with a set of initial members. public UserIdentityRecencyList(IEnumerable<UserIdentity> members, DateTime timestamp) Parameters members IEnumerable<UserIdentity> The initial members. timestamp DateTime The timestamp to use for additions. Properties Count The number of entries in the recency list. public int Count { get; } Property Value int Members The members of the recency list. public IEnumerable<UserIdentityRecencyList.Entry> Members { get; } Property Value IEnumerable<UserIdentityRecencyList.Entry> Methods Add(UserIdentity, DateTime) Adds a user identity to the recency list. public bool Add(UserIdentity identity, DateTime timestamp) Parameters identity UserIdentity The user identity. timestamp DateTime The timestamp to use for additions. Returns bool True if successfully added, false otherwise. AddOrUpdate(UserIdentity, DateTime) Adds or updates a user identity to the recency list. public bool AddOrUpdate(UserIdentity identity, DateTime timestamp) Parameters identity UserIdentity The user identity. timestamp DateTime The timestamp to use for additions. Returns bool True if updated, false if added. Contains(UserIdentity) Returns true if the identity is a member of the recency list, false otherwise. public bool Contains(UserIdentity identity) Parameters identity UserIdentity Returns bool GetEnumerator() public IEnumerator<UserIdentityRecencyList.Entry> GetEnumerator() Returns IEnumerator<UserIdentityRecencyList.Entry> Remove(UserIdentity) Remove a user identity from the recency list. public bool Remove(UserIdentity identity) Parameters identity UserIdentity The user identity. Returns bool True if removed, false otherwise. RemoveOldest() Removes the oldest entry in the recency list. public void RemoveOldest() Remarks This method is a no-op if the recency list is empty. TryFind(UserIdentity, out Entry) Returns true if the identity is a member of the recency list, false otherwise. public bool TryFind(UserIdentity identity, out UserIdentityRecencyList.Entry entry) Parameters identity UserIdentity entry UserIdentityRecencyList.Entry Returns bool"
  },
  "api/MarymoorStudios.Core.Rpc.Identity.UserIdentitySerializer.html": {
    "href": "api/MarymoorStudios.Core.Rpc.Identity.UserIdentitySerializer.html",
    "title": "Class UserIdentitySerializer",
    "summary": "Class UserIdentitySerializer Namespace MarymoorStudios.Core.Rpc.Identity Assembly MarymoorStudios.Core.Rpc.Identity.dll public sealed class UserIdentitySerializer : Serializer<UserIdentity?>, IDerivedSerializer<UserIdentity?>, IDerivedSerializer Inheritance object Serializer Serializer<UserIdentity> UserIdentitySerializer Implements IDerivedSerializer<UserIdentity> IDerivedSerializer Inherited Members Serializer<UserIdentity>.Default Serializer.Register(Type, Type) Serializer.TrySizeOfDerived<TSuper>(SerializationContext, in TSuper, out int) Serializer.TryWriteDerived<TSuper>(SerializationContext, ref RowBuffer, in TSuper) Serializer.Slice(TypeId, ref TypeId, SerializationContext, ref ReadOnlyRowBuffer) Serializer.Dice(int, SerializationContext, ref ReadOnlyRowBuffer) Serializer.TryReadDerived<TSuper>(TypeId, SerializationContext, ref ReadOnlyRowBuffer, out TSuper) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors UserIdentitySerializer() public UserIdentitySerializer() Properties TypeId public static TypeId TypeId { get; } Property Value TypeId Methods GetTypeId() public override TypeId GetTypeId() Returns TypeId SizeOf(SerializationContext, in UserIdentity?) public override int SizeOf(SerializationContext context, in UserIdentity? value) Parameters context SerializationContext value UserIdentity Returns int SizeOfSegment(SerializationContext, in UserIdentity) public static int SizeOfSegment(SerializationContext context, in UserIdentity value) Parameters context SerializationContext value UserIdentity Returns int TryRead(SerializationContext, ref ReadOnlyRowBuffer, out UserIdentity?) public override bool TryRead(SerializationContext context, ref ReadOnlyRowBuffer buffer, out UserIdentity? value) Parameters context SerializationContext buffer ReadOnlyRowBuffer value UserIdentity Returns bool TryReadSegment(SerializationContext, ref ReadOnlyRowBuffer, out string, out string, out ReadOnlyMemory<byte>, out DateTime) public static bool TryReadSegment(SerializationContext context, ref ReadOnlyRowBuffer buffer, out string memberName, out string memberEmail, out ReadOnlyMemory<byte> memberPublicKey, out DateTime memberCreated) Parameters context SerializationContext buffer ReadOnlyRowBuffer memberName string memberEmail string memberPublicKey ReadOnlyMemory<byte> memberCreated DateTime Returns bool Write(SerializationContext, ref RowBuffer, in UserIdentity?) public override void Write(SerializationContext context, ref RowBuffer buffer, in UserIdentity? value) Parameters context SerializationContext buffer RowBuffer value UserIdentity WriteSegment(SerializationContext, ref RowBuffer, in UserIdentity) public static void WriteSegment(SerializationContext context, ref RowBuffer buffer, in UserIdentity value) Parameters context SerializationContext buffer RowBuffer value UserIdentity"
  },
  "api/MarymoorStudios.Core.Rpc.Identity.html": {
    "href": "api/MarymoorStudios.Core.Rpc.Identity.html",
    "title": "Namespace MarymoorStudios.Core.Rpc.Identity",
    "summary": "Namespace MarymoorStudios.Core.Rpc.Identity Classes AdmissionManager AdmissionManager.AdmissionPolicySerializer CertificateManager Manages the certificates that provide identity to others. Endorsement EndorsementCollection An unordered set of Endorsement. EndorsementCollectionSerializer EndorsementSerializer StoreCertificateManager An implementation of CertificateManager that stores its certificates in an X509Store. UserIdentity The identity of an RPC peer. UserIdentityCollection An unordered set of UserIdentity. UserIdentityCollectionSerializer UserIdentityRecencyList A set of UserIdentity that keeps track of accesses. UserIdentitySerializer Structs UserIdentityRecencyList.Entry Interfaces IAdmissionManager<TAdmissionManager, TArg> Interface that provides generic constraints. Enums AdmissionManager.AdmissionPolicy The admission policy."
  },
  "api/MarymoorStudios.Core.Rpc.MetadataProxy.html": {
    "href": "api/MarymoorStudios.Core.Rpc.MetadataProxy.html",
    "title": "Class MetadataProxy",
    "summary": "Class MetadataProxy Namespace MarymoorStudios.Core.Rpc Assembly MarymoorStudios.Core.Rpc.dll public sealed class MetadataProxy : Proxy<MetadataServer>, IProxy<MetadataProxy, MetadataServer> Inheritance object Proxy<MetadataServer> MetadataProxy Implements IProxy<MetadataProxy, MetadataServer> Inherited Members Proxy<MetadataServer>.Sync() Proxy<MetadataServer>.GetRemoteIdentity() Proxy<MetadataServer>.AppendOne(ResolverTurn<MetadataServer>) Proxy<MetadataServer>.IsFailed Proxy<MetadataServer>.IsResolved Proxy<MetadataServer>.Failure object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors MetadataProxy(Promise<MetadataServer>) Creates a forwarded promise whose outcome will be the same as p. public MetadataProxy(Promise<MetadataServer> p) Parameters p Promise<MetadataServer> MetadataProxy(Resolver<MetadataServer>) Creates an unresolved promise whose future outcome is defined by r. public MetadataProxy(Resolver<MetadataServer> r) Parameters r Resolver<MetadataServer> MetadataProxy(MetadataServer) Creates a successfully resolved promise. public MetadataProxy(MetadataServer value) Parameters value MetadataServer MetadataProxy(Proxy<MetadataServer>) Creates a forwarded promise whose outcome will be the same as p. public MetadataProxy(Proxy<MetadataServer> p) Parameters p Proxy<MetadataServer> MetadataProxy(Exception) Creates a failed promise whose outcome is ex. public MetadataProxy(Exception ex) Parameters ex Exception Methods GetCapabilities() public Promise<IMetadata.Descriptor[]> GetCapabilities() Returns Promise<IMetadata.Descriptor[]> Operators implicit operator MetadataProxy(Promise<MetadataProxy>) Implicit conversion to its syntax. public static implicit operator MetadataProxy(Promise<MetadataProxy> p) Parameters p Promise<MetadataProxy> Returns MetadataProxy Explicit Interface Implementations Create(Promise<MetadataServer>) Creates a forwarded promise whose outcome will be the same as p. static MetadataProxy Create(Promise<MetadataServer> p) Parameters p Promise<MetadataServer> Returns MetadataProxy Create(Resolver<MetadataServer>) Creates an unresolved promise whose future outcome is defined by r. static MetadataProxy Create(Resolver<MetadataServer> r) Parameters r Resolver<MetadataServer> Returns MetadataProxy Create(MetadataServer) Creates a successfully resolved promise. static MetadataProxy Create(MetadataServer value) Parameters value MetadataServer Returns MetadataProxy Create(Proxy<MetadataServer>) Creates a forwarded promise whose outcome will be the same as p. static MetadataProxy Create(Proxy<MetadataServer> p) Parameters p Proxy<MetadataServer> Returns MetadataProxy Create(Exception) Creates a failed promise whose outcome is ex. static MetadataProxy Create(Exception ex) Parameters ex Exception Returns MetadataProxy"
  },
  "api/MarymoorStudios.Core.Rpc.MetadataPublisher.html": {
    "href": "api/MarymoorStudios.Core.Rpc.MetadataPublisher.html",
    "title": "Class MetadataPublisher",
    "summary": "Class MetadataPublisher Namespace MarymoorStudios.Core.Rpc Assembly MarymoorStudios.Core.Rpc.dll An implementation of IMetadata from a static, potentially non-unique, set of capabilities. public sealed class MetadataPublisher : MetadataServer, IByRefRemotable Inheritance object AServer<MetadataServer> MetadataServer MetadataPublisher Implements IByRefRemotable Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors MetadataPublisher(Descriptor[]) Constructs a new bag. public MetadataPublisher(IMetadata.Descriptor[] capabilities) Parameters capabilities Descriptor[] The set of capabilities to include. Remarks The capabilities presented in capabilities need not be unique in name or type. Fields Self public readonly MetadataProxy Self Field Value MetadataProxy Methods GetCapabilities() public override Promise<IMetadata.Descriptor[]> GetCapabilities() Returns Promise<IMetadata.Descriptor[]>"
  },
  "api/MarymoorStudios.Core.Rpc.MetadataServer.html": {
    "href": "api/MarymoorStudios.Core.Rpc.MetadataServer.html",
    "title": "Class MetadataServer",
    "summary": "Class MetadataServer Namespace MarymoorStudios.Core.Rpc Assembly MarymoorStudios.Core.Rpc.dll public abstract class MetadataServer : AServer<MetadataServer>, IByRefRemotable Inheritance object AServer<MetadataServer> MetadataServer Implements IByRefRemotable Derived MetadataPublisher Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors MetadataServer() protected MetadataServer() Methods GetCapabilities() public abstract Promise<IMetadata.Descriptor[]> GetCapabilities() Returns Promise<IMetadata.Descriptor[]>"
  },
  "api/MarymoorStudios.Core.Rpc.MethodId.html": {
    "href": "api/MarymoorStudios.Core.Rpc.MethodId.html",
    "title": "Struct MethodId",
    "summary": "Struct MethodId Namespace MarymoorStudios.Core.Rpc Assembly MarymoorStudios.Core.Rpc.dll An identifier for a unique method within a remotable type hierarchy. public readonly struct MethodId Inherited Members ValueType.Equals(object) ValueType.GetHashCode() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Remarks MethodIds are unique only within the scope of the type hierarchy that allocated them. A root remotable type and its subtypes share a MethodId space, but different type hierarchies may reuse MethodIds. Constructors MethodId(uint, uint) Constructor. public MethodId(uint depth, uint index) Parameters depth uint The depth of the declaring type. See Depth. index uint The method index. See Index. Properties Depth The depth of the type declaring this method within its remotable type hierarchy. public uint Depth { get; } Property Value uint Remarks The base-most type in a remotable hierarchy has depth 0, its immediate subtypes have depth 1, their subtypes have depth 2, and so on down the type hierarchy. Index The index assigned to this method by the declaring type. public uint Index { get; } Property Value uint Methods ToString() public override string ToString() Returns string"
  },
  "api/MarymoorStudios.Core.Rpc.Net.TcpFactory-1.html": {
    "href": "api/MarymoorStudios.Core.Rpc.Net.TcpFactory-1.html",
    "title": "Class TcpFactory<TRoot>",
    "summary": "Class TcpFactory<TRoot> Namespace MarymoorStudios.Core.Rpc.Net Assembly MarymoorStudios.Core.Rpc.Net.dll Establishes a scope for incoming and outgoing TCP-based channels. public sealed class TcpFactory<TRoot> : IPromiseDisposable where TRoot : AServer<TRoot> Type Parameters TRoot The type of the root object exposed on all connection (incoming and outgoing) within the scope of this factory. Inheritance object TcpFactory<TRoot> Implements IPromiseDisposable Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Remarks Enables the creation of incoming listening sockets for receiving network connections from remote parties (potentially using different network protocols and/or endpoints). Enables the establishment of outgoing socket to connect to remote parties. A TcpFactory<TRoot> instance represents a set of such incoming and outgoing connections that can be torn down collectively (by disposing the factory instance). Constructors TcpFactory(TcpFactoryConfig, MemoryPool<byte>, ILoggerFactory, Proxy<TRoot>) Creates a new TCP scope for incoming and outgoing connections. public TcpFactory(TcpFactoryConfig config, MemoryPool<byte> pool, ILoggerFactory loggerFactory, Proxy<TRoot> root) Parameters config TcpFactoryConfig The configuration policy for this TCP scope. pool MemoryPool<byte> The memory pool from which to allocate memory for network operations. loggerFactory ILoggerFactory The logger factory to log to. root Proxy<TRoot> The root object to be exposed to all connections (incoming and outgoing). Methods Connect<TProxy, TServer>(IPEndPoint, CancellationToken) Create a new outgoing connection within this TCP scope. public TProxy Connect<TProxy, TServer>(IPEndPoint endpoint, CancellationToken cancel = default) where TProxy : Proxy<TServer>, IProxy<TProxy, TServer> where TServer : AServer<TServer> Parameters endpoint IPEndPoint The remote endpoint to connect to. cancel CancellationToken A (optional) cancellation that can be used to terminate this connection independently of the rest of the TCP scope. Returns TProxy The remote root Type Parameters TProxy The type of the expected remote root. TServer The server type of TProxy. DisposeAsync() public Promise DisposeAsync() Returns Promise Listen(IPEndPoint, bool) Create a new incoming listening endpoint for this TCP scope. public Promise<TcpListener> Listen(IPEndPoint endpoint, bool allowReuse = false) Parameters endpoint IPEndPoint The endpoint on which to listen. allowReuse bool If true, then allow the port to be rebound without TIME_WAIT. Returns Promise<TcpListener> Resolves to a TcpListener for controlling the lifetime of the listening endpoint."
  },
  "api/MarymoorStudios.Core.Rpc.Net.TcpFactoryConfig.html": {
    "href": "api/MarymoorStudios.Core.Rpc.Net.TcpFactoryConfig.html",
    "title": "Class TcpFactoryConfig",
    "summary": "Class TcpFactoryConfig Namespace MarymoorStudios.Core.Rpc.Net Assembly MarymoorStudios.Core.Rpc.Net.dll Configures policy for TcpFactory<TRoot>. public sealed class TcpFactoryConfig Inheritance object TcpFactoryConfig Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors TcpFactoryConfig() Constructor. public TcpFactoryConfig() Fields DefaultTcpPort The default port for use with TcpListener. public const int DefaultTcpPort = 2590 Field Value int Properties Backlog Maximum number of sockets allowed in the accept queue. public int Backlog { get; init; } Property Value int CertificateManager (Optional) TLS Certificate Manager. If non-null then TLS will be used, otherwise non-TLS. public CertificateManager? CertificateManager { get; init; } Property Value CertificateManager MaxRecvPacket Maximum size of recv packets. public int MaxRecvPacket { get; init; } Property Value int Remarks Messages larger than this are split across multiple receives. This is largely for testing purposes. MaxSendPacket Maximum size of send packets. public int MaxSendPacket { get; init; } Property Value int Remarks Messages larger than this are split into multiple sends. This is largely for testing purposes but may be useful in environments where the network prohibits large payloads. Splitting messages across sends lends to the need to perform reassembly on the receiving side increasing costs in memory, CPU, and kernel transitions. RingCapacity Maximum number of items in the send/receive buffer between the channel and the network. public ushort RingCapacity { get; init; } Property Value ushort Remarks The buffers are used to pipeline transitions between IO completion threads and the Sip-thread for the MarymoorStudios.Core.Rpc.CommChannel they are servicing. If this value is too small: Sending The MarymoorStudios.Core.Rpc.CommChannel will stall more often and be forced to buffer outgoing messages in its own queue leading potentially to increased GC memory usage and additional send latency. Receiving IO completion threads will stall more often and be forced to provide network backpressure impacting network transmission speeds. If this value is too large then buffer memory will be wasted for each MarymoorStudios.Core.Rpc.CommChannel. Buffer capacity is a fixed allocation with the same lifetime as the MarymoorStudios.Core.Rpc.CommChannel. Ideally this value matches the maximum number of messages in flight in either direction under normal operating conditions. When these conditions are exceeded then stalling is the best responses for the system and the network providing backpressure to slow production in either direction to avoid resource exhaustion. RingThreshold Maximum The number of item slots that must be available before send backpressure is lifted. public ushort RingThreshold { get; init; } Property Value ushort Methods TryParseEndpoint(string, out IPEndPoint) Convenience function for parsing endpoint strings at the command line. public static bool TryParseEndpoint(string endpointString, out IPEndPoint endpoint) Parameters endpointString string The string to be parsed. endpoint IPEndPoint If successful, the endpoint. Returns bool True if successful, false otherwise."
  },
  "api/MarymoorStudios.Core.Rpc.Net.TcpListener.html": {
    "href": "api/MarymoorStudios.Core.Rpc.Net.TcpListener.html",
    "title": "Class TcpListener",
    "summary": "Class TcpListener Namespace MarymoorStudios.Core.Rpc.Net Assembly MarymoorStudios.Core.Rpc.Net.dll Manages the lifetime of a listening endpoint. public sealed class TcpListener : IPromiseDisposable Inheritance object TcpListener Implements IPromiseDisposable Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Remarks Call DisposeAsync() to terminate the listening endpoint and remove it from the TCP scope that created it. Removing a listening endpoint does NOT destroy incoming connections that have already been established from that endpoint nor does it terminate the TCP scope that created it. To do either of those things call DisposeAsync() on the TCP scope directly. Properties LocalEndPoint The local endpoint tuple while connected, otherwise null. public IPEndPoint? LocalEndPoint { get; } Property Value IPEndPoint Methods DisposeAsync() public Promise DisposeAsync() Returns Promise"
  },
  "api/MarymoorStudios.Core.Rpc.Net.html": {
    "href": "api/MarymoorStudios.Core.Rpc.Net.html",
    "title": "Namespace MarymoorStudios.Core.Rpc.Net",
    "summary": "Namespace MarymoorStudios.Core.Rpc.Net Classes TcpFactoryConfig Configures policy for TcpFactory<TRoot>. TcpFactory<TRoot> Establishes a scope for incoming and outgoing TCP-based channels. TcpListener Manages the lifetime of a listening endpoint."
  },
  "api/MarymoorStudios.Core.Rpc.NothingProxy.html": {
    "href": "api/MarymoorStudios.Core.Rpc.NothingProxy.html",
    "title": "Class NothingProxy",
    "summary": "Class NothingProxy Namespace MarymoorStudios.Core.Rpc Assembly MarymoorStudios.Core.Rpc.dll public sealed class NothingProxy : Proxy<NothingServer>, IProxy<NothingProxy, NothingServer> Inheritance object Proxy<NothingServer> NothingProxy Implements IProxy<NothingProxy, NothingServer> Inherited Members Proxy<NothingServer>.Sync() Proxy<NothingServer>.GetRemoteIdentity() Proxy<NothingServer>.AppendOne(ResolverTurn<NothingServer>) Proxy<NothingServer>.IsFailed Proxy<NothingServer>.IsResolved Proxy<NothingServer>.Failure object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors NothingProxy(Promise<NothingServer>) Creates a forwarded promise whose outcome will be the same as p. public NothingProxy(Promise<NothingServer> p) Parameters p Promise<NothingServer> NothingProxy(Resolver<NothingServer>) Creates an unresolved promise whose future outcome is defined by r. public NothingProxy(Resolver<NothingServer> r) Parameters r Resolver<NothingServer> NothingProxy(NothingServer) Creates a successfully resolved promise. public NothingProxy(NothingServer value) Parameters value NothingServer NothingProxy(Proxy<NothingServer>) Creates a forwarded promise whose outcome will be the same as p. public NothingProxy(Proxy<NothingServer> p) Parameters p Proxy<NothingServer> NothingProxy(Exception) Creates a failed promise whose outcome is ex. public NothingProxy(Exception ex) Parameters ex Exception Operators implicit operator NothingProxy(Promise<NothingProxy>) Implicit conversion to its syntax. public static implicit operator NothingProxy(Promise<NothingProxy> p) Parameters p Promise<NothingProxy> Returns NothingProxy Explicit Interface Implementations Create(Promise<NothingServer>) Creates a forwarded promise whose outcome will be the same as p. static NothingProxy Create(Promise<NothingServer> p) Parameters p Promise<NothingServer> Returns NothingProxy Create(Resolver<NothingServer>) Creates an unresolved promise whose future outcome is defined by r. static NothingProxy Create(Resolver<NothingServer> r) Parameters r Resolver<NothingServer> Returns NothingProxy Create(NothingServer) Creates a successfully resolved promise. static NothingProxy Create(NothingServer value) Parameters value NothingServer Returns NothingProxy Create(Proxy<NothingServer>) Creates a forwarded promise whose outcome will be the same as p. static NothingProxy Create(Proxy<NothingServer> p) Parameters p Proxy<NothingServer> Returns NothingProxy Create(Exception) Creates a failed promise whose outcome is ex. static NothingProxy Create(Exception ex) Parameters ex Exception Returns NothingProxy"
  },
  "api/MarymoorStudios.Core.Rpc.NothingServer.html": {
    "href": "api/MarymoorStudios.Core.Rpc.NothingServer.html",
    "title": "Class NothingServer",
    "summary": "Class NothingServer Namespace MarymoorStudios.Core.Rpc Assembly MarymoorStudios.Core.Rpc.dll public abstract class NothingServer : AServer<NothingServer>, IByRefRemotable Inheritance object AServer<NothingServer> NothingServer Implements IByRefRemotable Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors NothingServer() protected NothingServer()"
  },
  "api/MarymoorStudios.Core.Rpc.Pipe-1.html": {
    "href": "api/MarymoorStudios.Core.Rpc.Pipe-1.html",
    "title": "Struct Pipe<T>",
    "summary": "Struct Pipe<T> Namespace MarymoorStudios.Core.Rpc Assembly MarymoorStudios.Core.Rpc.dll A unidirectional flow of items. public readonly struct Pipe<T> Type Parameters T Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors Pipe(PipeReader<T>, PipeWriter<T>) Construct a new pipe. public Pipe(PipeReader<T> reader, PipeWriter<T> writer) Parameters reader PipeReader<T> The reader capability. writer PipeWriter<T> The writer capability. Remarks Writing to the writer MUST yield output on the reader. Properties Reader A capability to read from the pipe. public PipeReader<T> Reader { get; } Property Value PipeReader<T> Writer A capability to write from the pipe. public PipeWriter<T> Writer { get; } Property Value PipeWriter<T>"
  },
  "api/MarymoorStudios.Core.Rpc.PipeExtensions.PipeReaderEnumerator-1.html": {
    "href": "api/MarymoorStudios.Core.Rpc.PipeExtensions.PipeReaderEnumerator-1.html",
    "title": "Struct PipeExtensions.PipeReaderEnumerator<T>",
    "summary": "Struct PipeExtensions.PipeReaderEnumerator<T> Namespace MarymoorStudios.Core.Rpc Assembly MarymoorStudios.Core.Rpc.dll An enumerator for a PipeReader<T>. public readonly struct PipeExtensions.PipeReaderEnumerator<T> : IIPromiseEnumerator<T>, IPromiseDisposable Type Parameters T Implements IIPromiseEnumerator<T> IPromiseDisposable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Properties Current Gets the element in the collection at the current position of the enumerator. public T Current { get; } Property Value T The element in the collection at the current position of the enumerator. Methods DisposeAsync() public Promise DisposeAsync() Returns Promise MoveNextAsync() Advances the enumerator to the next element. public Promise<bool> MoveNextAsync() Returns Promise<bool> Resolves to true if the enumerator was successfully advanced, false if the end was reached."
  },
  "api/MarymoorStudios.Core.Rpc.PipeExtensions.html": {
    "href": "api/MarymoorStudios.Core.Rpc.PipeExtensions.html",
    "title": "Class PipeExtensions",
    "summary": "Class PipeExtensions Namespace MarymoorStudios.Core.Rpc Assembly MarymoorStudios.Core.Rpc.dll Provides convenience extensions for Pipe<T> and its related classes. public static class PipeExtensions Inheritance object PipeExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods AsPipeReader<T>(ICollection<T>, Exception?) Returns a PipeReader<T> over a finite collection. public static PipeReader<T> AsPipeReader<T>(this ICollection<T> collection, Exception? error = null) Parameters collection ICollection<T> The collection. error Exception An optional error to terminate the sequence with. Returns PipeReader<T> Type Parameters T GetAsyncEnumerator<T>(PipeReader<T>) Returns an enumerator that iterates asynchronously through the PipeReader<T>. public static PipeExtensions.PipeReaderEnumerator<T> GetAsyncEnumerator<T>(this PipeReader<T> reader) Parameters reader PipeReader<T> Returns PipeExtensions.PipeReaderEnumerator<T> Type Parameters T"
  },
  "api/MarymoorStudios.Core.Rpc.PipeQueue-1.html": {
    "href": "api/MarymoorStudios.Core.Rpc.PipeQueue-1.html",
    "title": "Class PipeQueue<T>",
    "summary": "Class PipeQueue<T> Namespace MarymoorStudios.Core.Rpc Assembly MarymoorStudios.Core.Rpc.dll public sealed class PipeQueue<T> Type Parameters T Inheritance object PipeQueue<T> Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods Create(int, int) Constructs a new Pipe<T> public static Pipe<T> Create(int capacity = 2147483647, int threshold = 1) Parameters capacity int The maximum number of items before backpressure is applied. threshold int The number of items of empty space available before backpressure is released. Returns Pipe<T> Remarks REQUIRES: capacity > 2 REQUIRES: 1 <= threshold < capacity -1 Capacity is equal to the size of the memory allocation (in number of items). Threshold is used to decrease ping-ponging by delaying waking the producer until there are more items in the window. There is a tradeoff between added latency and buffering costs on the writer side versus signalling costs. The default value is 1 causing the producer to be signalled whenever there is at least one slot available."
  },
  "api/MarymoorStudios.Core.Rpc.PipeReader-1.html": {
    "href": "api/MarymoorStudios.Core.Rpc.PipeReader-1.html",
    "title": "Class PipeReader<T>",
    "summary": "Class PipeReader<T> Namespace MarymoorStudios.Core.Rpc Assembly MarymoorStudios.Core.Rpc.dll Capability for reading an ordered sequence of items from a pipe. public abstract class PipeReader<T> : IPromiseDisposable, IDisposable Type Parameters T Inheritance object PipeReader<T> Implements IPromiseDisposable IDisposable Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods PipeExtensions.GetAsyncEnumerator<T>(PipeReader<T>) Constructors PipeReader() protected PipeReader() Methods Cancel(Exception?) Attempts to perform a graceful early termination by the Reader with a diagnostic error for the Writer. public abstract void Cancel(Exception? error = null) Parameters error Exception An optional diagnostic error. If no error is provided then OperationCanceledException will be sent. Remarks The Read() method will eventually return EOS (or error) after Cancel(Exception?) has been called, either because cancellation is successfully propagated to the Writer or because the underlying channel is aborted before cancellation can be propagated. Cancellation is pr Dispose() Releases all received but unread items. public void Dispose() Remarks Implies a call to Cancel(Exception?) if the sequence has not seen EOS or already been cancelled. Any items that are received by the transport after the Reader has been disposed will be immediately released. Dispose(bool) protected virtual void Dispose(bool disposing) Parameters disposing bool DisposeAsync() Releases all received but unread items. public Promise DisposeAsync() Returns Promise A promise that resolves when all in-flight items have been exhausted from the transport. Remarks Implies a call to Cancel(Exception?) if the sequence has not seen EOS or already been cancelled. Any items that are received by the transport after the Reader has been disposed will be immediately released. DisposeAsyncCore() protected virtual Promise DisposeAsyncCore() Returns Promise Read() Reads the next available item from the pipe. public abstract Promise<T> Read() Returns Promise<T> The next item or an error. Remarks Returns the next item in the sequence. If there are no items available immediately, then the return resolves when the next item arrives. On a successful return ownership for the item returned is transferred to the caller who is responsible for disposing it. If the end of the sequence (EOS) is reached (i.e. a finite sequence) then reading after the EOS will yield an EndOfSequenceException error. If the sequence is closed by the Writer with an error, that error will be returned in sequence order after all items successfully written before the error have been delivered. If the sequence is aborted by the Writer or the underlying pipe transport a read will yield an AbortedException. Some items in the sequence may have been lost in the event of an abort."
  },
  "api/MarymoorStudios.Core.Rpc.PipeWriter-1.html": {
    "href": "api/MarymoorStudios.Core.Rpc.PipeWriter-1.html",
    "title": "Class PipeWriter<T>",
    "summary": "Class PipeWriter<T> Namespace MarymoorStudios.Core.Rpc Assembly MarymoorStudios.Core.Rpc.dll Capability for writing an ordered sequence of items to a pipe. public abstract class PipeWriter<T> : IPromiseDisposable, IDisposable Type Parameters T Inheritance object PipeWriter<T> Implements IPromiseDisposable IDisposable Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors PipeWriter() protected PipeWriter() Methods Abort() Promptly aborts the sequence. public abstract void Abort() Remarks Write initiated abort is best-effort transmitted across the transport to the Reader. If the transport has itself been aborted then the abort signal is discarded (but the Reader will see an abort from the transport). Any items in the pipe that cannot be transmitted before the transport has been torn down are immediately released. Close(Exception?) Terminates the sequence. public abstract Promise Close(Exception? error = null) Parameters error Exception An optional error to terminate the sequence with. Returns Promise A promise that resolves when the Reader has seen the entire sequence. Remarks If the sequence is terminated without an error (a successful termination) the Reader will see an End of Sequence (EOS). If an error is provided, the Reader will eventually see that error as the result of a call to Read(). Dispose() Promptly terminates the sequence. public void Dispose() Remarks If the sequence is already terminated or a graceful Close(Exception?) can be promptly transmitted on the transport, it is done. Otherwise, an Abort() occurs. If any untransmitted items cannot be promptly transmitted they are released without being transmitted and the termination becomes an Abort(). Dispose(bool) protected virtual void Dispose(bool disposing) Parameters disposing bool DisposeAsync() Asynchronously terminates the sequence. public Promise DisposeAsync() Returns Promise Remarks If the sequence is not already terminated, a graceful Close(Exception?) is performed. The result then resolves after a graceful termination acknowledgement is received from the Reader (indicating that all items have been received including the graceful termination signal). If the transport is torn down before all pending items can be transmitted, or before a graceful termination acknowledgement has been received from the Reader, then any untransmitted items are released without being transmitted and the termination becomes an Abort(). DisposeAsyncCore() protected virtual Promise DisposeAsyncCore() Returns Promise Flush() Returns a promise that resolves when flow control would allow additional writes without buffering. public abstract Promise Flush() Returns Promise Remarks If there is no flow control pressure the return value will be promptly resolved. Write(ref T) Writes a item to the pipe. public abstract void Write(ref T item) Parameters item T The item to be written. Remarks On a successful return, ownership of the provided item is transferred to the pipe. Buffers successfully written to the pipe but never delivered to a reader (e.g. because the Reader is disposed or the transport is terminated) will be disposed by the Pipe itself. The input l-value is \"consumed\". The error EndOfSequenceException occurs when the Writer comes know that the Reader has been disposed before the EOS has been written. This error will be thrown repeatedly on all subsequent writes after this point. The Writer should gracefully terminate production. If the sequence is cancelled by the Reader (optionally with an error), OperationCanceledException) (or that error) will be returned by the next call to Write(ref T) or Flush() after the Writer comes to know of the cancellation. Cancellation is propagated asynchronously backward through the transport and may be subject to propagation delay. Cancellation delivery cannot be guaranteed as it may be lost if the underlying channel is aborted before it can be delivered. If the sequence is aborted by the Reader or the underlying pipe transport, a call to Write(ref T) or Flush() will yield an AbortedException. Some items in the sequence may have been lost in the event of an abort."
  },
  "api/MarymoorStudios.Core.Rpc.PromiseSerializer-1.html": {
    "href": "api/MarymoorStudios.Core.Rpc.PromiseSerializer-1.html",
    "title": "Class PromiseSerializer<T>",
    "summary": "Class PromiseSerializer<T> Namespace MarymoorStudios.Core.Rpc Assembly MarymoorStudios.Core.Rpc.dll public sealed class PromiseSerializer<T> : Serializer<Promise<T>> Type Parameters T Inheritance object Serializer Serializer<Promise<T>> PromiseSerializer<T> Inherited Members Serializer<Promise<T>>.Default Serializer.Register(Type, Type) Serializer.TrySizeOfDerived<TSuper>(SerializationContext, in TSuper, out int) Serializer.TryWriteDerived<TSuper>(SerializationContext, ref RowBuffer, in TSuper) Serializer.Slice(TypeId, ref TypeId, SerializationContext, ref ReadOnlyRowBuffer) Serializer.Dice(int, SerializationContext, ref ReadOnlyRowBuffer) Serializer.TryReadDerived<TSuper>(TypeId, SerializationContext, ref ReadOnlyRowBuffer, out TSuper) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors PromiseSerializer() public PromiseSerializer() Properties TypeId public static TypeId TypeId { get; } Property Value TypeId Methods GetTypeId() public override TypeId GetTypeId() Returns TypeId SizeOf(SerializationContext, in Promise<T>) public override int SizeOf(SerializationContext context, in Promise<T> value) Parameters context SerializationContext value Promise<T> Returns int TryRead(SerializationContext, ref ReadOnlyRowBuffer, out Promise<T>) public override bool TryRead(SerializationContext context, ref ReadOnlyRowBuffer buffer, out Promise<T> value) Parameters context SerializationContext buffer ReadOnlyRowBuffer value Promise<T> Returns bool Write(SerializationContext, ref RowBuffer, in Promise<T>) public override void Write(SerializationContext context, ref RowBuffer buffer, in Promise<T> value) Parameters context SerializationContext buffer RowBuffer value Promise<T>"
  },
  "api/MarymoorStudios.Core.Rpc.PromiseSerializer.html": {
    "href": "api/MarymoorStudios.Core.Rpc.PromiseSerializer.html",
    "title": "Class PromiseSerializer",
    "summary": "Class PromiseSerializer Namespace MarymoorStudios.Core.Rpc Assembly MarymoorStudios.Core.Rpc.dll public sealed class PromiseSerializer : Serializer<Promise> Inheritance object Serializer Serializer<Promise> PromiseSerializer Inherited Members Serializer<Promise>.Default Serializer.Register(Type, Type) Serializer.TrySizeOfDerived<TSuper>(SerializationContext, in TSuper, out int) Serializer.TryWriteDerived<TSuper>(SerializationContext, ref RowBuffer, in TSuper) Serializer.Slice(TypeId, ref TypeId, SerializationContext, ref ReadOnlyRowBuffer) Serializer.Dice(int, SerializationContext, ref ReadOnlyRowBuffer) Serializer.TryReadDerived<TSuper>(TypeId, SerializationContext, ref ReadOnlyRowBuffer, out TSuper) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors PromiseSerializer() public PromiseSerializer() Properties TypeId public static TypeId TypeId { get; } Property Value TypeId Methods GetTypeId() public override TypeId GetTypeId() Returns TypeId SizeOf(SerializationContext, in Promise) public override int SizeOf(SerializationContext context, in Promise value) Parameters context SerializationContext value Promise Returns int TryRead(SerializationContext, ref ReadOnlyRowBuffer, out Promise) public override bool TryRead(SerializationContext context, ref ReadOnlyRowBuffer buffer, out Promise value) Parameters context SerializationContext buffer ReadOnlyRowBuffer value Promise Returns bool Write(SerializationContext, ref RowBuffer, in Promise) public override void Write(SerializationContext context, ref RowBuffer buffer, in Promise value) Parameters context SerializationContext buffer RowBuffer value Promise"
  },
  "api/MarymoorStudios.Core.Rpc.ProtocolViolationException.html": {
    "href": "api/MarymoorStudios.Core.Rpc.ProtocolViolationException.html",
    "title": "Class ProtocolViolationException",
    "summary": "Class ProtocolViolationException Namespace MarymoorStudios.Core.Rpc Assembly MarymoorStudios.Core.Rpc.dll [DataContract] public class ProtocolViolationException : CommException, ISerializable Inheritance object Exception CommException ProtocolViolationException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetType() Exception.TargetSite Exception.Message Exception.Data Exception.InnerException Exception.HelpLink Exception.Source Exception.HResult Exception.StackTrace Exception.SerializeObjectState object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors ProtocolViolationException() public ProtocolViolationException() ProtocolViolationException(string?) public ProtocolViolationException(string? message) Parameters message string ProtocolViolationException(string?, Exception?) public ProtocolViolationException(string? message, Exception? inner) Parameters message string inner Exception"
  },
  "api/MarymoorStudios.Core.Rpc.ProtocolViolationExceptionSerializer.html": {
    "href": "api/MarymoorStudios.Core.Rpc.ProtocolViolationExceptionSerializer.html",
    "title": "Class ProtocolViolationExceptionSerializer",
    "summary": "Class ProtocolViolationExceptionSerializer Namespace MarymoorStudios.Core.Rpc Assembly MarymoorStudios.Core.Rpc.dll public sealed class ProtocolViolationExceptionSerializer : Serializer<ProtocolViolationException?>, IDerivedSerializer<ProtocolViolationException?>, IDerivedSerializer Inheritance object Serializer Serializer<ProtocolViolationException> ProtocolViolationExceptionSerializer Implements IDerivedSerializer<ProtocolViolationException> IDerivedSerializer Inherited Members Serializer<ProtocolViolationException>.Default Serializer.Register(Type, Type) Serializer.TrySizeOfDerived<TSuper>(SerializationContext, in TSuper, out int) Serializer.TryWriteDerived<TSuper>(SerializationContext, ref RowBuffer, in TSuper) Serializer.Slice(TypeId, ref TypeId, SerializationContext, ref ReadOnlyRowBuffer) Serializer.Dice(int, SerializationContext, ref ReadOnlyRowBuffer) Serializer.TryReadDerived<TSuper>(TypeId, SerializationContext, ref ReadOnlyRowBuffer, out TSuper) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors ProtocolViolationExceptionSerializer() public ProtocolViolationExceptionSerializer() Properties TypeId public static TypeId TypeId { get; } Property Value TypeId Methods GetTypeId() public override TypeId GetTypeId() Returns TypeId SizeOf(SerializationContext, in ProtocolViolationException?) public override int SizeOf(SerializationContext context, in ProtocolViolationException? value) Parameters context SerializationContext value ProtocolViolationException Returns int SizeOfSegment(SerializationContext, in ProtocolViolationException) public static int SizeOfSegment(SerializationContext context, in ProtocolViolationException value) Parameters context SerializationContext value ProtocolViolationException Returns int TryRead(SerializationContext, ref ReadOnlyRowBuffer, out ProtocolViolationException?) public override bool TryRead(SerializationContext context, ref ReadOnlyRowBuffer buffer, out ProtocolViolationException? value) Parameters context SerializationContext buffer ReadOnlyRowBuffer value ProtocolViolationException Returns bool TryReadSegment(SerializationContext, ref ReadOnlyRowBuffer) public static bool TryReadSegment(SerializationContext context, ref ReadOnlyRowBuffer buffer) Parameters context SerializationContext buffer ReadOnlyRowBuffer Returns bool Write(SerializationContext, ref RowBuffer, in ProtocolViolationException?) public override void Write(SerializationContext context, ref RowBuffer buffer, in ProtocolViolationException? value) Parameters context SerializationContext buffer RowBuffer value ProtocolViolationException WriteSegment(SerializationContext, ref RowBuffer, in ProtocolViolationException) public static void WriteSegment(SerializationContext context, ref RowBuffer buffer, in ProtocolViolationException value) Parameters context SerializationContext buffer RowBuffer value ProtocolViolationException"
  },
  "api/MarymoorStudios.Core.Rpc.Proxy-1.html": {
    "href": "api/MarymoorStudios.Core.Rpc.Proxy-1.html",
    "title": "Class Proxy<TServer>",
    "summary": "Class Proxy<TServer> Namespace MarymoorStudios.Core.Rpc Assembly MarymoorStudios.Core.Rpc.dll Abstract base class for all generated proxy types. public abstract class Proxy<TServer> where TServer : AServer<TServer> Type Parameters TServer The abstract server base class generated from the eventual interface. Inheritance object Proxy<TServer> Derived FileProxy RemoteAdmissionManager.AdmissionProxy MetadataProxy NothingProxy Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors Proxy(Promise<TServer>) Creates a forwarded promise whose outcome will be the same as p. protected Proxy(Promise<TServer> p) Parameters p Promise<TServer> Proxy(Resolver<TServer>) Creates an unresolved promise whose future outcome is defined by r. protected Proxy(Resolver<TServer> r) Parameters r Resolver<TServer> Proxy(Proxy<TServer>) Creates a forwarded promise whose outcome will be the same as p. protected Proxy(Proxy<TServer> p) Parameters p Proxy<TServer> Proxy(Exception) Creates a failed promise whose outcome is ex. protected Proxy(Exception ex) Parameters ex Exception Proxy(TServer) Creates a successfully resolved promise. protected Proxy(TServer value) Parameters value TServer Properties Failure The error the promise failed with. public Exception Failure { get; } Property Value Exception Remarks REQUIRES: the promise has failed. IsFailed True if the promise has failed. public bool IsFailed { get; } Property Value bool IsResolved True if the promise is in a resolved state (either success or failure). public bool IsResolved { get; } Property Value bool Methods AppendOne(ResolverTurn<TServer>) Registers a message to be scheduled on server this proxy is resolved to. public void AppendOne(ResolverTurn<TServer> msg) Parameters msg ResolverTurn<TServer> The message to be scheduled. Remarks If this resolver is already resolved then msg will be scheduled immediately. GetRemoteIdentity() Returns the identity of the remote peer of this proxy. public Promise<UserIdentity?> GetRemoteIdentity() Returns Promise<UserIdentity> Remarks Returns the resolved identity of the first channel the proxy traverses, or if either the proxy is not remote or the channel has no identity (i.e. is anonymous). Sync() Sends a synchronization request to target of this proxy. public Promise Sync() Returns Promise Resolves successfully if and only if this proxy itself has resolved successfully end-to-end (possibly remotely), otherwise resolves to the same failure that the proxy resolved to. Remarks Sync() is often used to prove successful initialization before pipelining methods on a proxy. Sync() determines if a (possibly remote) computation that produced the proxy succeeded or failed. The proxy may later become aborted (particularly if it is remote) , but at the moment in time when the Sync() completed the proxy was successfully connected."
  },
  "api/MarymoorStudios.Core.Rpc.Proxy.html": {
    "href": "api/MarymoorStudios.Core.Rpc.Proxy.html",
    "title": "Class Proxy",
    "summary": "Class Proxy Namespace MarymoorStudios.Core.Rpc Assembly MarymoorStudios.Core.Rpc.dll Static helpers for mapping between TProxy and TServer. public static class Proxy Inheritance object Proxy Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods Unwrap<TProxy, TServer>(Promise<TProxy>) Unwraps a promise of a proxy to just a proxy (that can be used to pipeline immediately). public static TProxy Unwrap<TProxy, TServer>(this Promise<TProxy> p) where TProxy : Proxy<TServer>, IProxy<TProxy, TServer> where TServer : AServer<TServer> Parameters p Promise<TProxy> Returns TProxy Type Parameters TProxy TServer When<TProxy, TServer>(Promise, Func<TProxy>) Executes a continuation when the target resolves (with failure-coalescing). public static TProxy When<TProxy, TServer>(this Promise target, Func<TProxy> body) where TProxy : Proxy<TServer>, IProxy<TProxy, TServer> where TServer : AServer<TServer> Parameters target Promise The trigger for execution. body Func<TProxy> The continuation to execute if the trigger succeeded. Returns TProxy Resolves to the outcome (either the trigger's failure, or the continuation's outcome). Type Parameters TProxy TServer"
  },
  "api/MarymoorStudios.Core.Rpc.ProxySerializer-2.html": {
    "href": "api/MarymoorStudios.Core.Rpc.ProxySerializer-2.html",
    "title": "Class ProxySerializer<TProxy, TServer>",
    "summary": "Class ProxySerializer<TProxy, TServer> Namespace MarymoorStudios.Core.Rpc Assembly MarymoorStudios.Core.Rpc.dll public abstract class ProxySerializer<TProxy, TServer> : Serializer<TProxy?> where TProxy : Proxy<TServer>, IProxy<TProxy, TServer> where TServer : AServer<TServer> Type Parameters TProxy TServer Inheritance object Serializer Serializer<TProxy> ProxySerializer<TProxy, TServer> Inherited Members Serializer<TProxy>.Default Serializer.Register(Type, Type) Serializer.TrySizeOfDerived<TSuper>(SerializationContext, in TSuper, out int) Serializer.TryWriteDerived<TSuper>(SerializationContext, ref RowBuffer, in TSuper) Serializer.Slice(TypeId, ref TypeId, SerializationContext, ref ReadOnlyRowBuffer) Serializer.Dice(int, SerializationContext, ref ReadOnlyRowBuffer) Serializer.TryReadDerived<TSuper>(TypeId, SerializationContext, ref ReadOnlyRowBuffer, out TSuper) Serializer.Get<T>() object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors ProxySerializer() protected ProxySerializer() Properties TypeId public static TypeId TypeId { get; } Property Value TypeId Methods GetTypeId() public override TypeId GetTypeId() Returns TypeId SizeOf(SerializationContext, in TProxy?) public override int SizeOf(SerializationContext context, in TProxy? value) Parameters context SerializationContext value TProxy Returns int TryRead(SerializationContext, ref ReadOnlyRowBuffer, out TProxy?) public override bool TryRead(SerializationContext context, ref ReadOnlyRowBuffer buffer, out TProxy? value) Parameters context SerializationContext buffer ReadOnlyRowBuffer value TProxy Returns bool Write(SerializationContext, ref RowBuffer, in TProxy?) public override void Write(SerializationContext context, ref RowBuffer buffer, in TProxy? value) Parameters context SerializationContext buffer RowBuffer value TProxy"
  },
  "api/MarymoorStudios.Core.Rpc.RemotedException.html": {
    "href": "api/MarymoorStudios.Core.Rpc.RemotedException.html",
    "title": "Class RemotedException",
    "summary": "Class RemotedException Namespace MarymoorStudios.Core.Rpc Assembly MarymoorStudios.Core.Rpc.dll An exception that was transmitted across a MarymoorStudios.Core.Rpc.CommChannel. [DataContract] public class RemotedException : Exception, ISerializable Inheritance object Exception RemotedException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetType() Exception.TargetSite Exception.Message Exception.Data Exception.InnerException Exception.HelpLink Exception.Source Exception.HResult Exception.StackTrace Exception.SerializeObjectState object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors RemotedException() public RemotedException() RemotedException(string?) public RemotedException(string? message) Parameters message string RemotedException(string?, Exception?) public RemotedException(string? message, Exception? innerException) Parameters message string innerException Exception"
  },
  "api/MarymoorStudios.Core.Rpc.RemotedExceptionSerializer.html": {
    "href": "api/MarymoorStudios.Core.Rpc.RemotedExceptionSerializer.html",
    "title": "Class RemotedExceptionSerializer",
    "summary": "Class RemotedExceptionSerializer Namespace MarymoorStudios.Core.Rpc Assembly MarymoorStudios.Core.Rpc.dll public sealed class RemotedExceptionSerializer : Serializer<RemotedException?>, IDerivedSerializer<RemotedException?>, IDerivedSerializer Inheritance object Serializer Serializer<RemotedException> RemotedExceptionSerializer Implements IDerivedSerializer<RemotedException> IDerivedSerializer Inherited Members Serializer<RemotedException>.Default Serializer.Register(Type, Type) Serializer.TrySizeOfDerived<TSuper>(SerializationContext, in TSuper, out int) Serializer.TryWriteDerived<TSuper>(SerializationContext, ref RowBuffer, in TSuper) Serializer.Slice(TypeId, ref TypeId, SerializationContext, ref ReadOnlyRowBuffer) Serializer.Dice(int, SerializationContext, ref ReadOnlyRowBuffer) Serializer.TryReadDerived<TSuper>(TypeId, SerializationContext, ref ReadOnlyRowBuffer, out TSuper) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors RemotedExceptionSerializer() public RemotedExceptionSerializer() Properties TypeId public static TypeId TypeId { get; } Property Value TypeId Methods GetTypeId() public override TypeId GetTypeId() Returns TypeId SizeOf(SerializationContext, in RemotedException?) public override int SizeOf(SerializationContext context, in RemotedException? value) Parameters context SerializationContext value RemotedException Returns int SizeOfSegment(SerializationContext, in RemotedException) public static int SizeOfSegment(SerializationContext context, in RemotedException value) Parameters context SerializationContext value RemotedException Returns int TryRead(SerializationContext, ref ReadOnlyRowBuffer, out RemotedException?) public override bool TryRead(SerializationContext context, ref ReadOnlyRowBuffer buffer, out RemotedException? value) Parameters context SerializationContext buffer ReadOnlyRowBuffer value RemotedException Returns bool TryReadSegment(SerializationContext, ref ReadOnlyRowBuffer) public static bool TryReadSegment(SerializationContext context, ref ReadOnlyRowBuffer buffer) Parameters context SerializationContext buffer ReadOnlyRowBuffer Returns bool Write(SerializationContext, ref RowBuffer, in RemotedException?) public override void Write(SerializationContext context, ref RowBuffer buffer, in RemotedException? value) Parameters context SerializationContext buffer RowBuffer value RemotedException WriteSegment(SerializationContext, ref RowBuffer, in RemotedException) public static void WriteSegment(SerializationContext context, ref RowBuffer buffer, in RemotedException value) Parameters context SerializationContext buffer RowBuffer value RemotedException"
  },
  "api/MarymoorStudios.Core.Rpc.ResolverExtensions.html": {
    "href": "api/MarymoorStudios.Core.Rpc.ResolverExtensions.html",
    "title": "Class ResolverExtensions",
    "summary": "Class ResolverExtensions Namespace MarymoorStudios.Core.Rpc Assembly MarymoorStudios.Core.Rpc.dll Extensions for Resolver<T>. public static class ResolverExtensions Inheritance object ResolverExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods Forward<TProxy, TServer>(Resolver<TServer>, TProxy) Permanently transition the resolver to the \"forwarded\" state with whatever p's outcome becomes as the outcome. public static void Forward<TProxy, TServer>(this Resolver<TServer> @this, TProxy p) where TProxy : Proxy<TServer> where TServer : AServer<TServer> Parameters this Resolver<TServer> The resolver p TProxy The promise whose future outcome should be this resolver's outcome. Type Parameters TProxy TServer"
  },
  "api/MarymoorStudios.Core.Rpc.Sequence-1.SequenceEnumerator.html": {
    "href": "api/MarymoorStudios.Core.Rpc.Sequence-1.SequenceEnumerator.html",
    "title": "Struct Sequence<T>.SequenceEnumerator",
    "summary": "Struct Sequence<T>.SequenceEnumerator Namespace MarymoorStudios.Core.Rpc Assembly MarymoorStudios.Core.Rpc.dll An enumerator for a Sequence<T>. public readonly struct Sequence<T>.SequenceEnumerator : IIPromiseEnumerator<T>, IPromiseDisposable Implements IIPromiseEnumerator<T> IPromiseDisposable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Properties Current Gets the element in the collection at the current position of the enumerator. public T Current { get; } Property Value T The element in the collection at the current position of the enumerator. Methods DisposeAsync() public Promise DisposeAsync() Returns Promise MoveNextAsync() Advances the enumerator to the next element. public Promise<bool> MoveNextAsync() Returns Promise<bool> Resolves to true if the enumerator was successfully advanced, false if the end was reached."
  },
  "api/MarymoorStudios.Core.Rpc.Sequence-1.Writer.html": {
    "href": "api/MarymoorStudios.Core.Rpc.Sequence-1.Writer.html",
    "title": "Class Sequence<T>.Writer",
    "summary": "Class Sequence<T>.Writer Namespace MarymoorStudios.Core.Rpc Assembly MarymoorStudios.Core.Rpc.dll The writer capability for a Sequence<T>. public sealed class Sequence<T>.Writer : IPromiseDisposable, IDisposable Inheritance object Sequence<T>.Writer Implements IPromiseDisposable IDisposable Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods Abort() Promptly aborts the sequence. public void Abort() Remarks Write initiated abort is best-effort transmitted across the transport to the reader. If the transport has itself been aborted then the abort signal is discarded (but the reader will see an abort from the transport). Any items in flight that cannot be transmitted before the transport has been torn down are immediately released. Close(Exception?) Terminates the sequence. public Promise Close(Exception? error = null) Parameters error Exception An optional error to terminate the sequence with. Returns Promise A promise that resolves when the reader has seen the entire sequence. Remarks If the sequence is terminated without an error (a successful termination) the reader will see an End of Sequence (EOS). If an error is provided, the reader will eventually see that error as the result of a call to Read(). Dispose() Promptly terminates the sequence. public void Dispose() Remarks If the sequence is already terminated or a graceful Close(Exception?) can be promptly transmitted on the transport, it is done. Otherwise, an Abort() occurs. If any untransmitted items cannot be promptly transmitted they are released without being transmitted and the termination becomes an Abort(). DisposeAsync() Asynchronously terminates the sequence. public Promise DisposeAsync() Returns Promise Remarks If the sequence is not already terminated, a graceful Close(Exception?) is performed. The result then resolves after a graceful termination acknowledgement is received from the reader (indicating that all items have been received including the graceful termination signal). If the transport is torn down before all pending items can be transmitted, or before a graceful termination acknowledgement has been received from the reader, then any untransmitted items are released without being transmitted and the termination becomes an Abort(). ~Writer() protected ~Writer() Flush() Returns a promise that resolves when flow control would allow additional writes without buffering. public Promise Flush() Returns Promise Remarks If there is no flow control pressure the return value will be promptly resolved. Write(T) Writes an item to the sequence. public void Write(T item) Parameters item T The item to be written. Remarks On a successful return, ownership of the provided item is transferred to the sequence. Items successfully written to the sequence but never delivered to a reader (e.g. because the sequence is disposed or the transport is terminated) will be disposed by the sequence itself. The error EndOfSequenceException occurs when the Writer comes to know that the sequence has been disposed before the EOS has been written. This error will be thrown repeatedly on all subsequent writes after this point. The Writer should gracefully terminate production. If the sequence is cancelled by the reader (optionally with an error), OperationCanceledException) (or that error) will be returned by the next call to Write(T) or Flush() after the Writer comes to know of the cancellation. Cancellation is propagated asynchronously backward through the transport and may be subject to propagation delay. Cancellation delivery cannot be guaranteed as it may be lost if the underlying channel is aborted before it can be delivered. If the sequence is aborted by the reader or the underlying transport, a call to Write(T) or Flush() will yield an AbortedException. Some items in the sequence may have been lost in the event of an abort."
  },
  "api/MarymoorStudios.Core.Rpc.Sequence-1.html": {
    "href": "api/MarymoorStudios.Core.Rpc.Sequence-1.html",
    "title": "Class Sequence<T>",
    "summary": "Class Sequence<T> Namespace MarymoorStudios.Core.Rpc Assembly MarymoorStudios.Core.Rpc.dll Provides iterators for Sequence<T>. public sealed class Sequence<T> : IPromiseDisposable, IDisposable, IPromiseEnumerable<T> Type Parameters T Inheritance object Sequence<T> Implements IPromiseDisposable IDisposable IPromiseEnumerable<T> Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Properties BatchSize The batch size suggested by the reader. public int BatchSize { get; set; } Property Value int Capacity The desired capacity of the reader. public int Capacity { get; set; } Property Value int Methods Cancel(Exception?) Attempts to perform a graceful early termination by the sequence with a diagnostic error for the Writer. public void Cancel(Exception? error = null) Parameters error Exception An optional diagnostic error. If no error is provided then OperationCanceledException will be sent. Remarks The Read() method will eventually return EOS (or error) after Cancel(Exception?) has been called, either because cancellation is successfully propagated to the Writer or because the underlying channel is aborted before cancellation can be propagated. Cancellation is pr Create(Func<Writer, Promise>, int, int) Constructs a new Pipe<T> public static Sequence<T> Create(Func<Sequence<T>.Writer, Promise> body, int capacity = 100, int batchSize = 20) Parameters body Func<Sequence<T>.Writer, Promise> A function that will generate the contents of the sequence. capacity int The maximum number of items before backpressure is applied. batchSize int The reader suggested batch size. Returns Sequence<T> Remarks REQUIRES: capacity > 0 REQUIRES: 1 <= batchSize <= capacity The batchSize is used to decrease ping-ponging by delaying waking the producer until there are more items in the window. There is a tradeoff between added latency and buffering costs on the writer side versus signalling costs. The default value is 1 causing the producer to be signalled whenever there is at least one slot available. Create(int, int) Constructs a new Pipe<T> public static (Sequence<T> reader, Sequence<T>.Writer writer) Create(int capacity = 100, int batchSize = 20) Parameters capacity int The maximum number of items before backpressure is applied. batchSize int The reader suggested batch size. Returns (Sequence<T> reader, Sequence<T>.Writer writer) Remarks REQUIRES: capacity > 0 REQUIRES: 1 <= batchSize <= capacity The batchSize is used to decrease ping-ponging by delaying waking the producer until there are more items in the window. There is a tradeoff between added latency and buffering costs on the writer side versus signalling costs. The default value is 1 causing the producer to be signalled whenever there is at least one slot available. Dispose() Releases all received but unread items. public void Dispose() Remarks Implies a call to Cancel(Exception?) if the sequence has not seen EOS or already been cancelled. Any items that are received by the transport after the Reader has been disposed will be immediately released. DisposeAsync() Releases all received but unread items. public Promise DisposeAsync() Returns Promise A promise that resolves when all in-flight items have been exhausted from the transport. Remarks Implies a call to Cancel(Exception?) if the sequence has not seen EOS or already been cancelled. Any items that are received by the transport after the Reader has been disposed will be immediately released. ForEach(Func<T, Promise>) Yields each of the items in the sequence to the body function. public Promise ForEach(Func<T, Promise> body) Parameters body Func<T, Promise> A function to process each item. Returns Promise Resolves successfully if the entire sequence was read to the end without encountering an error, otherwise breaks with the first error encountered by the sequence. GetAsyncEnumerator(CancellationToken) Returns an enumerator that iterates asynchronously through the Sequence<T>. public Sequence<T>.SequenceEnumerator GetAsyncEnumerator(CancellationToken token = default) Parameters token CancellationToken Returns Sequence<T>.SequenceEnumerator Read() Reads the next available item from the sequence. public Promise<T> Read() Returns Promise<T> The next item or an error. Remarks Returns the next item in the sequence. If there are no items available immediately, then the return resolves when the next item arrives. On a successful return ownership for the item returned is transferred to the caller who is responsible for disposing it. If the end of the sequence (EOS) is reached (i.e. a finite sequence) then reading after the EOS will yield an EndOfSequenceException error. If the sequence is closed by the Writer with an error, that error will be returned in sequence order after all items successfully written before the error have been delivered. If the sequence is aborted by the Writer or the underlying transport a read will yield an AbortedException. Some items in the sequence may have been lost in the event of an abort."
  },
  "api/MarymoorStudios.Core.Rpc.SequenceExtensions.html": {
    "href": "api/MarymoorStudios.Core.Rpc.SequenceExtensions.html",
    "title": "Class SequenceExtensions",
    "summary": "Class SequenceExtensions Namespace MarymoorStudios.Core.Rpc Assembly MarymoorStudios.Core.Rpc.dll Provides convenience extensions for Sequence<T> and its related classes. public static class SequenceExtensions Inheritance object SequenceExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods AsSequence<T>(IEnumerable<T>, int, int, Exception?) Returns a Sequence<T> over a finite collection. public static Sequence<T> AsSequence<T>(this IEnumerable<T> collection, int capacity = 100, int batchSize = 20, Exception? error = null) Parameters collection IEnumerable<T> The collection. capacity int The maximum number of items before backpressure is applied. batchSize int The reader suggested batch size. error Exception An optional error to terminate the sequence with. Returns Sequence<T> Type Parameters T"
  },
  "api/MarymoorStudios.Core.Rpc.SequenceSerializer-1.html": {
    "href": "api/MarymoorStudios.Core.Rpc.SequenceSerializer-1.html",
    "title": "Class SequenceSerializer<T>",
    "summary": "Class SequenceSerializer<T> Namespace MarymoorStudios.Core.Rpc Assembly MarymoorStudios.Core.Rpc.dll public sealed class SequenceSerializer<T> : Serializer<Sequence<T>?> Type Parameters T Inheritance object Serializer Serializer<Sequence<T>> SequenceSerializer<T> Inherited Members Serializer<Sequence<T>>.Default Serializer.Register(Type, Type) Serializer.TrySizeOfDerived<TSuper>(SerializationContext, in TSuper, out int) Serializer.TryWriteDerived<TSuper>(SerializationContext, ref RowBuffer, in TSuper) Serializer.Slice(TypeId, ref TypeId, SerializationContext, ref ReadOnlyRowBuffer) Serializer.Dice(int, SerializationContext, ref ReadOnlyRowBuffer) Serializer.TryReadDerived<TSuper>(TypeId, SerializationContext, ref ReadOnlyRowBuffer, out TSuper) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors SequenceSerializer() public SequenceSerializer() Properties TypeId public static TypeId TypeId { get; } Property Value TypeId Methods GetTypeId() public override TypeId GetTypeId() Returns TypeId SizeOf(SerializationContext, in Sequence<T>?) public override int SizeOf(SerializationContext context, in Sequence<T>? value) Parameters context SerializationContext value Sequence<T> Returns int TryRead(SerializationContext, ref ReadOnlyRowBuffer, out Sequence<T>?) public override bool TryRead(SerializationContext context, ref ReadOnlyRowBuffer buffer, out Sequence<T>? value) Parameters context SerializationContext buffer ReadOnlyRowBuffer value Sequence<T> Returns bool Write(SerializationContext, ref RowBuffer, in Sequence<T>?) public override void Write(SerializationContext context, ref RowBuffer buffer, in Sequence<T>? value) Parameters context SerializationContext buffer RowBuffer value Sequence<T>"
  },
  "api/MarymoorStudios.Core.Rpc.SyncMessage-1.html": {
    "href": "api/MarymoorStudios.Core.Rpc.SyncMessage-1.html",
    "title": "Class SyncMessage<TServer>",
    "summary": "Class SyncMessage<TServer> Namespace MarymoorStudios.Core.Rpc Assembly MarymoorStudios.Core.Rpc.dll public sealed class SyncMessage<TServer> : ADataRpcMessage<SyncMessage<TServer>, TServer> where TServer : AServer<TServer> Type Parameters TServer Inheritance object Turn ResolverTurn<TServer> ARpcMessage<TServer> ADataRpcMessage<SyncMessage<TServer>, TServer> SyncMessage<TServer> Inherited Members ADataRpcMessage<SyncMessage<TServer>, TServer>.Result Turn.Id object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Properties MethodName protected override string MethodName { get; } Property Value string Methods Run(TServer) protected override Promise Run(TServer server) Parameters server TServer Returns Promise"
  },
  "api/MarymoorStudios.Core.Rpc.SyncMessage.html": {
    "href": "api/MarymoorStudios.Core.Rpc.SyncMessage.html",
    "title": "Class SyncMessage",
    "summary": "Class SyncMessage Namespace MarymoorStudios.Core.Rpc Assembly MarymoorStudios.Core.Rpc.dll public static class SyncMessage Inheritance object SyncMessage Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Fields SyncMethodIndex public const uint SyncMethodIndex = 4294967295 Field Value uint SyncMethodName public const string SyncMethodName = \"Proxy.Sync\" Field Value string"
  },
  "api/MarymoorStudios.Core.Rpc.SyncMessageSerializer-1.html": {
    "href": "api/MarymoorStudios.Core.Rpc.SyncMessageSerializer-1.html",
    "title": "Class SyncMessageSerializer<TServer>",
    "summary": "Class SyncMessageSerializer<TServer> Namespace MarymoorStudios.Core.Rpc Assembly MarymoorStudios.Core.Rpc.dll public sealed class SyncMessageSerializer<TServer> : Serializer<SyncMessage<TServer>?>, IDerivedSerializer<SyncMessage<TServer>?>, IDerivedSerializer where TServer : AServer<TServer> Type Parameters TServer Inheritance object Serializer Serializer<SyncMessage<TServer>> SyncMessageSerializer<TServer> Implements IDerivedSerializer<SyncMessage<TServer>> IDerivedSerializer Inherited Members Serializer<SyncMessage<TServer>>.Default Serializer.Register(Type, Type) Serializer.TrySizeOfDerived<TSuper>(SerializationContext, in TSuper, out int) Serializer.TryWriteDerived<TSuper>(SerializationContext, ref RowBuffer, in TSuper) Serializer.Slice(TypeId, ref TypeId, SerializationContext, ref ReadOnlyRowBuffer) Serializer.Dice(int, SerializationContext, ref ReadOnlyRowBuffer) Serializer.TryReadDerived<TSuper>(TypeId, SerializationContext, ref ReadOnlyRowBuffer, out TSuper) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors SyncMessageSerializer() public SyncMessageSerializer() Properties TypeId public static TypeId TypeId { get; } Property Value TypeId Methods GetTypeId() public override TypeId GetTypeId() Returns TypeId SizeOf(SerializationContext, in SyncMessage<TServer>?) public override int SizeOf(SerializationContext context, in SyncMessage<TServer>? value) Parameters context SerializationContext value SyncMessage<TServer> Returns int SizeOfSegment(SerializationContext, in SyncMessage<TServer>) public static int SizeOfSegment(SerializationContext context, in SyncMessage<TServer> value) Parameters context SerializationContext value SyncMessage<TServer> Returns int TryRead(SerializationContext, ref ReadOnlyRowBuffer, out SyncMessage<TServer>?) public override bool TryRead(SerializationContext context, ref ReadOnlyRowBuffer buffer, out SyncMessage<TServer>? value) Parameters context SerializationContext buffer ReadOnlyRowBuffer value SyncMessage<TServer> Returns bool TryReadSegment(SerializationContext, ref ReadOnlyRowBuffer) public static bool TryReadSegment(SerializationContext context, ref ReadOnlyRowBuffer buffer) Parameters context SerializationContext buffer ReadOnlyRowBuffer Returns bool Write(SerializationContext, ref RowBuffer, in SyncMessage<TServer>?) public override void Write(SerializationContext context, ref RowBuffer buffer, in SyncMessage<TServer>? value) Parameters context SerializationContext buffer RowBuffer value SyncMessage<TServer> WriteSegment(SerializationContext, ref RowBuffer, in SyncMessage<TServer>) public static void WriteSegment(SerializationContext context, ref RowBuffer buffer, in SyncMessage<TServer> value) Parameters context SerializationContext buffer RowBuffer value SyncMessage<TServer>"
  },
  "api/MarymoorStudios.Core.Rpc.html": {
    "href": "api/MarymoorStudios.Core.Rpc.html",
    "title": "Namespace MarymoorStudios.Core.Rpc",
    "summary": "Namespace MarymoorStudios.Core.Rpc Classes ABytesRpcMessage<TMessage, TServer> Abstract base class for all generated data-returning message types. ADataRpcMessage<TMessage, TServer> Abstract base class for all generated void-returning message types. ADataRpcMessage<TMessage, TResult, TServer> Abstract base class for all generated data-returning message types. AProxyRpcMessage<TMessage, TReturnProxy, TReturnServer, TServer> Abstract base class for all generated proxy-returning message types. ARpcMessage<TServer> ASequenceRpcMessage<TMessage, TItem, TServer> Abstract base class for all generated data-returning message types. AServer<TServer> Abstract base class for all eventual server types. BackgroundSip<TChildProxy, TChildServer> A Software Isolated Process (Sip) that runs in a background thread. Bytes Bytes.Writer The writer capability for a Bytes. BytesSerializer CommException CommExceptionSerializer CommIdSerializer CommProtocol EventualAttribute EventualType IMetadata.Descriptor The base type for all late-bound capability descriptions. IMetadata.DescriptorSerializer MetadataProxy MetadataPublisher An implementation of IMetadata from a static, potentially non-unique, set of capabilities. MetadataServer NothingProxy NothingServer PipeExtensions Provides convenience extensions for Pipe<T> and its related classes. PipeQueue<T> PipeReader<T> Capability for reading an ordered sequence of items from a pipe. PipeWriter<T> Capability for writing an ordered sequence of items to a pipe. PromiseSerializer PromiseSerializer<T> ProtocolViolationException ProtocolViolationExceptionSerializer Proxy Static helpers for mapping between TProxy and TServer. ProxySerializer<TProxy, TServer> Proxy<TServer> Abstract base class for all generated proxy types. RemotedException An exception that was transmitted across a MarymoorStudios.Core.Rpc.CommChannel. RemotedExceptionSerializer ResolverExtensions Extensions for Resolver<T>. SequenceExtensions Provides convenience extensions for Sequence<T> and its related classes. SequenceSerializer<T> Sequence<T> Provides iterators for Sequence<T>. Sequence<T>.Writer The writer capability for a Sequence<T>. SyncMessage SyncMessageSerializer<TServer> SyncMessage<TServer> Structs CommId A unique id that represents an object (local or remote) to the channel. MethodId An identifier for a unique method within a remotable type hierarchy. PipeExtensions.PipeReaderEnumerator<T> An enumerator for a PipeReader<T>. Pipe<T> A unidirectional flow of items. Sequence<T>.SequenceEnumerator An enumerator for a Sequence<T>. Interfaces IByRefRemotable Objects that are remoted by reference (instead of by value). IMetadata A general mechanism for publishing late-bound eventual capabilities. INothing Empty eventual interface that grants no capabilities. IProxy<TProxy, TServer> Interface that provides generic constraints."
  },
  "api/MarymoorStudios.Core.Serialization.ArrayMemoryResizer.html": {
    "href": "api/MarymoorStudios.Core.Serialization.ArrayMemoryResizer.html",
    "title": "Class ArrayMemoryResizer",
    "summary": "Class ArrayMemoryResizer Namespace MarymoorStudios.Core.Serialization Assembly MarymoorStudios.Core.Serialization.dll public sealed class ArrayMemoryResizer : IMemoryResizer Inheritance object ArrayMemoryResizer Implements IMemoryResizer Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors ArrayMemoryResizer() public ArrayMemoryResizer() Properties Shared A shared (stateless, multi-thread safe) array resizer. public static ArrayMemoryResizer Shared { get; } Property Value ArrayMemoryResizer Methods Resize(Memory<byte>, int) Resizes a memory block (copying any existing content). public Memory<byte> Resize(Memory<byte> memory, int minSize) Parameters memory Memory<byte> Existing buffer. minSize int The minimum size of the new buffer. Returns Memory<byte> A new buffer that is at least as large as \"minSize\"."
  },
  "api/MarymoorStudios.Core.Serialization.DataContractAttribute.html": {
    "href": "api/MarymoorStudios.Core.Serialization.DataContractAttribute.html",
    "title": "Class DataContractAttribute",
    "summary": "Class DataContractAttribute Namespace MarymoorStudios.Core.Serialization Assembly MarymoorStudios.Core.Serialization.dll [AttributeUsage(AttributeTargets.Class|AttributeTargets.Struct|AttributeTargets.Enum, Inherited = false)] public sealed class DataContractAttribute : Attribute Inheritance object Attribute DataContractAttribute Inherited Members Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.Equals(object) Attribute.GetHashCode() Attribute.Match(object) Attribute.IsDefaultAttribute() Attribute.TypeId object.GetType() object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors DataContractAttribute() public DataContractAttribute() Properties NoCode If true then no code is generated (a custom implementation must be provided). public bool NoCode { get; set; } Property Value bool"
  },
  "api/MarymoorStudios.Core.Serialization.DataContractSerializer.html": {
    "href": "api/MarymoorStudios.Core.Serialization.DataContractSerializer.html",
    "title": "Class DataContractSerializer",
    "summary": "Class DataContractSerializer Namespace MarymoorStudios.Core.Serialization Assembly MarymoorStudios.Core.Serialization.dll public static class DataContractSerializer Inheritance object DataContractSerializer Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods GetTypeId<T>() Returns the TypeId of T. public static TypeId GetTypeId<T>() Returns TypeId Type Parameters T The type whose TypeId should be computed. Serialize<T>(T) Writes the binary representation of an MCS DataContract type to Memory. public static ReadOnlyMemory<byte> Serialize<T>(T data) Parameters data T The value to serialize. Returns ReadOnlyMemory<byte> The binary representation of the value. Type Parameters T The type to serialize. TryDeserialize<T>(ReadOnlyMemory<byte>, out T) Parses the binary representation of an MCS DataContract type from a Memory. public static bool TryDeserialize<T>(ReadOnlyMemory<byte> bytes, out T data) Parameters bytes ReadOnlyMemory<byte> A memory buffer containing the value to parse. data T The deserialized value, if successful, default(T) otherwise. Returns bool True if successful, false otherwise. Type Parameters T The type to deserialize."
  },
  "api/MarymoorStudios.Core.Serialization.DataMemberAttribute.html": {
    "href": "api/MarymoorStudios.Core.Serialization.DataMemberAttribute.html",
    "title": "Class DataMemberAttribute",
    "summary": "Class DataMemberAttribute Namespace MarymoorStudios.Core.Serialization Assembly MarymoorStudios.Core.Serialization.dll [AttributeUsage(AttributeTargets.Property|AttributeTargets.Field)] public sealed class DataMemberAttribute : Attribute Inheritance object Attribute DataMemberAttribute Inherited Members Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.Equals(object) Attribute.GetHashCode() Attribute.Match(object) Attribute.IsDefaultAttribute() Attribute.TypeId object.GetType() object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors DataMemberAttribute() public DataMemberAttribute()"
  },
  "api/MarymoorStudios.Core.Serialization.IMemoryResizer.html": {
    "href": "api/MarymoorStudios.Core.Serialization.IMemoryResizer.html",
    "title": "Interface IMemoryResizer",
    "summary": "Interface IMemoryResizer Namespace MarymoorStudios.Core.Serialization Assembly MarymoorStudios.Core.Serialization.dll public interface IMemoryResizer Methods Resize(Memory<byte>, int) Resizes a memory block (copying any existing content). Memory<byte> Resize(Memory<byte> memory, int minSize) Parameters memory Memory<byte> Existing buffer. minSize int The minimum size of the new buffer. Returns Memory<byte> A new buffer that is at least as large as \"minSize\"."
  },
  "api/MarymoorStudios.Core.Serialization.RecordVisitor.html": {
    "href": "api/MarymoorStudios.Core.Serialization.RecordVisitor.html",
    "title": "Class RecordVisitor",
    "summary": "Class RecordVisitor Namespace MarymoorStudios.Core.Serialization Assembly MarymoorStudios.Core.Serialization.dll Visitor that can walk the structure of any serialized record. public abstract class RecordVisitor Inheritance object RecordVisitor Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors RecordVisitor() protected RecordVisitor() Methods ReportError(string) Called when an error occurs during the walk. protected virtual bool ReportError(string error) Parameters error string Detailed error message. Returns bool returns false TryReadRecord(ref ReadOnlyRowBuffer) public bool TryReadRecord(ref ReadOnlyRowBuffer b) Parameters b ReadOnlyRowBuffer Returns bool TryReadUnknown(ref ReadOnlyRowBuffer, TypeMarker) Called when an unknown code is read. protected virtual bool TryReadUnknown(ref ReadOnlyRowBuffer b, TypeMarker code) Parameters b ReadOnlyRowBuffer The buffer. code TypeMarker The unknown code. Returns bool True if the code was processed, false otherwise. Visit() Called when a is visited. protected abstract bool Visit() Returns bool True to continue, false otherwise. Visit(TypeId) Called when a TypeId value is visited. protected abstract bool Visit(TypeId value) Parameters value TypeId Returns bool True to continue, false otherwise. Visit(string) Called when a string value is visited. protected abstract bool Visit(string value) Parameters value string Returns bool True to continue, false otherwise. VisitArrayEnd() Called when an array scoped is exited. protected abstract bool VisitArrayEnd() Returns bool True to continue, false otherwise. VisitArrayStart(int) Called when an array scoped is entered. protected abstract bool VisitArrayStart(int length) Parameters length int Returns bool True to continue, false otherwise. VisitByteArray(ReadOnlyMemory<byte>) Called when an array of bytes is read. protected abstract bool VisitByteArray(ReadOnlyMemory<byte> bytes) Parameters bytes ReadOnlyMemory<byte> Returns bool True to continue, false otherwise. VisitObjectEnd() Called when an object scoped is exited. protected abstract bool VisitObjectEnd() Returns bool True to continue, false otherwise. VisitObjectStart() Called when an object scoped is entered. protected abstract bool VisitObjectStart() Returns bool True to continue, false otherwise. VisitSegmentEnd() Called when an object segment scoped is exited. protected abstract bool VisitSegmentEnd() Returns bool True to continue, false otherwise. VisitSegmentStart(TypeId, int) Called when an object segment scoped is entered. protected abstract bool VisitSegmentStart(TypeId typeId, int segmentLength) Parameters typeId TypeId segmentLength int Returns bool True to continue, false otherwise. VisitTupleEnd() Called when a tuple scoped is exited. protected abstract bool VisitTupleEnd() Returns bool True to continue, false otherwise. VisitTupleStart(TypeId) Called when a tuple scoped is entered. protected abstract bool VisitTupleStart(TypeId typeId) Parameters typeId TypeId Returns bool True to continue, false otherwise. Visit<T>(T) Called when a primitive value is visited. protected abstract bool Visit<T>(T value) where T : unmanaged Parameters value T Returns bool True to continue, false otherwise. Type Parameters T"
  },
  "api/MarymoorStudios.Core.Serialization.SerializationException.html": {
    "href": "api/MarymoorStudios.Core.Serialization.SerializationException.html",
    "title": "Class SerializationException",
    "summary": "Class SerializationException Namespace MarymoorStudios.Core.Serialization Assembly MarymoorStudios.Core.Serialization.dll Exception thrown during serialization or deserialization. [DataContract] public sealed class SerializationException : Exception, ISerializable Inheritance object Exception SerializationException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetType() Exception.TargetSite Exception.Message Exception.Data Exception.InnerException Exception.HelpLink Exception.Source Exception.HResult Exception.StackTrace object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors SerializationException() public SerializationException() SerializationException(string?) public SerializationException(string? message) Parameters message string SerializationException(string?, Exception?) public SerializationException(string? message, Exception? inner) Parameters message string inner Exception"
  },
  "api/MarymoorStudios.Core.Serialization.SerializationExceptionSerializer.html": {
    "href": "api/MarymoorStudios.Core.Serialization.SerializationExceptionSerializer.html",
    "title": "Class SerializationExceptionSerializer",
    "summary": "Class SerializationExceptionSerializer Namespace MarymoorStudios.Core.Serialization Assembly MarymoorStudios.Core.Serialization.dll public sealed class SerializationExceptionSerializer : Serializer<SerializationException?>, IDerivedSerializer<SerializationException?>, IDerivedSerializer Inheritance object Serializer Serializer<SerializationException> SerializationExceptionSerializer Implements IDerivedSerializer<SerializationException> IDerivedSerializer Inherited Members Serializer<SerializationException>.Default Serializer.Register(Type, Type) Serializer.TrySizeOfDerived<TSuper>(SerializationContext, in TSuper, out int) Serializer.TryWriteDerived<TSuper>(SerializationContext, ref RowBuffer, in TSuper) Serializer.Slice(TypeId, ref TypeId, SerializationContext, ref ReadOnlyRowBuffer) Serializer.Dice(int, SerializationContext, ref ReadOnlyRowBuffer) Serializer.TryReadDerived<TSuper>(TypeId, SerializationContext, ref ReadOnlyRowBuffer, out TSuper) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors SerializationExceptionSerializer() public SerializationExceptionSerializer() Properties TypeId public static TypeId TypeId { get; } Property Value TypeId Methods GetTypeId() public override TypeId GetTypeId() Returns TypeId SizeOf(SerializationContext, in SerializationException?) public override int SizeOf(SerializationContext context, in SerializationException? value) Parameters context SerializationContext value SerializationException Returns int SizeOfSegment(SerializationContext, in SerializationException) public static int SizeOfSegment(SerializationContext context, in SerializationException value) Parameters context SerializationContext value SerializationException Returns int TryRead(SerializationContext, ref ReadOnlyRowBuffer, out SerializationException?) public override bool TryRead(SerializationContext context, ref ReadOnlyRowBuffer buffer, out SerializationException? value) Parameters context SerializationContext buffer ReadOnlyRowBuffer value SerializationException Returns bool TryReadSegment(SerializationContext, ref ReadOnlyRowBuffer) public static bool TryReadSegment(SerializationContext context, ref ReadOnlyRowBuffer buffer) Parameters context SerializationContext buffer ReadOnlyRowBuffer Returns bool Write(SerializationContext, ref RowBuffer, in SerializationException?) public override void Write(SerializationContext context, ref RowBuffer buffer, in SerializationException? value) Parameters context SerializationContext buffer RowBuffer value SerializationException WriteSegment(SerializationContext, ref RowBuffer, in SerializationException) public static void WriteSegment(SerializationContext context, ref RowBuffer buffer, in SerializationException value) Parameters context SerializationContext buffer RowBuffer value SerializationException"
  },
  "api/MarymoorStudios.Core.Serialization.System.ArraySerializer-1.html": {
    "href": "api/MarymoorStudios.Core.Serialization.System.ArraySerializer-1.html",
    "title": "Class ArraySerializer<T>",
    "summary": "Class ArraySerializer<T> Namespace MarymoorStudios.Core.Serialization.System Assembly MarymoorStudios.Core.Serialization.dll public sealed class ArraySerializer<T> : Serializer<T[]?> Type Parameters T Inheritance object Serializer Serializer<T[]> ArraySerializer<T> Inherited Members Serializer<T[]>.SizeOf(SerializationContext, in T[]) Serializer<T[]>.Write(SerializationContext, ref RowBuffer, in T[]) Serializer<T[]>.TryRead(SerializationContext, ref ReadOnlyRowBuffer, out T[]) Serializer<T[]>.Default Serializer.Register(Type, Type) Serializer.TrySizeOfDerived<TSuper>(SerializationContext, in TSuper, out int) Serializer.TryWriteDerived<TSuper>(SerializationContext, ref RowBuffer, in TSuper) Serializer.Slice(TypeId, ref TypeId, SerializationContext, ref ReadOnlyRowBuffer) Serializer.Dice(int, SerializationContext, ref ReadOnlyRowBuffer) Serializer.TryReadDerived<TSuper>(TypeId, SerializationContext, ref ReadOnlyRowBuffer, out TSuper) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors ArraySerializer() public ArraySerializer() Properties TypeId public static TypeId TypeId { get; } Property Value TypeId Methods GetTypeId() public override TypeId GetTypeId() Returns TypeId SizeOf(SerializationContext, in T[]?) public override int SizeOf(SerializationContext context, in T[]? value) Parameters context SerializationContext value T[] Returns int TryRead(SerializationContext, ref ReadOnlyRowBuffer, out T[]?) public override bool TryRead(SerializationContext context, ref ReadOnlyRowBuffer buffer, out T[]? value) Parameters context SerializationContext buffer ReadOnlyRowBuffer value T[] Returns bool Write(SerializationContext, ref RowBuffer, in T[]?) public override void Write(SerializationContext context, ref RowBuffer buffer, in T[]? value) Parameters context SerializationContext buffer RowBuffer value T[]"
  },
  "api/MarymoorStudios.Core.Serialization.System.BooleanSerializer.html": {
    "href": "api/MarymoorStudios.Core.Serialization.System.BooleanSerializer.html",
    "title": "Class BooleanSerializer",
    "summary": "Class BooleanSerializer Namespace MarymoorStudios.Core.Serialization.System Assembly MarymoorStudios.Core.Serialization.dll public sealed class BooleanSerializer : Serializer<bool> Inheritance object Serializer Serializer<bool> BooleanSerializer Inherited Members Serializer<bool>.Default Serializer.Register(Type, Type) Serializer.TrySizeOfDerived<TSuper>(SerializationContext, in TSuper, out int) Serializer.TryWriteDerived<TSuper>(SerializationContext, ref RowBuffer, in TSuper) Serializer.Slice(TypeId, ref TypeId, SerializationContext, ref ReadOnlyRowBuffer) Serializer.Dice(int, SerializationContext, ref ReadOnlyRowBuffer) Serializer.TryReadDerived<TSuper>(TypeId, SerializationContext, ref ReadOnlyRowBuffer, out TSuper) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors BooleanSerializer() public BooleanSerializer() Properties TypeId public static TypeId TypeId { get; } Property Value TypeId Methods GetTypeId() public override TypeId GetTypeId() Returns TypeId SizeOf(SerializationContext, in bool) public override int SizeOf(SerializationContext context, in bool value) Parameters context SerializationContext value bool Returns int TryRead(SerializationContext, ref ReadOnlyRowBuffer, out bool) public override bool TryRead(SerializationContext context, ref ReadOnlyRowBuffer buffer, out bool value) Parameters context SerializationContext buffer ReadOnlyRowBuffer value bool Returns bool Write(SerializationContext, ref RowBuffer, in bool) public override void Write(SerializationContext context, ref RowBuffer buffer, in bool value) Parameters context SerializationContext buffer RowBuffer value bool"
  },
  "api/MarymoorStudios.Core.Serialization.System.CollectionsSerializer-1.html": {
    "href": "api/MarymoorStudios.Core.Serialization.System.CollectionsSerializer-1.html",
    "title": "Class CollectionsSerializer<T>",
    "summary": "Class CollectionsSerializer<T> Namespace MarymoorStudios.Core.Serialization.System Assembly MarymoorStudios.Core.Serialization.dll public static class CollectionsSerializer<T> Type Parameters T Inheritance object CollectionsSerializer<T> Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods SizeOf(SerializationContext, bool, in ReadOnlySpan<T>) public static int SizeOf(SerializationContext context, bool isNull, in ReadOnlySpan<T> value) Parameters context SerializationContext isNull bool value ReadOnlySpan<T> Returns int TryRead<TCollection>(SerializationContext, ref ReadOnlyRowBuffer, Func<int, TCollection>, Func<TCollection, Span<T>>, out TCollection) public static bool TryRead<TCollection>(SerializationContext context, ref ReadOnlyRowBuffer buffer, Func<int, TCollection> alloc, Func<TCollection, Span<T>> asSpan, out TCollection value) where TCollection : allows ref struct Parameters context SerializationContext buffer ReadOnlyRowBuffer alloc Func<int, TCollection> asSpan Func<TCollection, Span<T>> value TCollection Returns bool Type Parameters TCollection Write(SerializationContext, ref RowBuffer, bool, in ReadOnlySpan<T>) public static void Write(SerializationContext context, ref RowBuffer buffer, bool isNull, in ReadOnlySpan<T> value) Parameters context SerializationContext buffer RowBuffer isNull bool value ReadOnlySpan<T>"
  },
  "api/MarymoorStudios.Core.Serialization.System.DateTimeSerializer.html": {
    "href": "api/MarymoorStudios.Core.Serialization.System.DateTimeSerializer.html",
    "title": "Class DateTimeSerializer",
    "summary": "Class DateTimeSerializer Namespace MarymoorStudios.Core.Serialization.System Assembly MarymoorStudios.Core.Serialization.dll public sealed class DateTimeSerializer : Serializer<DateTime> Inheritance object Serializer Serializer<DateTime> DateTimeSerializer Inherited Members Serializer<DateTime>.Default Serializer.Register(Type, Type) Serializer.TrySizeOfDerived<TSuper>(SerializationContext, in TSuper, out int) Serializer.TryWriteDerived<TSuper>(SerializationContext, ref RowBuffer, in TSuper) Serializer.Slice(TypeId, ref TypeId, SerializationContext, ref ReadOnlyRowBuffer) Serializer.Dice(int, SerializationContext, ref ReadOnlyRowBuffer) Serializer.TryReadDerived<TSuper>(TypeId, SerializationContext, ref ReadOnlyRowBuffer, out TSuper) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors DateTimeSerializer() public DateTimeSerializer() Properties TypeId public static TypeId TypeId { get; } Property Value TypeId Methods GetTypeId() public override TypeId GetTypeId() Returns TypeId SizeOf(SerializationContext, in DateTime) public override int SizeOf(SerializationContext context, in DateTime value) Parameters context SerializationContext value DateTime Returns int TryRead(SerializationContext, ref ReadOnlyRowBuffer, out DateTime) public override bool TryRead(SerializationContext context, ref ReadOnlyRowBuffer buffer, out DateTime value) Parameters context SerializationContext buffer ReadOnlyRowBuffer value DateTime Returns bool Write(SerializationContext, ref RowBuffer, in DateTime) public override void Write(SerializationContext context, ref RowBuffer buffer, in DateTime value) Parameters context SerializationContext buffer RowBuffer value DateTime"
  },
  "api/MarymoorStudios.Core.Serialization.System.DecimalSerializer.html": {
    "href": "api/MarymoorStudios.Core.Serialization.System.DecimalSerializer.html",
    "title": "Class DecimalSerializer",
    "summary": "Class DecimalSerializer Namespace MarymoorStudios.Core.Serialization.System Assembly MarymoorStudios.Core.Serialization.dll public sealed class DecimalSerializer : Serializer<decimal> Inheritance object Serializer Serializer<decimal> DecimalSerializer Inherited Members Serializer<decimal>.Default Serializer.Register(Type, Type) Serializer.TrySizeOfDerived<TSuper>(SerializationContext, in TSuper, out int) Serializer.TryWriteDerived<TSuper>(SerializationContext, ref RowBuffer, in TSuper) Serializer.Slice(TypeId, ref TypeId, SerializationContext, ref ReadOnlyRowBuffer) Serializer.Dice(int, SerializationContext, ref ReadOnlyRowBuffer) Serializer.TryReadDerived<TSuper>(TypeId, SerializationContext, ref ReadOnlyRowBuffer, out TSuper) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors DecimalSerializer() public DecimalSerializer() Properties TypeId public static TypeId TypeId { get; } Property Value TypeId Methods GetTypeId() public override TypeId GetTypeId() Returns TypeId SizeOf(SerializationContext, in decimal) public override int SizeOf(SerializationContext context, in decimal value) Parameters context SerializationContext value decimal Returns int TryRead(SerializationContext, ref ReadOnlyRowBuffer, out decimal) public override bool TryRead(SerializationContext context, ref ReadOnlyRowBuffer buffer, out decimal value) Parameters context SerializationContext buffer ReadOnlyRowBuffer value decimal Returns bool Write(SerializationContext, ref RowBuffer, in decimal) public override void Write(SerializationContext context, ref RowBuffer buffer, in decimal value) Parameters context SerializationContext buffer RowBuffer value decimal"
  },
  "api/MarymoorStudios.Core.Serialization.System.DefaultSerializationContext.html": {
    "href": "api/MarymoorStudios.Core.Serialization.System.DefaultSerializationContext.html",
    "title": "Class DefaultSerializationContext",
    "summary": "Class DefaultSerializationContext Namespace MarymoorStudios.Core.Serialization.System Assembly MarymoorStudios.Core.Serialization.dll Default SerializationContext that does nothing. public sealed class DefaultSerializationContext : SerializationContext Inheritance object SerializationContext DefaultSerializationContext Inherited Members SerializationContext.UpLevelVisitor object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors DefaultSerializationContext() public DefaultSerializationContext() Fields Instance public static readonly DefaultSerializationContext Instance Field Value DefaultSerializationContext"
  },
  "api/MarymoorStudios.Core.Serialization.System.ExceptionSerializer.html": {
    "href": "api/MarymoorStudios.Core.Serialization.System.ExceptionSerializer.html",
    "title": "Class ExceptionSerializer",
    "summary": "Class ExceptionSerializer Namespace MarymoorStudios.Core.Serialization.System Assembly MarymoorStudios.Core.Serialization.dll public sealed class ExceptionSerializer : Serializer<Exception?>, IDerivedSerializer<Exception?>, IDerivedSerializer Inheritance object Serializer Serializer<Exception> ExceptionSerializer Implements IDerivedSerializer<Exception> IDerivedSerializer Inherited Members Serializer<Exception>.Default Serializer.Register(Type, Type) Serializer.TrySizeOfDerived<TSuper>(SerializationContext, in TSuper, out int) Serializer.TryWriteDerived<TSuper>(SerializationContext, ref RowBuffer, in TSuper) Serializer.Slice(TypeId, ref TypeId, SerializationContext, ref ReadOnlyRowBuffer) Serializer.Dice(int, SerializationContext, ref ReadOnlyRowBuffer) Serializer.TryReadDerived<TSuper>(TypeId, SerializationContext, ref ReadOnlyRowBuffer, out TSuper) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors ExceptionSerializer() public ExceptionSerializer() Properties TypeId public static TypeId TypeId { get; } Property Value TypeId Methods GetTypeId() public override TypeId GetTypeId() Returns TypeId SizeOf(SerializationContext, in Exception?) public override int SizeOf(SerializationContext context, in Exception? value) Parameters context SerializationContext value Exception Returns int SizeOfSegment(SerializationContext, in Exception) public static int SizeOfSegment(SerializationContext context, in Exception value) Parameters context SerializationContext value Exception Returns int TryRead(SerializationContext, ref ReadOnlyRowBuffer, out Exception?) public override bool TryRead(SerializationContext context, ref ReadOnlyRowBuffer buffer, out Exception? value) Parameters context SerializationContext buffer ReadOnlyRowBuffer value Exception Returns bool TryReadSegment(SerializationContext, ref ReadOnlyRowBuffer, out string?) public static bool TryReadSegment(SerializationContext context, ref ReadOnlyRowBuffer buffer, out string? memberMessage) Parameters context SerializationContext buffer ReadOnlyRowBuffer memberMessage string Returns bool Write(SerializationContext, ref RowBuffer, in Exception?) public override void Write(SerializationContext context, ref RowBuffer buffer, in Exception? value) Parameters context SerializationContext buffer RowBuffer value Exception WriteSegment(SerializationContext, ref RowBuffer, in Exception) public static void WriteSegment(SerializationContext context, ref RowBuffer buffer, in Exception value) Parameters context SerializationContext buffer RowBuffer value Exception"
  },
  "api/MarymoorStudios.Core.Serialization.System.Float32Serializer.html": {
    "href": "api/MarymoorStudios.Core.Serialization.System.Float32Serializer.html",
    "title": "Class Float32Serializer",
    "summary": "Class Float32Serializer Namespace MarymoorStudios.Core.Serialization.System Assembly MarymoorStudios.Core.Serialization.dll public sealed class Float32Serializer : Serializer<float> Inheritance object Serializer Serializer<float> Float32Serializer Inherited Members Serializer<float>.Default Serializer.Register(Type, Type) Serializer.TrySizeOfDerived<TSuper>(SerializationContext, in TSuper, out int) Serializer.TryWriteDerived<TSuper>(SerializationContext, ref RowBuffer, in TSuper) Serializer.Slice(TypeId, ref TypeId, SerializationContext, ref ReadOnlyRowBuffer) Serializer.Dice(int, SerializationContext, ref ReadOnlyRowBuffer) Serializer.TryReadDerived<TSuper>(TypeId, SerializationContext, ref ReadOnlyRowBuffer, out TSuper) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors Float32Serializer() public Float32Serializer() Properties TypeId public static TypeId TypeId { get; } Property Value TypeId Methods GetTypeId() public override TypeId GetTypeId() Returns TypeId SizeOf(SerializationContext, in float) public override int SizeOf(SerializationContext context, in float value) Parameters context SerializationContext value float Returns int TryRead(SerializationContext, ref ReadOnlyRowBuffer, out float) public override bool TryRead(SerializationContext context, ref ReadOnlyRowBuffer buffer, out float value) Parameters context SerializationContext buffer ReadOnlyRowBuffer value float Returns bool Write(SerializationContext, ref RowBuffer, in float) public override void Write(SerializationContext context, ref RowBuffer buffer, in float value) Parameters context SerializationContext buffer RowBuffer value float"
  },
  "api/MarymoorStudios.Core.Serialization.System.Float64Serializer.html": {
    "href": "api/MarymoorStudios.Core.Serialization.System.Float64Serializer.html",
    "title": "Class Float64Serializer",
    "summary": "Class Float64Serializer Namespace MarymoorStudios.Core.Serialization.System Assembly MarymoorStudios.Core.Serialization.dll public sealed class Float64Serializer : Serializer<double> Inheritance object Serializer Serializer<double> Float64Serializer Inherited Members Serializer<double>.Default Serializer.Register(Type, Type) Serializer.TrySizeOfDerived<TSuper>(SerializationContext, in TSuper, out int) Serializer.TryWriteDerived<TSuper>(SerializationContext, ref RowBuffer, in TSuper) Serializer.Slice(TypeId, ref TypeId, SerializationContext, ref ReadOnlyRowBuffer) Serializer.Dice(int, SerializationContext, ref ReadOnlyRowBuffer) Serializer.TryReadDerived<TSuper>(TypeId, SerializationContext, ref ReadOnlyRowBuffer, out TSuper) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors Float64Serializer() public Float64Serializer() Properties TypeId public static TypeId TypeId { get; } Property Value TypeId Methods GetTypeId() public override TypeId GetTypeId() Returns TypeId SizeOf(SerializationContext, in double) public override int SizeOf(SerializationContext context, in double value) Parameters context SerializationContext value double Returns int TryRead(SerializationContext, ref ReadOnlyRowBuffer, out double) public override bool TryRead(SerializationContext context, ref ReadOnlyRowBuffer buffer, out double value) Parameters context SerializationContext buffer ReadOnlyRowBuffer value double Returns bool Write(SerializationContext, ref RowBuffer, in double) public override void Write(SerializationContext context, ref RowBuffer buffer, in double value) Parameters context SerializationContext buffer RowBuffer value double"
  },
  "api/MarymoorStudios.Core.Serialization.System.GuidSerializer.html": {
    "href": "api/MarymoorStudios.Core.Serialization.System.GuidSerializer.html",
    "title": "Class GuidSerializer",
    "summary": "Class GuidSerializer Namespace MarymoorStudios.Core.Serialization.System Assembly MarymoorStudios.Core.Serialization.dll public sealed class GuidSerializer : Serializer<Guid> Inheritance object Serializer Serializer<Guid> GuidSerializer Inherited Members Serializer<Guid>.Default Serializer.Register(Type, Type) Serializer.TrySizeOfDerived<TSuper>(SerializationContext, in TSuper, out int) Serializer.TryWriteDerived<TSuper>(SerializationContext, ref RowBuffer, in TSuper) Serializer.Slice(TypeId, ref TypeId, SerializationContext, ref ReadOnlyRowBuffer) Serializer.Dice(int, SerializationContext, ref ReadOnlyRowBuffer) Serializer.TryReadDerived<TSuper>(TypeId, SerializationContext, ref ReadOnlyRowBuffer, out TSuper) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors GuidSerializer() public GuidSerializer() Properties TypeId public static TypeId TypeId { get; } Property Value TypeId Methods GetTypeId() public override TypeId GetTypeId() Returns TypeId SizeOf(SerializationContext, in Guid) public override int SizeOf(SerializationContext context, in Guid value) Parameters context SerializationContext value Guid Returns int TryRead(SerializationContext, ref ReadOnlyRowBuffer, out Guid) public override bool TryRead(SerializationContext context, ref ReadOnlyRowBuffer buffer, out Guid value) Parameters context SerializationContext buffer ReadOnlyRowBuffer value Guid Returns bool Write(SerializationContext, ref RowBuffer, in Guid) public override void Write(SerializationContext context, ref RowBuffer buffer, in Guid value) Parameters context SerializationContext buffer RowBuffer value Guid"
  },
  "api/MarymoorStudios.Core.Serialization.System.IDerivedSerializer-1.html": {
    "href": "api/MarymoorStudios.Core.Serialization.System.IDerivedSerializer-1.html",
    "title": "Interface IDerivedSerializer<T>",
    "summary": "Interface IDerivedSerializer<T> Namespace MarymoorStudios.Core.Serialization.System Assembly MarymoorStudios.Core.Serialization.dll public interface IDerivedSerializer<T> : IDerivedSerializer where T : class? Type Parameters T"
  },
  "api/MarymoorStudios.Core.Serialization.System.IDerivedSerializer.html": {
    "href": "api/MarymoorStudios.Core.Serialization.System.IDerivedSerializer.html",
    "title": "Interface IDerivedSerializer",
    "summary": "Interface IDerivedSerializer Namespace MarymoorStudios.Core.Serialization.System Assembly MarymoorStudios.Core.Serialization.dll public interface IDerivedSerializer"
  },
  "api/MarymoorStudios.Core.Serialization.System.IEnumerableSerializer-1.html": {
    "href": "api/MarymoorStudios.Core.Serialization.System.IEnumerableSerializer-1.html",
    "title": "Class IEnumerableSerializer<T>",
    "summary": "Class IEnumerableSerializer<T> Namespace MarymoorStudios.Core.Serialization.System Assembly MarymoorStudios.Core.Serialization.dll public sealed class IEnumerableSerializer<T> : Serializer<IEnumerable<T>?> Type Parameters T Inheritance object Serializer Serializer<IEnumerable<T>> IEnumerableSerializer<T> Inherited Members Serializer<IEnumerable<T>>.Default Serializer.Register(Type, Type) Serializer.TrySizeOfDerived<TSuper>(SerializationContext, in TSuper, out int) Serializer.TryWriteDerived<TSuper>(SerializationContext, ref RowBuffer, in TSuper) Serializer.Slice(TypeId, ref TypeId, SerializationContext, ref ReadOnlyRowBuffer) Serializer.Dice(int, SerializationContext, ref ReadOnlyRowBuffer) Serializer.TryReadDerived<TSuper>(TypeId, SerializationContext, ref ReadOnlyRowBuffer, out TSuper) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors IEnumerableSerializer() public IEnumerableSerializer() Properties TypeId public static TypeId TypeId { get; } Property Value TypeId Methods GetTypeId() public override TypeId GetTypeId() Returns TypeId SizeOf(SerializationContext, in IEnumerable<T>?) public override int SizeOf(SerializationContext context, in IEnumerable<T>? value) Parameters context SerializationContext value IEnumerable<T> Returns int TryRead(SerializationContext, ref ReadOnlyRowBuffer, out IEnumerable<T>?) public override bool TryRead(SerializationContext context, ref ReadOnlyRowBuffer buffer, out IEnumerable<T>? value) Parameters context SerializationContext buffer ReadOnlyRowBuffer value IEnumerable<T> Returns bool Write(SerializationContext, ref RowBuffer, in IEnumerable<T>?) public override void Write(SerializationContext context, ref RowBuffer buffer, in IEnumerable<T>? value) Parameters context SerializationContext buffer RowBuffer value IEnumerable<T>"
  },
  "api/MarymoorStudios.Core.Serialization.System.IPAddressSerializer.html": {
    "href": "api/MarymoorStudios.Core.Serialization.System.IPAddressSerializer.html",
    "title": "Class IPAddressSerializer",
    "summary": "Class IPAddressSerializer Namespace MarymoorStudios.Core.Serialization.System Assembly MarymoorStudios.Core.Serialization.dll public sealed class IPAddressSerializer : Serializer<IPAddress?>, IDerivedSerializer<IPAddress?>, IDerivedSerializer Inheritance object Serializer Serializer<IPAddress> IPAddressSerializer Implements IDerivedSerializer<IPAddress> IDerivedSerializer Inherited Members Serializer<IPAddress>.Default Serializer.Register(Type, Type) Serializer.TrySizeOfDerived<TSuper>(SerializationContext, in TSuper, out int) Serializer.TryWriteDerived<TSuper>(SerializationContext, ref RowBuffer, in TSuper) Serializer.Slice(TypeId, ref TypeId, SerializationContext, ref ReadOnlyRowBuffer) Serializer.Dice(int, SerializationContext, ref ReadOnlyRowBuffer) Serializer.TryReadDerived<TSuper>(TypeId, SerializationContext, ref ReadOnlyRowBuffer, out TSuper) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors IPAddressSerializer() public IPAddressSerializer() Properties TypeId public static TypeId TypeId { get; } Property Value TypeId Methods GetTypeId() public override TypeId GetTypeId() Returns TypeId SizeOf(SerializationContext, in IPAddress?) public override int SizeOf(SerializationContext context, in IPAddress? value) Parameters context SerializationContext value IPAddress Returns int SizeOfSegment(SerializationContext, in IPAddress) public static int SizeOfSegment(SerializationContext context, in IPAddress value) Parameters context SerializationContext value IPAddress Returns int TryRead(SerializationContext, ref ReadOnlyRowBuffer, out IPAddress?) public override bool TryRead(SerializationContext context, ref ReadOnlyRowBuffer buffer, out IPAddress? value) Parameters context SerializationContext buffer ReadOnlyRowBuffer value IPAddress Returns bool TryReadSegment(SerializationContext, ref ReadOnlyRowBuffer, out IPAddress?) public static bool TryReadSegment(SerializationContext context, ref ReadOnlyRowBuffer buffer, out IPAddress? address) Parameters context SerializationContext buffer ReadOnlyRowBuffer address IPAddress Returns bool Write(SerializationContext, ref RowBuffer, in IPAddress?) public override void Write(SerializationContext context, ref RowBuffer buffer, in IPAddress? value) Parameters context SerializationContext buffer RowBuffer value IPAddress WriteSegment(SerializationContext, ref RowBuffer, in IPAddress) public static void WriteSegment(SerializationContext context, ref RowBuffer buffer, in IPAddress value) Parameters context SerializationContext buffer RowBuffer value IPAddress"
  },
  "api/MarymoorStudios.Core.Serialization.System.IPEndPointSerializer.html": {
    "href": "api/MarymoorStudios.Core.Serialization.System.IPEndPointSerializer.html",
    "title": "Class IPEndPointSerializer",
    "summary": "Class IPEndPointSerializer Namespace MarymoorStudios.Core.Serialization.System Assembly MarymoorStudios.Core.Serialization.dll public sealed class IPEndPointSerializer : Serializer<IPEndPoint?>, IDerivedSerializer<IPEndPoint?>, IDerivedSerializer Inheritance object Serializer Serializer<IPEndPoint> IPEndPointSerializer Implements IDerivedSerializer<IPEndPoint> IDerivedSerializer Inherited Members Serializer<IPEndPoint>.Default Serializer.Register(Type, Type) Serializer.TrySizeOfDerived<TSuper>(SerializationContext, in TSuper, out int) Serializer.TryWriteDerived<TSuper>(SerializationContext, ref RowBuffer, in TSuper) Serializer.Slice(TypeId, ref TypeId, SerializationContext, ref ReadOnlyRowBuffer) Serializer.Dice(int, SerializationContext, ref ReadOnlyRowBuffer) Serializer.TryReadDerived<TSuper>(TypeId, SerializationContext, ref ReadOnlyRowBuffer, out TSuper) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors IPEndPointSerializer() public IPEndPointSerializer() Properties TypeId public static TypeId TypeId { get; } Property Value TypeId Methods GetTypeId() public override TypeId GetTypeId() Returns TypeId SizeOf(SerializationContext, in IPEndPoint?) public override int SizeOf(SerializationContext context, in IPEndPoint? value) Parameters context SerializationContext value IPEndPoint Returns int SizeOfSegment(SerializationContext, in IPEndPoint) public static int SizeOfSegment(SerializationContext context, in IPEndPoint value) Parameters context SerializationContext value IPEndPoint Returns int TryRead(SerializationContext, ref ReadOnlyRowBuffer, out IPEndPoint?) public override bool TryRead(SerializationContext context, ref ReadOnlyRowBuffer buffer, out IPEndPoint? value) Parameters context SerializationContext buffer ReadOnlyRowBuffer value IPEndPoint Returns bool TryReadSegment(SerializationContext, ref ReadOnlyRowBuffer, out IPAddress, out int) public static bool TryReadSegment(SerializationContext context, ref ReadOnlyRowBuffer buffer, out IPAddress address, out int port) Parameters context SerializationContext buffer ReadOnlyRowBuffer address IPAddress port int Returns bool Write(SerializationContext, ref RowBuffer, in IPEndPoint?) public override void Write(SerializationContext context, ref RowBuffer buffer, in IPEndPoint? value) Parameters context SerializationContext buffer RowBuffer value IPEndPoint WriteSegment(SerializationContext, ref RowBuffer, in IPEndPoint) public static void WriteSegment(SerializationContext context, ref RowBuffer buffer, in IPEndPoint value) Parameters context SerializationContext buffer RowBuffer value IPEndPoint"
  },
  "api/MarymoorStudios.Core.Serialization.System.Int16Serializer.html": {
    "href": "api/MarymoorStudios.Core.Serialization.System.Int16Serializer.html",
    "title": "Class Int16Serializer",
    "summary": "Class Int16Serializer Namespace MarymoorStudios.Core.Serialization.System Assembly MarymoorStudios.Core.Serialization.dll public sealed class Int16Serializer : Serializer<short> Inheritance object Serializer Serializer<short> Int16Serializer Inherited Members Serializer<short>.Default Serializer.Register(Type, Type) Serializer.TrySizeOfDerived<TSuper>(SerializationContext, in TSuper, out int) Serializer.TryWriteDerived<TSuper>(SerializationContext, ref RowBuffer, in TSuper) Serializer.Slice(TypeId, ref TypeId, SerializationContext, ref ReadOnlyRowBuffer) Serializer.Dice(int, SerializationContext, ref ReadOnlyRowBuffer) Serializer.TryReadDerived<TSuper>(TypeId, SerializationContext, ref ReadOnlyRowBuffer, out TSuper) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors Int16Serializer() public Int16Serializer() Properties TypeId public static TypeId TypeId { get; } Property Value TypeId Methods GetTypeId() public override TypeId GetTypeId() Returns TypeId SizeOf(SerializationContext, in short) public override int SizeOf(SerializationContext context, in short value) Parameters context SerializationContext value short Returns int TryRead(SerializationContext, ref ReadOnlyRowBuffer, out short) public override bool TryRead(SerializationContext context, ref ReadOnlyRowBuffer buffer, out short value) Parameters context SerializationContext buffer ReadOnlyRowBuffer value short Returns bool Write(SerializationContext, ref RowBuffer, in short) public override void Write(SerializationContext context, ref RowBuffer buffer, in short value) Parameters context SerializationContext buffer RowBuffer value short"
  },
  "api/MarymoorStudios.Core.Serialization.System.Int32Serializer.html": {
    "href": "api/MarymoorStudios.Core.Serialization.System.Int32Serializer.html",
    "title": "Class Int32Serializer",
    "summary": "Class Int32Serializer Namespace MarymoorStudios.Core.Serialization.System Assembly MarymoorStudios.Core.Serialization.dll public sealed class Int32Serializer : Serializer<int> Inheritance object Serializer Serializer<int> Int32Serializer Inherited Members Serializer<int>.Default Serializer.Register(Type, Type) Serializer.TrySizeOfDerived<TSuper>(SerializationContext, in TSuper, out int) Serializer.TryWriteDerived<TSuper>(SerializationContext, ref RowBuffer, in TSuper) Serializer.Slice(TypeId, ref TypeId, SerializationContext, ref ReadOnlyRowBuffer) Serializer.Dice(int, SerializationContext, ref ReadOnlyRowBuffer) Serializer.TryReadDerived<TSuper>(TypeId, SerializationContext, ref ReadOnlyRowBuffer, out TSuper) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors Int32Serializer() public Int32Serializer() Properties TypeId public static TypeId TypeId { get; } Property Value TypeId Methods GetTypeId() public override TypeId GetTypeId() Returns TypeId SizeOf(SerializationContext, in int) public override int SizeOf(SerializationContext context, in int value) Parameters context SerializationContext value int Returns int TryRead(SerializationContext, ref ReadOnlyRowBuffer, out int) public override bool TryRead(SerializationContext context, ref ReadOnlyRowBuffer buffer, out int value) Parameters context SerializationContext buffer ReadOnlyRowBuffer value int Returns bool Write(SerializationContext, ref RowBuffer, in int) public override void Write(SerializationContext context, ref RowBuffer buffer, in int value) Parameters context SerializationContext buffer RowBuffer value int"
  },
  "api/MarymoorStudios.Core.Serialization.System.Int64Serializer.html": {
    "href": "api/MarymoorStudios.Core.Serialization.System.Int64Serializer.html",
    "title": "Class Int64Serializer",
    "summary": "Class Int64Serializer Namespace MarymoorStudios.Core.Serialization.System Assembly MarymoorStudios.Core.Serialization.dll public sealed class Int64Serializer : Serializer<long> Inheritance object Serializer Serializer<long> Int64Serializer Inherited Members Serializer<long>.Default Serializer.Register(Type, Type) Serializer.TrySizeOfDerived<TSuper>(SerializationContext, in TSuper, out int) Serializer.TryWriteDerived<TSuper>(SerializationContext, ref RowBuffer, in TSuper) Serializer.Slice(TypeId, ref TypeId, SerializationContext, ref ReadOnlyRowBuffer) Serializer.Dice(int, SerializationContext, ref ReadOnlyRowBuffer) Serializer.TryReadDerived<TSuper>(TypeId, SerializationContext, ref ReadOnlyRowBuffer, out TSuper) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors Int64Serializer() public Int64Serializer() Properties TypeId public static TypeId TypeId { get; } Property Value TypeId Methods GetTypeId() public override TypeId GetTypeId() Returns TypeId SizeOf(SerializationContext, in long) public override int SizeOf(SerializationContext context, in long value) Parameters context SerializationContext value long Returns int TryRead(SerializationContext, ref ReadOnlyRowBuffer, out long) public override bool TryRead(SerializationContext context, ref ReadOnlyRowBuffer buffer, out long value) Parameters context SerializationContext buffer ReadOnlyRowBuffer value long Returns bool Write(SerializationContext, ref RowBuffer, in long) public override void Write(SerializationContext context, ref RowBuffer buffer, in long value) Parameters context SerializationContext buffer RowBuffer value long"
  },
  "api/MarymoorStudios.Core.Serialization.System.Int8Serializer.html": {
    "href": "api/MarymoorStudios.Core.Serialization.System.Int8Serializer.html",
    "title": "Class Int8Serializer",
    "summary": "Class Int8Serializer Namespace MarymoorStudios.Core.Serialization.System Assembly MarymoorStudios.Core.Serialization.dll public sealed class Int8Serializer : Serializer<sbyte> Inheritance object Serializer Serializer<sbyte> Int8Serializer Inherited Members Serializer<sbyte>.Default Serializer.Register(Type, Type) Serializer.TrySizeOfDerived<TSuper>(SerializationContext, in TSuper, out int) Serializer.TryWriteDerived<TSuper>(SerializationContext, ref RowBuffer, in TSuper) Serializer.Slice(TypeId, ref TypeId, SerializationContext, ref ReadOnlyRowBuffer) Serializer.Dice(int, SerializationContext, ref ReadOnlyRowBuffer) Serializer.TryReadDerived<TSuper>(TypeId, SerializationContext, ref ReadOnlyRowBuffer, out TSuper) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors Int8Serializer() public Int8Serializer() Properties TypeId public static TypeId TypeId { get; } Property Value TypeId Methods GetTypeId() public override TypeId GetTypeId() Returns TypeId SizeOf(SerializationContext, in sbyte) public override int SizeOf(SerializationContext context, in sbyte value) Parameters context SerializationContext value sbyte Returns int TryRead(SerializationContext, ref ReadOnlyRowBuffer, out sbyte) public override bool TryRead(SerializationContext context, ref ReadOnlyRowBuffer buffer, out sbyte value) Parameters context SerializationContext buffer ReadOnlyRowBuffer value sbyte Returns bool Write(SerializationContext, ref RowBuffer, in sbyte) public override void Write(SerializationContext context, ref RowBuffer buffer, in sbyte value) Parameters context SerializationContext buffer RowBuffer value sbyte"
  },
  "api/MarymoorStudios.Core.Serialization.System.ListSerializer-1.html": {
    "href": "api/MarymoorStudios.Core.Serialization.System.ListSerializer-1.html",
    "title": "Class ListSerializer<T>",
    "summary": "Class ListSerializer<T> Namespace MarymoorStudios.Core.Serialization.System Assembly MarymoorStudios.Core.Serialization.dll public sealed class ListSerializer<T> : Serializer<List<T>?> Type Parameters T Inheritance object Serializer Serializer<List<T>> ListSerializer<T> Inherited Members Serializer<List<T>>.Default Serializer.Register(Type, Type) Serializer.TrySizeOfDerived<TSuper>(SerializationContext, in TSuper, out int) Serializer.TryWriteDerived<TSuper>(SerializationContext, ref RowBuffer, in TSuper) Serializer.Slice(TypeId, ref TypeId, SerializationContext, ref ReadOnlyRowBuffer) Serializer.Dice(int, SerializationContext, ref ReadOnlyRowBuffer) Serializer.TryReadDerived<TSuper>(TypeId, SerializationContext, ref ReadOnlyRowBuffer, out TSuper) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors ListSerializer() public ListSerializer() Properties TypeId public static TypeId TypeId { get; } Property Value TypeId Methods GetTypeId() public override TypeId GetTypeId() Returns TypeId SizeOf(SerializationContext, in List<T>?) public override int SizeOf(SerializationContext context, in List<T>? value) Parameters context SerializationContext value List<T> Returns int TryRead(SerializationContext, ref ReadOnlyRowBuffer, out List<T>?) public override bool TryRead(SerializationContext context, ref ReadOnlyRowBuffer buffer, out List<T>? value) Parameters context SerializationContext buffer ReadOnlyRowBuffer value List<T> Returns bool Write(SerializationContext, ref RowBuffer, in List<T>?) public override void Write(SerializationContext context, ref RowBuffer buffer, in List<T>? value) Parameters context SerializationContext buffer RowBuffer value List<T>"
  },
  "api/MarymoorStudios.Core.Serialization.System.MemorySerializer-1.html": {
    "href": "api/MarymoorStudios.Core.Serialization.System.MemorySerializer-1.html",
    "title": "Class MemorySerializer<T>",
    "summary": "Class MemorySerializer<T> Namespace MarymoorStudios.Core.Serialization.System Assembly MarymoorStudios.Core.Serialization.dll public sealed class MemorySerializer<T> : Serializer<Memory<T>> Type Parameters T Inheritance object Serializer Serializer<Memory<T>> MemorySerializer<T> Inherited Members Serializer<Memory<T>>.Default Serializer.Register(Type, Type) Serializer.TrySizeOfDerived<TSuper>(SerializationContext, in TSuper, out int) Serializer.TryWriteDerived<TSuper>(SerializationContext, ref RowBuffer, in TSuper) Serializer.Slice(TypeId, ref TypeId, SerializationContext, ref ReadOnlyRowBuffer) Serializer.Dice(int, SerializationContext, ref ReadOnlyRowBuffer) Serializer.TryReadDerived<TSuper>(TypeId, SerializationContext, ref ReadOnlyRowBuffer, out TSuper) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors MemorySerializer() public MemorySerializer() Properties TypeId public static TypeId TypeId { get; } Property Value TypeId Methods GetTypeId() public override TypeId GetTypeId() Returns TypeId SizeOf(SerializationContext, in Memory<T>) public override int SizeOf(SerializationContext context, in Memory<T> value) Parameters context SerializationContext value Memory<T> Returns int TryRead(SerializationContext, ref ReadOnlyRowBuffer, out Memory<T>) public override bool TryRead(SerializationContext context, ref ReadOnlyRowBuffer buffer, out Memory<T> value) Parameters context SerializationContext buffer ReadOnlyRowBuffer value Memory<T> Returns bool Write(SerializationContext, ref RowBuffer, in Memory<T>) public override void Write(SerializationContext context, ref RowBuffer buffer, in Memory<T> value) Parameters context SerializationContext buffer RowBuffer value Memory<T>"
  },
  "api/MarymoorStudios.Core.Serialization.System.NullableSerializer-1.html": {
    "href": "api/MarymoorStudios.Core.Serialization.System.NullableSerializer-1.html",
    "title": "Class NullableSerializer<T>",
    "summary": "Class NullableSerializer<T> Namespace MarymoorStudios.Core.Serialization.System Assembly MarymoorStudios.Core.Serialization.dll public sealed class NullableSerializer<T> : Serializer<T?> where T : struct Type Parameters T Inheritance object Serializer Serializer<T?> NullableSerializer<T> Inherited Members Serializer<T?>.Default Serializer.Register(Type, Type) Serializer.TrySizeOfDerived<TSuper>(SerializationContext, in TSuper, out int) Serializer.TryWriteDerived<TSuper>(SerializationContext, ref RowBuffer, in TSuper) Serializer.Slice(TypeId, ref TypeId, SerializationContext, ref ReadOnlyRowBuffer) Serializer.Dice(int, SerializationContext, ref ReadOnlyRowBuffer) Serializer.TryReadDerived<TSuper>(TypeId, SerializationContext, ref ReadOnlyRowBuffer, out TSuper) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors NullableSerializer() public NullableSerializer() Properties TypeId public static TypeId TypeId { get; } Property Value TypeId Methods GetTypeId() public override TypeId GetTypeId() Returns TypeId SizeOf(SerializationContext, in T?) public override int SizeOf(SerializationContext context, in T? value) Parameters context SerializationContext value T? Returns int TryRead(SerializationContext, ref ReadOnlyRowBuffer, out T?) public override bool TryRead(SerializationContext context, ref ReadOnlyRowBuffer buffer, out T? value) Parameters context SerializationContext buffer ReadOnlyRowBuffer value T? Returns bool Write(SerializationContext, ref RowBuffer, in T?) public override void Write(SerializationContext context, ref RowBuffer buffer, in T? value) Parameters context SerializationContext buffer RowBuffer value T?"
  },
  "api/MarymoorStudios.Core.Serialization.System.ObjectSerializer.html": {
    "href": "api/MarymoorStudios.Core.Serialization.System.ObjectSerializer.html",
    "title": "Class ObjectSerializer",
    "summary": "Class ObjectSerializer Namespace MarymoorStudios.Core.Serialization.System Assembly MarymoorStudios.Core.Serialization.dll public sealed class ObjectSerializer : Serializer<object?>, IDerivedSerializer<object?>, IDerivedSerializer Inheritance object Serializer Serializer<object> ObjectSerializer Implements IDerivedSerializer<object> IDerivedSerializer Inherited Members Serializer<object>.Default Serializer.Register(Type, Type) Serializer.TrySizeOfDerived<TSuper>(SerializationContext, in TSuper, out int) Serializer.TryWriteDerived<TSuper>(SerializationContext, ref RowBuffer, in TSuper) Serializer.Slice(TypeId, ref TypeId, SerializationContext, ref ReadOnlyRowBuffer) Serializer.Dice(int, SerializationContext, ref ReadOnlyRowBuffer) Serializer.TryReadDerived<TSuper>(TypeId, SerializationContext, ref ReadOnlyRowBuffer, out TSuper) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors ObjectSerializer() public ObjectSerializer() Properties TypeId public static TypeId TypeId { get; } Property Value TypeId Methods GetTypeId() public override TypeId GetTypeId() Returns TypeId SizeOf(SerializationContext, in object?) public override int SizeOf(SerializationContext context, in object? value) Parameters context SerializationContext value object Returns int SizeOfSegment(SerializationContext, in object) public static int SizeOfSegment(SerializationContext context, in object value) Parameters context SerializationContext value object Returns int TryRead(SerializationContext, ref ReadOnlyRowBuffer, out object?) public override bool TryRead(SerializationContext context, ref ReadOnlyRowBuffer buffer, out object? value) Parameters context SerializationContext buffer ReadOnlyRowBuffer value object Returns bool TryReadSegment(SerializationContext, ref ReadOnlyRowBuffer) public static bool TryReadSegment(SerializationContext context, ref ReadOnlyRowBuffer buffer) Parameters context SerializationContext buffer ReadOnlyRowBuffer Returns bool Write(SerializationContext, ref RowBuffer, in object?) public override void Write(SerializationContext context, ref RowBuffer buffer, in object? value) Parameters context SerializationContext buffer RowBuffer value object WriteSegment(SerializationContext, ref RowBuffer, in object) public static void WriteSegment(SerializationContext context, ref RowBuffer buffer, in object value) Parameters context SerializationContext buffer RowBuffer value object"
  },
  "api/MarymoorStudios.Core.Serialization.System.OwnedMemSerializer-1.html": {
    "href": "api/MarymoorStudios.Core.Serialization.System.OwnedMemSerializer-1.html",
    "title": "Class OwnedMemSerializer<T>",
    "summary": "Class OwnedMemSerializer<T> Namespace MarymoorStudios.Core.Serialization.System Assembly MarymoorStudios.Core.Serialization.dll public sealed class OwnedMemSerializer<T> : Serializer<OwnedMem<T>> where T : unmanaged Type Parameters T Inheritance object Serializer Serializer<OwnedMem<T>> OwnedMemSerializer<T> Inherited Members Serializer<OwnedMem<T>>.Default Serializer.Register(Type, Type) Serializer.TrySizeOfDerived<TSuper>(SerializationContext, in TSuper, out int) Serializer.TryWriteDerived<TSuper>(SerializationContext, ref RowBuffer, in TSuper) Serializer.Slice(TypeId, ref TypeId, SerializationContext, ref ReadOnlyRowBuffer) Serializer.Dice(int, SerializationContext, ref ReadOnlyRowBuffer) Serializer.TryReadDerived<TSuper>(TypeId, SerializationContext, ref ReadOnlyRowBuffer, out TSuper) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors OwnedMemSerializer() public OwnedMemSerializer() Properties TypeId public static TypeId TypeId { get; } Property Value TypeId Methods GetTypeId() public override TypeId GetTypeId() Returns TypeId SizeOf(SerializationContext, in OwnedMem<T>) public override int SizeOf(SerializationContext context, in OwnedMem<T> value) Parameters context SerializationContext value OwnedMem<T> Returns int TryRead(SerializationContext, ref ReadOnlyRowBuffer, out OwnedMem<T>) public override bool TryRead(SerializationContext context, ref ReadOnlyRowBuffer buffer, out OwnedMem<T> value) Parameters context SerializationContext buffer ReadOnlyRowBuffer value OwnedMem<T> Returns bool Write(SerializationContext, ref RowBuffer, in OwnedMem<T>) public override void Write(SerializationContext context, ref RowBuffer buffer, in OwnedMem<T> value) Parameters context SerializationContext buffer RowBuffer value OwnedMem<T>"
  },
  "api/MarymoorStudios.Core.Serialization.System.ReadOnlyMemorySerializer-1.html": {
    "href": "api/MarymoorStudios.Core.Serialization.System.ReadOnlyMemorySerializer-1.html",
    "title": "Class ReadOnlyMemorySerializer<T>",
    "summary": "Class ReadOnlyMemorySerializer<T> Namespace MarymoorStudios.Core.Serialization.System Assembly MarymoorStudios.Core.Serialization.dll public sealed class ReadOnlyMemorySerializer<T> : Serializer<ReadOnlyMemory<T>> Type Parameters T Inheritance object Serializer Serializer<ReadOnlyMemory<T>> ReadOnlyMemorySerializer<T> Inherited Members Serializer<ReadOnlyMemory<T>>.Default Serializer.Register(Type, Type) Serializer.TrySizeOfDerived<TSuper>(SerializationContext, in TSuper, out int) Serializer.TryWriteDerived<TSuper>(SerializationContext, ref RowBuffer, in TSuper) Serializer.Slice(TypeId, ref TypeId, SerializationContext, ref ReadOnlyRowBuffer) Serializer.Dice(int, SerializationContext, ref ReadOnlyRowBuffer) Serializer.TryReadDerived<TSuper>(TypeId, SerializationContext, ref ReadOnlyRowBuffer, out TSuper) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors ReadOnlyMemorySerializer() public ReadOnlyMemorySerializer() Properties TypeId public static TypeId TypeId { get; } Property Value TypeId Methods GetTypeId() public override TypeId GetTypeId() Returns TypeId SizeOf(SerializationContext, in ReadOnlyMemory<T>) public override int SizeOf(SerializationContext context, in ReadOnlyMemory<T> value) Parameters context SerializationContext value ReadOnlyMemory<T> Returns int TryRead(SerializationContext, ref ReadOnlyRowBuffer, out ReadOnlyMemory<T>) public override bool TryRead(SerializationContext context, ref ReadOnlyRowBuffer buffer, out ReadOnlyMemory<T> value) Parameters context SerializationContext buffer ReadOnlyRowBuffer value ReadOnlyMemory<T> Returns bool Write(SerializationContext, ref RowBuffer, in ReadOnlyMemory<T>) public override void Write(SerializationContext context, ref RowBuffer buffer, in ReadOnlyMemory<T> value) Parameters context SerializationContext buffer RowBuffer value ReadOnlyMemory<T>"
  },
  "api/MarymoorStudios.Core.Serialization.System.ReadOnlyRowBuffer.html": {
    "href": "api/MarymoorStudios.Core.Serialization.System.ReadOnlyRowBuffer.html",
    "title": "Struct ReadOnlyRowBuffer",
    "summary": "Struct ReadOnlyRowBuffer Namespace MarymoorStudios.Core.Serialization.System Assembly MarymoorStudios.Core.Serialization.dll public struct ReadOnlyRowBuffer Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors ReadOnlyRowBuffer(ReadOnlyMemory<byte>) public ReadOnlyRowBuffer(ReadOnlyMemory<byte> buffer = default) Parameters buffer ReadOnlyMemory<byte> Properties Capacity The remaining unused portion of the current buffer allocation. public readonly int Capacity { get; } Property Value int Length The length of the written portion of the buffer. public readonly int Length { get; } Property Value int Remain The remaining content not yet read. public readonly ReadOnlyMemory<byte> Remain { get; } Property Value ReadOnlyMemory<byte> Methods Reset(int) Resets the current read offset to 0. public void Reset(int offset = 0) Parameters offset int Skip(int) Moves the offset forward. public void Skip(int length) Parameters length int The number of bytes to move forward. TryRead(out TypeId) public bool TryRead(out TypeId value) Parameters value TypeId Returns bool TryRead(Span<byte>, out int) Tries to read a byte array into the provided destination. public bool TryRead(Span<byte> destination, out int written) Parameters destination Span<byte> Where bytes should be written. written int The number of bytes written. Returns bool True if successful, false otherwise. Remarks If destination is not large enough then returns , but sets written to the size required. If no length can be read from the ReadOnlyRowBuffer then returns , but sets written to -1. TryRead(out string) public bool TryRead(out string value) Parameters value string Returns bool TryRead<T>(Span<T>) Tries to read a fixed sized byte array into the provided destination. public bool TryRead<T>(Span<T> destination) where T : unmanaged Parameters destination Span<T> Where bytes should be written. Returns bool True if successful, false otherwise. Type Parameters T TryRead<T>(out T) public bool TryRead<T>(out T value) where T : unmanaged Parameters value T Returns bool Type Parameters T"
  },
  "api/MarymoorStudios.Core.Serialization.System.ReadOnlySpanSerializer-1.html": {
    "href": "api/MarymoorStudios.Core.Serialization.System.ReadOnlySpanSerializer-1.html",
    "title": "Class ReadOnlySpanSerializer<T>",
    "summary": "Class ReadOnlySpanSerializer<T> Namespace MarymoorStudios.Core.Serialization.System Assembly MarymoorStudios.Core.Serialization.dll public sealed class ReadOnlySpanSerializer<T> : Serializer<ReadOnlySpan<T>> Type Parameters T Inheritance object Serializer Serializer<ReadOnlySpan<T>> ReadOnlySpanSerializer<T> Inherited Members Serializer<ReadOnlySpan<T>>.Default Serializer.Register(Type, Type) Serializer.TrySizeOfDerived<TSuper>(SerializationContext, in TSuper, out int) Serializer.TryWriteDerived<TSuper>(SerializationContext, ref RowBuffer, in TSuper) Serializer.Slice(TypeId, ref TypeId, SerializationContext, ref ReadOnlyRowBuffer) Serializer.Dice(int, SerializationContext, ref ReadOnlyRowBuffer) Serializer.TryReadDerived<TSuper>(TypeId, SerializationContext, ref ReadOnlyRowBuffer, out TSuper) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors ReadOnlySpanSerializer() public ReadOnlySpanSerializer() Properties TypeId public static TypeId TypeId { get; } Property Value TypeId Methods GetTypeId() public override TypeId GetTypeId() Returns TypeId SizeOf(SerializationContext, in ReadOnlySpan<T>) public override int SizeOf(SerializationContext context, in ReadOnlySpan<T> value) Parameters context SerializationContext value ReadOnlySpan<T> Returns int TryRead(SerializationContext, ref ReadOnlyRowBuffer, out ReadOnlySpan<T>) public override bool TryRead(SerializationContext context, ref ReadOnlyRowBuffer buffer, out ReadOnlySpan<T> value) Parameters context SerializationContext buffer ReadOnlyRowBuffer value ReadOnlySpan<T> Returns bool Write(SerializationContext, ref RowBuffer, in ReadOnlySpan<T>) public override void Write(SerializationContext context, ref RowBuffer buffer, in ReadOnlySpan<T> value) Parameters context SerializationContext buffer RowBuffer value ReadOnlySpan<T>"
  },
  "api/MarymoorStudios.Core.Serialization.System.RowBuffer.html": {
    "href": "api/MarymoorStudios.Core.Serialization.System.RowBuffer.html",
    "title": "Struct RowBuffer",
    "summary": "Struct RowBuffer Namespace MarymoorStudios.Core.Serialization.System Assembly MarymoorStudios.Core.Serialization.dll public struct RowBuffer Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors RowBuffer(IMemoryResizer, Memory<byte>) public RowBuffer(IMemoryResizer resizer, Memory<byte> buffer = default) Parameters resizer IMemoryResizer buffer Memory<byte> Properties Buffer The current serialized content. public readonly ReadOnlyMemory<byte> Buffer { get; } Property Value ReadOnlyMemory<byte> Capacity The remaining unused portion of the current buffer allocation. public readonly int Capacity { get; } Property Value int Length The length of the written portion of the buffer. public readonly int Length { get; } Property Value int Methods Reset(int) Resets the current read offset to 0. public void Reset(int offset = 0) Parameters offset int SizeOf(TypeId) public static int SizeOf(TypeId value) Parameters value TypeId Returns int SizeOf(ReadOnlySpan<byte>) public static int SizeOf(ReadOnlySpan<byte> value) Parameters value ReadOnlySpan<byte> Returns int SizeOf(string) public static int SizeOf(string value) Parameters value string Returns int SizeOf<T>(T) public static int SizeOf<T>(T value) where T : unmanaged Parameters value T Returns int Type Parameters T Skip(int) Moves the offset forward. public void Skip(int length) Parameters length int The number of bytes to move forward. TryRead(out TypeId) public bool TryRead(out TypeId value) Parameters value TypeId Returns bool TryRead(Span<byte>, out int) Tries to read a byte array into the provided destination. public bool TryRead(Span<byte> destination, out int written) Parameters destination Span<byte> Where bytes should be written. written int The number of bytes written. Returns bool True if successful, false otherwise. Remarks If destination is not large enough then returns , but sets written to the size required. If no length can be read from the RowBuffer then returns , but sets written to -1. TryRead(out string) public bool TryRead(out string value) Parameters value string Returns bool TryRead<T>(Span<T>) Tries to read a fixed sized byte array into the provided destination. public bool TryRead<T>(Span<T> destination) where T : unmanaged Parameters destination Span<T> Where bytes should be written. Returns bool True if successful, false otherwise. Type Parameters T TryRead<T>(out T) public bool TryRead<T>(out T value) where T : unmanaged Parameters value T Returns bool Type Parameters T Write(TypeId) public void Write(TypeId value) Parameters value TypeId Write(string) public void Write(string value) Parameters value string WriteAt<T>(int, T) Overwrites an existing field in the buffer. public void WriteAt<T>(int offset, T value) where T : unmanaged Parameters offset int The preexisting offset to write at. value T The value to write. Type Parameters T The type of the value to write. Remarks REQUIRES: The offset MUST be within the bounds of previously written fields. WriteRaw<T>(ReadOnlySpan<T>) public void WriteRaw<T>(ReadOnlySpan<T> value) where T : unmanaged Parameters value ReadOnlySpan<T> Type Parameters T Write<T>(ReadOnlySpan<T>) public void Write<T>(ReadOnlySpan<T> value) where T : unmanaged Parameters value ReadOnlySpan<T> Type Parameters T Write<T>(Span<T>) public void Write<T>(Span<T> value) where T : unmanaged Parameters value Span<T> Type Parameters T Write<T>(T) public void Write<T>(T value) where T : unmanaged Parameters value T Type Parameters T"
  },
  "api/MarymoorStudios.Core.Serialization.System.SerializationContext.html": {
    "href": "api/MarymoorStudios.Core.Serialization.System.SerializationContext.html",
    "title": "Class SerializationContext",
    "summary": "Class SerializationContext Namespace MarymoorStudios.Core.Serialization.System Assembly MarymoorStudios.Core.Serialization.dll Abstract base type for a context passed to Serializer<T> during serialization and materialization operations. public abstract class SerializationContext Inheritance object SerializationContext Derived DefaultSerializationContext Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors SerializationContext() protected SerializationContext() Properties UpLevelVisitor An (optional) record visitor that is used to perform a metadata walk on sliced and diced up-level content during a down-level materialization. public virtual RecordVisitor? UpLevelVisitor { get; } Property Value RecordVisitor Remarks If (the default) then up-level content is skipped without being walked. Skipping some kinds of content (e.g. Promise) can lead to resource leaks. Skipping is strictly safe for purely passive data content (e.g. on-disk data serializations or RecordIO). Active serialization contexts (e.g. RPC) should override this property to provide a visitor that will properly reclaim resources that would have otherwise been skipped."
  },
  "api/MarymoorStudios.Core.Serialization.System.Serializer-1.html": {
    "href": "api/MarymoorStudios.Core.Serialization.System.Serializer-1.html",
    "title": "Class Serializer<T>",
    "summary": "Class Serializer<T> Namespace MarymoorStudios.Core.Serialization.System Assembly MarymoorStudios.Core.Serialization.dll public abstract class Serializer<T> : Serializer where T : allows ref struct Type Parameters T Inheritance object Serializer Serializer<T> Derived BytesSerializer CommExceptionSerializer CommIdSerializer AbortedExceptionSerializer AlreadyExistsExceptionSerializer EndOfSequenceExceptionSerializer FailedPreconditionExceptionSerializer InsufficientResourcesExceptionSerializer InvalidArgumentExceptionSerializer NotFoundExceptionSerializer Test2ExceptionSerializer TestExceptionSerializer UnauthenticatedExceptionSerializer UnavailableExceptionSerializer UnimplementedExceptionSerializer UninitializedExceptionSerializer IMetadata.DescriptorSerializer AdmissionManager.AdmissionPolicySerializer EndorsementCollectionSerializer EndorsementSerializer RemoteAdmissionManager.AdmissionOutcomeSerializer UserIdentityCollectionSerializer UserIdentitySerializer PromiseSerializer PromiseSerializer<T> ProtocolViolationExceptionSerializer ProxySerializer<TProxy, TServer> RemotedExceptionSerializer SequenceSerializer<T> SyncMessageSerializer<TServer> SerializationExceptionSerializer ArraySerializer<T> BooleanSerializer DateTimeSerializer DecimalSerializer ExceptionSerializer Float32Serializer Float64Serializer GuidSerializer IEnumerableSerializer<T> IPAddressSerializer IPEndPointSerializer Int16Serializer Int32Serializer Int64Serializer Int8Serializer ListSerializer<T> MemorySerializer<T> NullableSerializer<T> ObjectSerializer OwnedMemSerializer<T> ReadOnlyMemorySerializer<T> ReadOnlySpanSerializer<T> SpanSerializer<T> StringSerializer TimeSpanSerializer TypeIdSerializer TypeMarkerSerializer UInt16Serializer UInt32Serializer UInt64Serializer UInt8Serializer ValueTupleSerializer<T1> ValueTupleSerializer<T1, T2> ValueTupleSerializer<T1, T2, T3> ValueTupleSerializer<T1, T2, T3, T4> ValueTupleSerializer<T1, T2, T3, T4, T5> ValueTupleSerializer<T1, T2, T3, T4, T5, T6> ValueTupleSerializer<T1, T2, T3, T4, T5, T6, T7> ValueTupleSerializer<T1, T2, T3, T4, T5, T6, T7, TRest> AccountIDSerializer CGameIDSerializer CSteamIDSerializer SteamErrorExceptionSerializer SteamExceptionSerializer SteamInitExceptionSerializer Inherited Members Serializer.Register(Type, Type) Serializer.TrySizeOfDerived<TSuper>(SerializationContext, in TSuper, out int) Serializer.TryWriteDerived<TSuper>(SerializationContext, ref RowBuffer, in TSuper) Serializer.Slice(TypeId, ref TypeId, SerializationContext, ref ReadOnlyRowBuffer) Serializer.Dice(int, SerializationContext, ref ReadOnlyRowBuffer) Serializer.TryReadDerived<TSuper>(TypeId, SerializationContext, ref ReadOnlyRowBuffer, out TSuper) Serializer.Get<T>() Serializer.GetTypeId() object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors Serializer() protected Serializer() Properties Default public static Serializer<T> Default { get; } Property Value Serializer<T> Methods SizeOf(SerializationContext, in T) public abstract int SizeOf(SerializationContext context, in T value) Parameters context SerializationContext value T Returns int TryRead(SerializationContext, ref ReadOnlyRowBuffer, out T) public abstract bool TryRead(SerializationContext context, ref ReadOnlyRowBuffer buffer, out T value) Parameters context SerializationContext buffer ReadOnlyRowBuffer value T Returns bool Write(SerializationContext, ref RowBuffer, in T) public abstract void Write(SerializationContext context, ref RowBuffer buffer, in T value) Parameters context SerializationContext buffer RowBuffer value T"
  },
  "api/MarymoorStudios.Core.Serialization.System.Serializer.html": {
    "href": "api/MarymoorStudios.Core.Serialization.System.Serializer.html",
    "title": "Class Serializer",
    "summary": "Class Serializer Namespace MarymoorStudios.Core.Serialization.System Assembly MarymoorStudios.Core.Serialization.dll public abstract class Serializer Inheritance object Serializer Derived Serializer<T> Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors Serializer() protected Serializer() Methods Dice(int, SerializationContext, ref ReadOnlyRowBuffer) Skips over up-level properties that are not known. public static bool Dice(int segmentEnd, SerializationContext context, ref ReadOnlyRowBuffer buffer) Parameters segmentEnd int The buffer offset where the segment ends. context SerializationContext The serialization context. buffer ReadOnlyRowBuffer The buffer. Returns bool True if successful, false if an error occurred. GetTypeId() public abstract TypeId GetTypeId() Returns TypeId Get<T>() protected static Serializer<T> Get<T>() where T : allows ref struct Returns Serializer<T> Type Parameters T Register(Type, Type) public static void Register(Type genericType, Type templateType) Parameters genericType Type templateType Type Slice(TypeId, ref TypeId, SerializationContext, ref ReadOnlyRowBuffer) Skips over type segments until it encounters a typeId that is known. public static bool Slice(TypeId declaredTypeId, ref TypeId typeId, SerializationContext context, ref ReadOnlyRowBuffer buffer) Parameters declaredTypeId TypeId The type id of the calling serializer. typeId TypeId On input the type of the current segment, on return the type of the found segment. context SerializationContext The serialization context. buffer ReadOnlyRowBuffer The buffer to read from. Returns bool True if successful, false if parsing fails. TryReadDerived<TSuper>(TypeId, SerializationContext, ref ReadOnlyRowBuffer, out TSuper) public static bool TryReadDerived<TSuper>(TypeId typeId, SerializationContext context, ref ReadOnlyRowBuffer buffer, out TSuper value) where TSuper : class? Parameters typeId TypeId context SerializationContext buffer ReadOnlyRowBuffer value TSuper Returns bool Type Parameters TSuper TrySizeOfDerived<TSuper>(SerializationContext, in TSuper, out int) public static bool TrySizeOfDerived<TSuper>(SerializationContext context, in TSuper value, out int size) where TSuper : class? Parameters context SerializationContext value TSuper size int Returns bool Type Parameters TSuper TryWriteDerived<TSuper>(SerializationContext, ref RowBuffer, in TSuper) public static bool TryWriteDerived<TSuper>(SerializationContext context, ref RowBuffer buffer, in TSuper value) where TSuper : class? Parameters context SerializationContext buffer RowBuffer value TSuper Returns bool Type Parameters TSuper"
  },
  "api/MarymoorStudios.Core.Serialization.System.SpanSerializer-1.html": {
    "href": "api/MarymoorStudios.Core.Serialization.System.SpanSerializer-1.html",
    "title": "Class SpanSerializer<T>",
    "summary": "Class SpanSerializer<T> Namespace MarymoorStudios.Core.Serialization.System Assembly MarymoorStudios.Core.Serialization.dll public class SpanSerializer<T> : Serializer<Span<T>> Type Parameters T Inheritance object Serializer Serializer<Span<T>> SpanSerializer<T> Inherited Members Serializer<Span<T>>.Default Serializer.Register(Type, Type) Serializer.TrySizeOfDerived<TSuper>(SerializationContext, in TSuper, out int) Serializer.TryWriteDerived<TSuper>(SerializationContext, ref RowBuffer, in TSuper) Serializer.Slice(TypeId, ref TypeId, SerializationContext, ref ReadOnlyRowBuffer) Serializer.Dice(int, SerializationContext, ref ReadOnlyRowBuffer) Serializer.TryReadDerived<TSuper>(TypeId, SerializationContext, ref ReadOnlyRowBuffer, out TSuper) Serializer.Get<T>() object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors SpanSerializer() public SpanSerializer() Properties TypeId public static TypeId TypeId { get; } Property Value TypeId Methods GetTypeId() public override TypeId GetTypeId() Returns TypeId SizeOf(SerializationContext, in Span<T>) public override int SizeOf(SerializationContext context, in Span<T> value) Parameters context SerializationContext value Span<T> Returns int TryRead(SerializationContext, ref ReadOnlyRowBuffer, out Span<T>) public override bool TryRead(SerializationContext context, ref ReadOnlyRowBuffer buffer, out Span<T> value) Parameters context SerializationContext buffer ReadOnlyRowBuffer value Span<T> Returns bool Write(SerializationContext, ref RowBuffer, in Span<T>) public override void Write(SerializationContext context, ref RowBuffer buffer, in Span<T> value) Parameters context SerializationContext buffer RowBuffer value Span<T>"
  },
  "api/MarymoorStudios.Core.Serialization.System.StringSerializer.html": {
    "href": "api/MarymoorStudios.Core.Serialization.System.StringSerializer.html",
    "title": "Class StringSerializer",
    "summary": "Class StringSerializer Namespace MarymoorStudios.Core.Serialization.System Assembly MarymoorStudios.Core.Serialization.dll public sealed class StringSerializer : Serializer<string?> Inheritance object Serializer Serializer<string> StringSerializer Inherited Members Serializer<string>.Default Serializer.Register(Type, Type) Serializer.TrySizeOfDerived<TSuper>(SerializationContext, in TSuper, out int) Serializer.TryWriteDerived<TSuper>(SerializationContext, ref RowBuffer, in TSuper) Serializer.Slice(TypeId, ref TypeId, SerializationContext, ref ReadOnlyRowBuffer) Serializer.Dice(int, SerializationContext, ref ReadOnlyRowBuffer) Serializer.TryReadDerived<TSuper>(TypeId, SerializationContext, ref ReadOnlyRowBuffer, out TSuper) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors StringSerializer() public StringSerializer() Properties TypeId public static TypeId TypeId { get; } Property Value TypeId Methods GetTypeId() public override TypeId GetTypeId() Returns TypeId SizeOf(SerializationContext, in string?) public override int SizeOf(SerializationContext context, in string? value) Parameters context SerializationContext value string Returns int TryRead(SerializationContext, ref ReadOnlyRowBuffer, out string?) public override bool TryRead(SerializationContext context, ref ReadOnlyRowBuffer buffer, out string? value) Parameters context SerializationContext buffer ReadOnlyRowBuffer value string Returns bool Write(SerializationContext, ref RowBuffer, in string?) public override void Write(SerializationContext context, ref RowBuffer buffer, in string? value) Parameters context SerializationContext buffer RowBuffer value string"
  },
  "api/MarymoorStudios.Core.Serialization.System.TimeSpanSerializer.html": {
    "href": "api/MarymoorStudios.Core.Serialization.System.TimeSpanSerializer.html",
    "title": "Class TimeSpanSerializer",
    "summary": "Class TimeSpanSerializer Namespace MarymoorStudios.Core.Serialization.System Assembly MarymoorStudios.Core.Serialization.dll public sealed class TimeSpanSerializer : Serializer<TimeSpan> Inheritance object Serializer Serializer<TimeSpan> TimeSpanSerializer Inherited Members Serializer<TimeSpan>.Default Serializer.Register(Type, Type) Serializer.TrySizeOfDerived<TSuper>(SerializationContext, in TSuper, out int) Serializer.TryWriteDerived<TSuper>(SerializationContext, ref RowBuffer, in TSuper) Serializer.Slice(TypeId, ref TypeId, SerializationContext, ref ReadOnlyRowBuffer) Serializer.Dice(int, SerializationContext, ref ReadOnlyRowBuffer) Serializer.TryReadDerived<TSuper>(TypeId, SerializationContext, ref ReadOnlyRowBuffer, out TSuper) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors TimeSpanSerializer() public TimeSpanSerializer() Properties TypeId public static TypeId TypeId { get; } Property Value TypeId Methods GetTypeId() public override TypeId GetTypeId() Returns TypeId SizeOf(SerializationContext, in TimeSpan) public override int SizeOf(SerializationContext context, in TimeSpan value) Parameters context SerializationContext value TimeSpan Returns int TryRead(SerializationContext, ref ReadOnlyRowBuffer, out TimeSpan) public override bool TryRead(SerializationContext context, ref ReadOnlyRowBuffer buffer, out TimeSpan value) Parameters context SerializationContext buffer ReadOnlyRowBuffer value TimeSpan Returns bool Write(SerializationContext, ref RowBuffer, in TimeSpan) public override void Write(SerializationContext context, ref RowBuffer buffer, in TimeSpan value) Parameters context SerializationContext buffer RowBuffer value TimeSpan"
  },
  "api/MarymoorStudios.Core.Serialization.System.TypeId.html": {
    "href": "api/MarymoorStudios.Core.Serialization.System.TypeId.html",
    "title": "Struct TypeId",
    "summary": "Struct TypeId Namespace MarymoorStudios.Core.Serialization.System Assembly MarymoorStudios.Core.Serialization.dll public readonly struct TypeId : IEquatable<TypeId> Implements IEquatable<TypeId> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors TypeId(Type, params Span<TypeId>) public TypeId(Type t, params Span<TypeId> genericArguments) Parameters t Type genericArguments Span<TypeId> TypeId(ulong, TypeId[]) public TypeId(ulong id, TypeId[] genericArguments) Parameters id ulong genericArguments TypeId[] Properties GenericArguments The generic arguments of the type. public TypeId[] GenericArguments { get; } Property Value TypeId[] Invalid The invalid id. public static TypeId Invalid { get; } Property Value TypeId IsValid True if the TypeId is not Invalid. public bool IsValid { get; } Property Value bool Methods Equals(TypeId) Value-based equality. public bool Equals(TypeId other) Parameters other TypeId Returns bool Equals(object?) public override bool Equals(object? obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() public override string ToString() Returns string Operators operator ==(TypeId, TypeId) Value-based equality. public static bool operator ==(TypeId left, TypeId right) Parameters left TypeId right TypeId Returns bool operator !=(TypeId, TypeId) Value-based equality. public static bool operator !=(TypeId left, TypeId right) Parameters left TypeId right TypeId Returns bool"
  },
  "api/MarymoorStudios.Core.Serialization.System.TypeIdSerializer.html": {
    "href": "api/MarymoorStudios.Core.Serialization.System.TypeIdSerializer.html",
    "title": "Class TypeIdSerializer",
    "summary": "Class TypeIdSerializer Namespace MarymoorStudios.Core.Serialization.System Assembly MarymoorStudios.Core.Serialization.dll public sealed class TypeIdSerializer : Serializer<TypeId> Inheritance object Serializer Serializer<TypeId> TypeIdSerializer Inherited Members Serializer<TypeId>.Default Serializer.Register(Type, Type) Serializer.TrySizeOfDerived<TSuper>(SerializationContext, in TSuper, out int) Serializer.TryWriteDerived<TSuper>(SerializationContext, ref RowBuffer, in TSuper) Serializer.Slice(TypeId, ref TypeId, SerializationContext, ref ReadOnlyRowBuffer) Serializer.Dice(int, SerializationContext, ref ReadOnlyRowBuffer) Serializer.TryReadDerived<TSuper>(TypeId, SerializationContext, ref ReadOnlyRowBuffer, out TSuper) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors TypeIdSerializer() public TypeIdSerializer() Properties TypeId public static TypeId TypeId { get; } Property Value TypeId Methods GetTypeId() public override TypeId GetTypeId() Returns TypeId SizeOf(SerializationContext, in TypeId) public override int SizeOf(SerializationContext context, in TypeId value) Parameters context SerializationContext value TypeId Returns int TryRead(SerializationContext, ref ReadOnlyRowBuffer, out TypeId) public override bool TryRead(SerializationContext context, ref ReadOnlyRowBuffer buffer, out TypeId value) Parameters context SerializationContext buffer ReadOnlyRowBuffer value TypeId Returns bool Write(SerializationContext, ref RowBuffer, in TypeId) public override void Write(SerializationContext context, ref RowBuffer buffer, in TypeId value) Parameters context SerializationContext buffer RowBuffer value TypeId"
  },
  "api/MarymoorStudios.Core.Serialization.System.TypeMarker.html": {
    "href": "api/MarymoorStudios.Core.Serialization.System.TypeMarker.html",
    "title": "Enum TypeMarker",
    "summary": "Enum TypeMarker Namespace MarymoorStudios.Core.Serialization.System Assembly MarymoorStudios.Core.Serialization.dll 1-byte type code indicating the structure of the following bytes. public enum TypeMarker : byte Fields Invalid = 0 Invalid type code (useful for detecting corruption and initialization errors). Null = 1 A null literal. BooleanTrue = 2 8-bit boolean. (bool in C#). BooleanFalse = 3 Int8 = 4 8-bit signed integer. (sbyte in C#). Int16 = 5 16-bit signed integer. (short in C#). Int32 = 6 32-bit signed integer. (int in C#). Int64 = 7 64-bit signed integer. (long in C#). UInt8 = 8 8-bit unsigned integer. (byte in C#). UInt16 = 9 16-bit unsigned integer. (ushort in C#). UInt32 = 10 32-bit unsigned integer. (uint in C#). UInt64 = 11 64-bit unsigned integer. (ulong in C#). Float32 = 12 32-bit IEEE floating point value. (float in C#). Float64 = 13 64-bit IEEE floating point value. (double in C#). Decimal = 14 128-bit extended floating point value. (decimal in C#). DateTime = 15 64-bit time value. The number of 100-nanosecond ticks since 1/1/0001 12:00am. TimeSpan = 16 64-bit time value. A number of 100-nanosecond ticks in elapsed time (positive or negative). Guid = 17 128-bit globally unique identifier. TypeMarker = 18 8-bit type code from this enumeration. EnumInt8 = 20 An alias for an integral underlying type with a range of 8-bit signed integer. EnumInt16 = 21 An alias for an integral underlying type with a range of 16-bit signed integer. EnumInt32 = 22 An alias for an integral underlying type with a range of 32-bit signed integer. EnumInt64 = 23 An alias for an integral underlying type with a range of 64-bit signed integer. EnumUInt8 = 24 An alias for an integral underlying type with a range of 8-bit unsigned integer. EnumUInt16 = 25 An alias for an integral underlying type with a range of 16-bit unsigned integer. EnumUInt32 = 26 An alias for an integral underlying type with a range of 32-bit unsigned integer. EnumUInt64 = 27 An alias for an integral underlying type with a range of 64-bit unsigned integer. String = 30 A variable-length (possibly empty) sequence of UTF16 code points. TypeId = 31 Logical Type Identifier. Promise = 40 A void data promise. PromiseT = 41 A typed data promise. Proxy = 42 A proxy (by ref) promise. Object = 51 A structural composition of other primitives, objects, or arrays. Tuple1 = 52 An n-tuple of types. Tuple2 = 53 Tuple3 = 54 Tuple4 = 55 Tuple5 = 56 Tuple6 = 57 Tuple7 = 58 Tuple8 = 59 Array = 60 A variable-length (possibly empty) sequence of variable-length elements. Each element is of the same declared type, but allowing for subtypes and variable-length structures within."
  },
  "api/MarymoorStudios.Core.Serialization.System.TypeMarkerSerializer.html": {
    "href": "api/MarymoorStudios.Core.Serialization.System.TypeMarkerSerializer.html",
    "title": "Class TypeMarkerSerializer",
    "summary": "Class TypeMarkerSerializer Namespace MarymoorStudios.Core.Serialization.System Assembly MarymoorStudios.Core.Serialization.dll public sealed class TypeMarkerSerializer : Serializer<TypeMarker> Inheritance object Serializer Serializer<TypeMarker> TypeMarkerSerializer Inherited Members Serializer<TypeMarker>.Default Serializer.Register(Type, Type) Serializer.TrySizeOfDerived<TSuper>(SerializationContext, in TSuper, out int) Serializer.TryWriteDerived<TSuper>(SerializationContext, ref RowBuffer, in TSuper) Serializer.Slice(TypeId, ref TypeId, SerializationContext, ref ReadOnlyRowBuffer) Serializer.Dice(int, SerializationContext, ref ReadOnlyRowBuffer) Serializer.TryReadDerived<TSuper>(TypeId, SerializationContext, ref ReadOnlyRowBuffer, out TSuper) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors TypeMarkerSerializer() public TypeMarkerSerializer() Properties TypeId public static TypeId TypeId { get; } Property Value TypeId Methods GetTypeId() public override TypeId GetTypeId() Returns TypeId SizeOf(SerializationContext, in TypeMarker) public override int SizeOf(SerializationContext context, in TypeMarker value) Parameters context SerializationContext value TypeMarker Returns int TryRead(SerializationContext, ref ReadOnlyRowBuffer, out TypeMarker) public override bool TryRead(SerializationContext context, ref ReadOnlyRowBuffer buffer, out TypeMarker value) Parameters context SerializationContext buffer ReadOnlyRowBuffer value TypeMarker Returns bool Write(SerializationContext, ref RowBuffer, in TypeMarker) public override void Write(SerializationContext context, ref RowBuffer buffer, in TypeMarker value) Parameters context SerializationContext buffer RowBuffer value TypeMarker"
  },
  "api/MarymoorStudios.Core.Serialization.System.UInt16Serializer.html": {
    "href": "api/MarymoorStudios.Core.Serialization.System.UInt16Serializer.html",
    "title": "Class UInt16Serializer",
    "summary": "Class UInt16Serializer Namespace MarymoorStudios.Core.Serialization.System Assembly MarymoorStudios.Core.Serialization.dll public sealed class UInt16Serializer : Serializer<ushort> Inheritance object Serializer Serializer<ushort> UInt16Serializer Inherited Members Serializer<ushort>.Default Serializer.Register(Type, Type) Serializer.TrySizeOfDerived<TSuper>(SerializationContext, in TSuper, out int) Serializer.TryWriteDerived<TSuper>(SerializationContext, ref RowBuffer, in TSuper) Serializer.Slice(TypeId, ref TypeId, SerializationContext, ref ReadOnlyRowBuffer) Serializer.Dice(int, SerializationContext, ref ReadOnlyRowBuffer) Serializer.TryReadDerived<TSuper>(TypeId, SerializationContext, ref ReadOnlyRowBuffer, out TSuper) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors UInt16Serializer() public UInt16Serializer() Properties TypeId public static TypeId TypeId { get; } Property Value TypeId Methods GetTypeId() public override TypeId GetTypeId() Returns TypeId SizeOf(SerializationContext, in ushort) public override int SizeOf(SerializationContext context, in ushort value) Parameters context SerializationContext value ushort Returns int TryRead(SerializationContext, ref ReadOnlyRowBuffer, out ushort) public override bool TryRead(SerializationContext context, ref ReadOnlyRowBuffer buffer, out ushort value) Parameters context SerializationContext buffer ReadOnlyRowBuffer value ushort Returns bool Write(SerializationContext, ref RowBuffer, in ushort) public override void Write(SerializationContext context, ref RowBuffer buffer, in ushort value) Parameters context SerializationContext buffer RowBuffer value ushort"
  },
  "api/MarymoorStudios.Core.Serialization.System.UInt32Serializer.html": {
    "href": "api/MarymoorStudios.Core.Serialization.System.UInt32Serializer.html",
    "title": "Class UInt32Serializer",
    "summary": "Class UInt32Serializer Namespace MarymoorStudios.Core.Serialization.System Assembly MarymoorStudios.Core.Serialization.dll public sealed class UInt32Serializer : Serializer<uint> Inheritance object Serializer Serializer<uint> UInt32Serializer Inherited Members Serializer<uint>.Default Serializer.Register(Type, Type) Serializer.TrySizeOfDerived<TSuper>(SerializationContext, in TSuper, out int) Serializer.TryWriteDerived<TSuper>(SerializationContext, ref RowBuffer, in TSuper) Serializer.Slice(TypeId, ref TypeId, SerializationContext, ref ReadOnlyRowBuffer) Serializer.Dice(int, SerializationContext, ref ReadOnlyRowBuffer) Serializer.TryReadDerived<TSuper>(TypeId, SerializationContext, ref ReadOnlyRowBuffer, out TSuper) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors UInt32Serializer() public UInt32Serializer() Properties TypeId public static TypeId TypeId { get; } Property Value TypeId Methods GetTypeId() public override TypeId GetTypeId() Returns TypeId SizeOf(SerializationContext, in uint) public override int SizeOf(SerializationContext context, in uint value) Parameters context SerializationContext value uint Returns int TryRead(SerializationContext, ref ReadOnlyRowBuffer, out uint) public override bool TryRead(SerializationContext context, ref ReadOnlyRowBuffer buffer, out uint value) Parameters context SerializationContext buffer ReadOnlyRowBuffer value uint Returns bool Write(SerializationContext, ref RowBuffer, in uint) public override void Write(SerializationContext context, ref RowBuffer buffer, in uint value) Parameters context SerializationContext buffer RowBuffer value uint"
  },
  "api/MarymoorStudios.Core.Serialization.System.UInt64Serializer.html": {
    "href": "api/MarymoorStudios.Core.Serialization.System.UInt64Serializer.html",
    "title": "Class UInt64Serializer",
    "summary": "Class UInt64Serializer Namespace MarymoorStudios.Core.Serialization.System Assembly MarymoorStudios.Core.Serialization.dll public sealed class UInt64Serializer : Serializer<ulong> Inheritance object Serializer Serializer<ulong> UInt64Serializer Inherited Members Serializer<ulong>.Default Serializer.Register(Type, Type) Serializer.TrySizeOfDerived<TSuper>(SerializationContext, in TSuper, out int) Serializer.TryWriteDerived<TSuper>(SerializationContext, ref RowBuffer, in TSuper) Serializer.Slice(TypeId, ref TypeId, SerializationContext, ref ReadOnlyRowBuffer) Serializer.Dice(int, SerializationContext, ref ReadOnlyRowBuffer) Serializer.TryReadDerived<TSuper>(TypeId, SerializationContext, ref ReadOnlyRowBuffer, out TSuper) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors UInt64Serializer() public UInt64Serializer() Properties TypeId public static TypeId TypeId { get; } Property Value TypeId Methods GetTypeId() public override TypeId GetTypeId() Returns TypeId SizeOf(SerializationContext, in ulong) public override int SizeOf(SerializationContext context, in ulong value) Parameters context SerializationContext value ulong Returns int TryRead(SerializationContext, ref ReadOnlyRowBuffer, out ulong) public override bool TryRead(SerializationContext context, ref ReadOnlyRowBuffer buffer, out ulong value) Parameters context SerializationContext buffer ReadOnlyRowBuffer value ulong Returns bool Write(SerializationContext, ref RowBuffer, in ulong) public override void Write(SerializationContext context, ref RowBuffer buffer, in ulong value) Parameters context SerializationContext buffer RowBuffer value ulong"
  },
  "api/MarymoorStudios.Core.Serialization.System.UInt8Serializer.html": {
    "href": "api/MarymoorStudios.Core.Serialization.System.UInt8Serializer.html",
    "title": "Class UInt8Serializer",
    "summary": "Class UInt8Serializer Namespace MarymoorStudios.Core.Serialization.System Assembly MarymoorStudios.Core.Serialization.dll public sealed class UInt8Serializer : Serializer<byte> Inheritance object Serializer Serializer<byte> UInt8Serializer Inherited Members Serializer<byte>.Default Serializer.Register(Type, Type) Serializer.TrySizeOfDerived<TSuper>(SerializationContext, in TSuper, out int) Serializer.TryWriteDerived<TSuper>(SerializationContext, ref RowBuffer, in TSuper) Serializer.Slice(TypeId, ref TypeId, SerializationContext, ref ReadOnlyRowBuffer) Serializer.Dice(int, SerializationContext, ref ReadOnlyRowBuffer) Serializer.TryReadDerived<TSuper>(TypeId, SerializationContext, ref ReadOnlyRowBuffer, out TSuper) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors UInt8Serializer() public UInt8Serializer() Properties TypeId public static TypeId TypeId { get; } Property Value TypeId Methods GetTypeId() public override TypeId GetTypeId() Returns TypeId SizeOf(SerializationContext, in byte) public override int SizeOf(SerializationContext context, in byte value) Parameters context SerializationContext value byte Returns int TryRead(SerializationContext, ref ReadOnlyRowBuffer, out byte) public override bool TryRead(SerializationContext context, ref ReadOnlyRowBuffer buffer, out byte value) Parameters context SerializationContext buffer ReadOnlyRowBuffer value byte Returns bool Write(SerializationContext, ref RowBuffer, in byte) public override void Write(SerializationContext context, ref RowBuffer buffer, in byte value) Parameters context SerializationContext buffer RowBuffer value byte"
  },
  "api/MarymoorStudios.Core.Serialization.System.ValueTupleSerializer-1.html": {
    "href": "api/MarymoorStudios.Core.Serialization.System.ValueTupleSerializer-1.html",
    "title": "Class ValueTupleSerializer<T1>",
    "summary": "Class ValueTupleSerializer<T1> Namespace MarymoorStudios.Core.Serialization.System Assembly MarymoorStudios.Core.Serialization.dll public sealed class ValueTupleSerializer<T1> : Serializer<ValueTuple<T1>> Type Parameters T1 Inheritance object Serializer Serializer<ValueTuple<T1>> ValueTupleSerializer<T1> Inherited Members Serializer<ValueTuple<T1>>.Default Serializer.Register(Type, Type) Serializer.TrySizeOfDerived<TSuper>(SerializationContext, in TSuper, out int) Serializer.TryWriteDerived<TSuper>(SerializationContext, ref RowBuffer, in TSuper) Serializer.Slice(TypeId, ref TypeId, SerializationContext, ref ReadOnlyRowBuffer) Serializer.Dice(int, SerializationContext, ref ReadOnlyRowBuffer) Serializer.TryReadDerived<TSuper>(TypeId, SerializationContext, ref ReadOnlyRowBuffer, out TSuper) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors ValueTupleSerializer() public ValueTupleSerializer() Properties TypeId public static TypeId TypeId { get; } Property Value TypeId Methods GetTypeId() public override TypeId GetTypeId() Returns TypeId SizeOf(SerializationContext, in ValueTuple<T1>) public override int SizeOf(SerializationContext context, in ValueTuple<T1> value) Parameters context SerializationContext value ValueTuple<T1> Returns int TryRead(SerializationContext, ref ReadOnlyRowBuffer, out ValueTuple<T1>) public override bool TryRead(SerializationContext context, ref ReadOnlyRowBuffer buffer, out ValueTuple<T1> value) Parameters context SerializationContext buffer ReadOnlyRowBuffer value ValueTuple<T1> Returns bool Write(SerializationContext, ref RowBuffer, in ValueTuple<T1>) public override void Write(SerializationContext context, ref RowBuffer buffer, in ValueTuple<T1> value) Parameters context SerializationContext buffer RowBuffer value ValueTuple<T1>"
  },
  "api/MarymoorStudios.Core.Serialization.System.ValueTupleSerializer-2.html": {
    "href": "api/MarymoorStudios.Core.Serialization.System.ValueTupleSerializer-2.html",
    "title": "Class ValueTupleSerializer<T1, T2>",
    "summary": "Class ValueTupleSerializer<T1, T2> Namespace MarymoorStudios.Core.Serialization.System Assembly MarymoorStudios.Core.Serialization.dll public sealed class ValueTupleSerializer<T1, T2> : Serializer<(T1, T2)> Type Parameters T1 T2 Inheritance object Serializer Serializer<(T1, T2)> ValueTupleSerializer<T1, T2> Inherited Members Serializer<(T1, T2)>.SizeOf(SerializationContext, in (T1, T2)) Serializer<(T1, T2)>.Write(SerializationContext, ref RowBuffer, in (T1, T2)) Serializer<(T1, T2)>.TryRead(SerializationContext, ref ReadOnlyRowBuffer, out (T1, T2)) Serializer<(T1, T2)>.Default Serializer.Register(Type, Type) Serializer.TrySizeOfDerived<TSuper>(SerializationContext, in TSuper, out int) Serializer.TryWriteDerived<TSuper>(SerializationContext, ref RowBuffer, in TSuper) Serializer.Slice(TypeId, ref TypeId, SerializationContext, ref ReadOnlyRowBuffer) Serializer.Dice(int, SerializationContext, ref ReadOnlyRowBuffer) Serializer.TryReadDerived<TSuper>(TypeId, SerializationContext, ref ReadOnlyRowBuffer, out TSuper) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors ValueTupleSerializer() public ValueTupleSerializer() Properties TypeId public static TypeId TypeId { get; } Property Value TypeId Methods GetTypeId() public override TypeId GetTypeId() Returns TypeId SizeOf(SerializationContext, in (T1, T2)) public override int SizeOf(SerializationContext context, in (T1, T2) value) Parameters context SerializationContext value (T1, T2) Returns int TryRead(SerializationContext, ref ReadOnlyRowBuffer, out (T1, T2)) public override bool TryRead(SerializationContext context, ref ReadOnlyRowBuffer buffer, out (T1, T2) value) Parameters context SerializationContext buffer ReadOnlyRowBuffer value (T1, T2) Returns bool Write(SerializationContext, ref RowBuffer, in (T1, T2)) public override void Write(SerializationContext context, ref RowBuffer buffer, in (T1, T2) value) Parameters context SerializationContext buffer RowBuffer value (T1, T2)"
  },
  "api/MarymoorStudios.Core.Serialization.System.ValueTupleSerializer-3.html": {
    "href": "api/MarymoorStudios.Core.Serialization.System.ValueTupleSerializer-3.html",
    "title": "Class ValueTupleSerializer<T1, T2, T3>",
    "summary": "Class ValueTupleSerializer<T1, T2, T3> Namespace MarymoorStudios.Core.Serialization.System Assembly MarymoorStudios.Core.Serialization.dll public sealed class ValueTupleSerializer<T1, T2, T3> : Serializer<(T1, T2, T3)> Type Parameters T1 T2 T3 Inheritance object Serializer Serializer<(T1, T2, T3)> ValueTupleSerializer<T1, T2, T3> Inherited Members Serializer<(T1, T2, T3)>.SizeOf(SerializationContext, in (T1, T2, T3)) Serializer<(T1, T2, T3)>.Write(SerializationContext, ref RowBuffer, in (T1, T2, T3)) Serializer<(T1, T2, T3)>.TryRead(SerializationContext, ref ReadOnlyRowBuffer, out (T1, T2, T3)) Serializer<(T1, T2, T3)>.Default Serializer.Register(Type, Type) Serializer.TrySizeOfDerived<TSuper>(SerializationContext, in TSuper, out int) Serializer.TryWriteDerived<TSuper>(SerializationContext, ref RowBuffer, in TSuper) Serializer.Slice(TypeId, ref TypeId, SerializationContext, ref ReadOnlyRowBuffer) Serializer.Dice(int, SerializationContext, ref ReadOnlyRowBuffer) Serializer.TryReadDerived<TSuper>(TypeId, SerializationContext, ref ReadOnlyRowBuffer, out TSuper) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors ValueTupleSerializer() public ValueTupleSerializer() Properties TypeId public static TypeId TypeId { get; } Property Value TypeId Methods GetTypeId() public override TypeId GetTypeId() Returns TypeId SizeOf(SerializationContext, in (T1, T2, T3)) public override int SizeOf(SerializationContext context, in (T1, T2, T3) value) Parameters context SerializationContext value (T1, T2, T3) Returns int TryRead(SerializationContext, ref ReadOnlyRowBuffer, out (T1, T2, T3)) public override bool TryRead(SerializationContext context, ref ReadOnlyRowBuffer buffer, out (T1, T2, T3) value) Parameters context SerializationContext buffer ReadOnlyRowBuffer value (T1, T2, T3) Returns bool Write(SerializationContext, ref RowBuffer, in (T1, T2, T3)) public override void Write(SerializationContext context, ref RowBuffer buffer, in (T1, T2, T3) value) Parameters context SerializationContext buffer RowBuffer value (T1, T2, T3)"
  },
  "api/MarymoorStudios.Core.Serialization.System.ValueTupleSerializer-4.html": {
    "href": "api/MarymoorStudios.Core.Serialization.System.ValueTupleSerializer-4.html",
    "title": "Class ValueTupleSerializer<T1, T2, T3, T4>",
    "summary": "Class ValueTupleSerializer<T1, T2, T3, T4> Namespace MarymoorStudios.Core.Serialization.System Assembly MarymoorStudios.Core.Serialization.dll public sealed class ValueTupleSerializer<T1, T2, T3, T4> : Serializer<(T1, T2, T3, T4)> Type Parameters T1 T2 T3 T4 Inheritance object Serializer Serializer<(T1, T2, T3, T4)> ValueTupleSerializer<T1, T2, T3, T4> Inherited Members Serializer<(T1, T2, T3, T4)>.SizeOf(SerializationContext, in (T1, T2, T3, T4)) Serializer<(T1, T2, T3, T4)>.Write(SerializationContext, ref RowBuffer, in (T1, T2, T3, T4)) Serializer<(T1, T2, T3, T4)>.TryRead(SerializationContext, ref ReadOnlyRowBuffer, out (T1, T2, T3, T4)) Serializer<(T1, T2, T3, T4)>.Default Serializer.Register(Type, Type) Serializer.TrySizeOfDerived<TSuper>(SerializationContext, in TSuper, out int) Serializer.TryWriteDerived<TSuper>(SerializationContext, ref RowBuffer, in TSuper) Serializer.Slice(TypeId, ref TypeId, SerializationContext, ref ReadOnlyRowBuffer) Serializer.Dice(int, SerializationContext, ref ReadOnlyRowBuffer) Serializer.TryReadDerived<TSuper>(TypeId, SerializationContext, ref ReadOnlyRowBuffer, out TSuper) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors ValueTupleSerializer() public ValueTupleSerializer() Properties TypeId public static TypeId TypeId { get; } Property Value TypeId Methods GetTypeId() public override TypeId GetTypeId() Returns TypeId SizeOf(SerializationContext, in (T1, T2, T3, T4)) public override int SizeOf(SerializationContext context, in (T1, T2, T3, T4) value) Parameters context SerializationContext value (T1, T2, T3, T4) Returns int TryRead(SerializationContext, ref ReadOnlyRowBuffer, out (T1, T2, T3, T4)) public override bool TryRead(SerializationContext context, ref ReadOnlyRowBuffer buffer, out (T1, T2, T3, T4) value) Parameters context SerializationContext buffer ReadOnlyRowBuffer value (T1, T2, T3, T4) Returns bool Write(SerializationContext, ref RowBuffer, in (T1, T2, T3, T4)) public override void Write(SerializationContext context, ref RowBuffer buffer, in (T1, T2, T3, T4) value) Parameters context SerializationContext buffer RowBuffer value (T1, T2, T3, T4)"
  },
  "api/MarymoorStudios.Core.Serialization.System.ValueTupleSerializer-5.html": {
    "href": "api/MarymoorStudios.Core.Serialization.System.ValueTupleSerializer-5.html",
    "title": "Class ValueTupleSerializer<T1, T2, T3, T4, T5>",
    "summary": "Class ValueTupleSerializer<T1, T2, T3, T4, T5> Namespace MarymoorStudios.Core.Serialization.System Assembly MarymoorStudios.Core.Serialization.dll public sealed class ValueTupleSerializer<T1, T2, T3, T4, T5> : Serializer<(T1, T2, T3, T4, T5)> Type Parameters T1 T2 T3 T4 T5 Inheritance object Serializer Serializer<(T1, T2, T3, T4, T5)> ValueTupleSerializer<T1, T2, T3, T4, T5> Inherited Members Serializer<(T1, T2, T3, T4, T5)>.SizeOf(SerializationContext, in (T1, T2, T3, T4, T5)) Serializer<(T1, T2, T3, T4, T5)>.Write(SerializationContext, ref RowBuffer, in (T1, T2, T3, T4, T5)) Serializer<(T1, T2, T3, T4, T5)>.TryRead(SerializationContext, ref ReadOnlyRowBuffer, out (T1, T2, T3, T4, T5)) Serializer<(T1, T2, T3, T4, T5)>.Default Serializer.Register(Type, Type) Serializer.TrySizeOfDerived<TSuper>(SerializationContext, in TSuper, out int) Serializer.TryWriteDerived<TSuper>(SerializationContext, ref RowBuffer, in TSuper) Serializer.Slice(TypeId, ref TypeId, SerializationContext, ref ReadOnlyRowBuffer) Serializer.Dice(int, SerializationContext, ref ReadOnlyRowBuffer) Serializer.TryReadDerived<TSuper>(TypeId, SerializationContext, ref ReadOnlyRowBuffer, out TSuper) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors ValueTupleSerializer() public ValueTupleSerializer() Properties TypeId public static TypeId TypeId { get; } Property Value TypeId Methods GetTypeId() public override TypeId GetTypeId() Returns TypeId SizeOf(SerializationContext, in (T1, T2, T3, T4, T5)) public override int SizeOf(SerializationContext context, in (T1, T2, T3, T4, T5) value) Parameters context SerializationContext value (T1, T2, T3, T4, T5) Returns int TryRead(SerializationContext, ref ReadOnlyRowBuffer, out (T1, T2, T3, T4, T5)) public override bool TryRead(SerializationContext context, ref ReadOnlyRowBuffer buffer, out (T1, T2, T3, T4, T5) value) Parameters context SerializationContext buffer ReadOnlyRowBuffer value (T1, T2, T3, T4, T5) Returns bool Write(SerializationContext, ref RowBuffer, in (T1, T2, T3, T4, T5)) public override void Write(SerializationContext context, ref RowBuffer buffer, in (T1, T2, T3, T4, T5) value) Parameters context SerializationContext buffer RowBuffer value (T1, T2, T3, T4, T5)"
  },
  "api/MarymoorStudios.Core.Serialization.System.ValueTupleSerializer-6.html": {
    "href": "api/MarymoorStudios.Core.Serialization.System.ValueTupleSerializer-6.html",
    "title": "Class ValueTupleSerializer<T1, T2, T3, T4, T5, T6>",
    "summary": "Class ValueTupleSerializer<T1, T2, T3, T4, T5, T6> Namespace MarymoorStudios.Core.Serialization.System Assembly MarymoorStudios.Core.Serialization.dll public sealed class ValueTupleSerializer<T1, T2, T3, T4, T5, T6> : Serializer<(T1, T2, T3, T4, T5, T6)> Type Parameters T1 T2 T3 T4 T5 T6 Inheritance object Serializer Serializer<(T1, T2, T3, T4, T5, T6)> ValueTupleSerializer<T1, T2, T3, T4, T5, T6> Inherited Members Serializer<(T1, T2, T3, T4, T5, T6)>.SizeOf(SerializationContext, in (T1, T2, T3, T4, T5, T6)) Serializer<(T1, T2, T3, T4, T5, T6)>.Write(SerializationContext, ref RowBuffer, in (T1, T2, T3, T4, T5, T6)) Serializer<(T1, T2, T3, T4, T5, T6)>.TryRead(SerializationContext, ref ReadOnlyRowBuffer, out (T1, T2, T3, T4, T5, T6)) Serializer<(T1, T2, T3, T4, T5, T6)>.Default Serializer.Register(Type, Type) Serializer.TrySizeOfDerived<TSuper>(SerializationContext, in TSuper, out int) Serializer.TryWriteDerived<TSuper>(SerializationContext, ref RowBuffer, in TSuper) Serializer.Slice(TypeId, ref TypeId, SerializationContext, ref ReadOnlyRowBuffer) Serializer.Dice(int, SerializationContext, ref ReadOnlyRowBuffer) Serializer.TryReadDerived<TSuper>(TypeId, SerializationContext, ref ReadOnlyRowBuffer, out TSuper) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors ValueTupleSerializer() public ValueTupleSerializer() Properties TypeId public static TypeId TypeId { get; } Property Value TypeId Methods GetTypeId() public override TypeId GetTypeId() Returns TypeId SizeOf(SerializationContext, in (T1, T2, T3, T4, T5, T6)) public override int SizeOf(SerializationContext context, in (T1, T2, T3, T4, T5, T6) value) Parameters context SerializationContext value (T1, T2, T3, T4, T5, T6) Returns int TryRead(SerializationContext, ref ReadOnlyRowBuffer, out (T1, T2, T3, T4, T5, T6)) public override bool TryRead(SerializationContext context, ref ReadOnlyRowBuffer buffer, out (T1, T2, T3, T4, T5, T6) value) Parameters context SerializationContext buffer ReadOnlyRowBuffer value (T1, T2, T3, T4, T5, T6) Returns bool Write(SerializationContext, ref RowBuffer, in (T1, T2, T3, T4, T5, T6)) public override void Write(SerializationContext context, ref RowBuffer buffer, in (T1, T2, T3, T4, T5, T6) value) Parameters context SerializationContext buffer RowBuffer value (T1, T2, T3, T4, T5, T6)"
  },
  "api/MarymoorStudios.Core.Serialization.System.ValueTupleSerializer-7.html": {
    "href": "api/MarymoorStudios.Core.Serialization.System.ValueTupleSerializer-7.html",
    "title": "Class ValueTupleSerializer<T1, T2, T3, T4, T5, T6, T7>",
    "summary": "Class ValueTupleSerializer<T1, T2, T3, T4, T5, T6, T7> Namespace MarymoorStudios.Core.Serialization.System Assembly MarymoorStudios.Core.Serialization.dll public sealed class ValueTupleSerializer<T1, T2, T3, T4, T5, T6, T7> : Serializer<(T1, T2, T3, T4, T5, T6, T7)> Type Parameters T1 T2 T3 T4 T5 T6 T7 Inheritance object Serializer Serializer<(T1, T2, T3, T4, T5, T6, T7)> ValueTupleSerializer<T1, T2, T3, T4, T5, T6, T7> Inherited Members Serializer<(T1, T2, T3, T4, T5, T6, T7)>.SizeOf(SerializationContext, in (T1, T2, T3, T4, T5, T6, T7)) Serializer<(T1, T2, T3, T4, T5, T6, T7)>.Write(SerializationContext, ref RowBuffer, in (T1, T2, T3, T4, T5, T6, T7)) Serializer<(T1, T2, T3, T4, T5, T6, T7)>.TryRead(SerializationContext, ref ReadOnlyRowBuffer, out (T1, T2, T3, T4, T5, T6, T7)) Serializer<(T1, T2, T3, T4, T5, T6, T7)>.Default Serializer.Register(Type, Type) Serializer.TrySizeOfDerived<TSuper>(SerializationContext, in TSuper, out int) Serializer.TryWriteDerived<TSuper>(SerializationContext, ref RowBuffer, in TSuper) Serializer.Slice(TypeId, ref TypeId, SerializationContext, ref ReadOnlyRowBuffer) Serializer.Dice(int, SerializationContext, ref ReadOnlyRowBuffer) Serializer.TryReadDerived<TSuper>(TypeId, SerializationContext, ref ReadOnlyRowBuffer, out TSuper) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors ValueTupleSerializer() public ValueTupleSerializer() Properties TypeId public static TypeId TypeId { get; } Property Value TypeId Methods GetTypeId() public override TypeId GetTypeId() Returns TypeId SizeOf(SerializationContext, in (T1, T2, T3, T4, T5, T6, T7)) public override int SizeOf(SerializationContext context, in (T1, T2, T3, T4, T5, T6, T7) value) Parameters context SerializationContext value (T1, T2, T3, T4, T5, T6, T7) Returns int TryRead(SerializationContext, ref ReadOnlyRowBuffer, out (T1, T2, T3, T4, T5, T6, T7)) public override bool TryRead(SerializationContext context, ref ReadOnlyRowBuffer buffer, out (T1, T2, T3, T4, T5, T6, T7) value) Parameters context SerializationContext buffer ReadOnlyRowBuffer value (T1, T2, T3, T4, T5, T6, T7) Returns bool Write(SerializationContext, ref RowBuffer, in (T1, T2, T3, T4, T5, T6, T7)) public override void Write(SerializationContext context, ref RowBuffer buffer, in (T1, T2, T3, T4, T5, T6, T7) value) Parameters context SerializationContext buffer RowBuffer value (T1, T2, T3, T4, T5, T6, T7)"
  },
  "api/MarymoorStudios.Core.Serialization.System.ValueTupleSerializer-8.html": {
    "href": "api/MarymoorStudios.Core.Serialization.System.ValueTupleSerializer-8.html",
    "title": "Class ValueTupleSerializer<T1, T2, T3, T4, T5, T6, T7, TRest>",
    "summary": "Class ValueTupleSerializer<T1, T2, T3, T4, T5, T6, T7, TRest> Namespace MarymoorStudios.Core.Serialization.System Assembly MarymoorStudios.Core.Serialization.dll public sealed class ValueTupleSerializer<T1, T2, T3, T4, T5, T6, T7, TRest> : Serializer<ValueTuple<T1, T2, T3, T4, T5, T6, T7, TRest>> where TRest : struct Type Parameters T1 T2 T3 T4 T5 T6 T7 TRest Inheritance object Serializer Serializer<ValueTuple<T1, T2, T3, T4, T5, T6, T7, TRest>> ValueTupleSerializer<T1, T2, T3, T4, T5, T6, T7, TRest> Inherited Members Serializer<ValueTuple<T1, T2, T3, T4, T5, T6, T7, TRest>>.SizeOf(SerializationContext, in ValueTuple<T1, T2, T3, T4, T5, T6, T7, TRest>) Serializer<ValueTuple<T1, T2, T3, T4, T5, T6, T7, TRest>>.Write(SerializationContext, ref RowBuffer, in ValueTuple<T1, T2, T3, T4, T5, T6, T7, TRest>) Serializer<ValueTuple<T1, T2, T3, T4, T5, T6, T7, TRest>>.TryRead(SerializationContext, ref ReadOnlyRowBuffer, out ValueTuple<T1, T2, T3, T4, T5, T6, T7, TRest>) Serializer<ValueTuple<T1, T2, T3, T4, T5, T6, T7, TRest>>.Default Serializer.Register(Type, Type) Serializer.TrySizeOfDerived<TSuper>(SerializationContext, in TSuper, out int) Serializer.TryWriteDerived<TSuper>(SerializationContext, ref RowBuffer, in TSuper) Serializer.Slice(TypeId, ref TypeId, SerializationContext, ref ReadOnlyRowBuffer) Serializer.Dice(int, SerializationContext, ref ReadOnlyRowBuffer) Serializer.TryReadDerived<TSuper>(TypeId, SerializationContext, ref ReadOnlyRowBuffer, out TSuper) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors ValueTupleSerializer() public ValueTupleSerializer() Properties TypeId public static TypeId TypeId { get; } Property Value TypeId Methods GetTypeId() public override TypeId GetTypeId() Returns TypeId SizeOf(SerializationContext, in ValueTuple<T1, T2, T3, T4, T5, T6, T7, TRest>) public override int SizeOf(SerializationContext context, in ValueTuple<T1, T2, T3, T4, T5, T6, T7, TRest> value) Parameters context SerializationContext value ValueTuple<T1, T2, T3, T4, T5, T6, T7, TRest> Returns int TryRead(SerializationContext, ref ReadOnlyRowBuffer, out ValueTuple<T1, T2, T3, T4, T5, T6, T7, TRest>) public override bool TryRead(SerializationContext context, ref ReadOnlyRowBuffer buffer, out ValueTuple<T1, T2, T3, T4, T5, T6, T7, TRest> value) Parameters context SerializationContext buffer ReadOnlyRowBuffer value ValueTuple<T1, T2, T3, T4, T5, T6, T7, TRest> Returns bool Write(SerializationContext, ref RowBuffer, in ValueTuple<T1, T2, T3, T4, T5, T6, T7, TRest>) public override void Write(SerializationContext context, ref RowBuffer buffer, in ValueTuple<T1, T2, T3, T4, T5, T6, T7, TRest> value) Parameters context SerializationContext buffer RowBuffer value ValueTuple<T1, T2, T3, T4, T5, T6, T7, TRest>"
  },
  "api/MarymoorStudios.Core.Serialization.System.html": {
    "href": "api/MarymoorStudios.Core.Serialization.System.html",
    "title": "Namespace MarymoorStudios.Core.Serialization.System",
    "summary": "Namespace MarymoorStudios.Core.Serialization.System Classes ArraySerializer<T> BooleanSerializer CollectionsSerializer<T> DateTimeSerializer DecimalSerializer DefaultSerializationContext Default SerializationContext that does nothing. ExceptionSerializer Float32Serializer Float64Serializer GuidSerializer IEnumerableSerializer<T> IPAddressSerializer IPEndPointSerializer Int16Serializer Int32Serializer Int64Serializer Int8Serializer ListSerializer<T> MemorySerializer<T> NullableSerializer<T> ObjectSerializer OwnedMemSerializer<T> ReadOnlyMemorySerializer<T> ReadOnlySpanSerializer<T> SerializationContext Abstract base type for a context passed to Serializer<T> during serialization and materialization operations. Serializer Serializer<T> SpanSerializer<T> StringSerializer TimeSpanSerializer TypeIdSerializer TypeMarkerSerializer UInt16Serializer UInt32Serializer UInt64Serializer UInt8Serializer ValueTupleSerializer<T1> ValueTupleSerializer<T1, T2> ValueTupleSerializer<T1, T2, T3> ValueTupleSerializer<T1, T2, T3, T4> ValueTupleSerializer<T1, T2, T3, T4, T5> ValueTupleSerializer<T1, T2, T3, T4, T5, T6> ValueTupleSerializer<T1, T2, T3, T4, T5, T6, T7> ValueTupleSerializer<T1, T2, T3, T4, T5, T6, T7, TRest> Structs ReadOnlyRowBuffer RowBuffer TypeId Interfaces IDerivedSerializer IDerivedSerializer<T> Enums TypeMarker 1-byte type code indicating the structure of the following bytes."
  },
  "api/MarymoorStudios.Core.Serialization.html": {
    "href": "api/MarymoorStudios.Core.Serialization.html",
    "title": "Namespace MarymoorStudios.Core.Serialization",
    "summary": "Namespace MarymoorStudios.Core.Serialization Classes ArrayMemoryResizer DataContractAttribute DataContractSerializer DataMemberAttribute RecordVisitor Visitor that can walk the structure of any serialized record. SerializationException Exception thrown during serialization or deserialization. SerializationExceptionSerializer Interfaces IMemoryResizer"
  },
  "api/MarymoorStudios.Core.SlabMemoryPool-1.html": {
    "href": "api/MarymoorStudios.Core.SlabMemoryPool-1.html",
    "title": "Class SlabMemoryPool<T>",
    "summary": "Class SlabMemoryPool<T> Namespace MarymoorStudios.Core Assembly MarymoorStudios.Core.dll public sealed class SlabMemoryPool<T> : MemoryPool<T>, IDisposable where T : unmanaged Type Parameters T Inheritance object MemoryPool<T> SlabMemoryPool<T> Implements IDisposable Inherited Members MemoryPool<T>.GetMemory(int) MemoryPool<T>.Dispose() object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors SlabMemoryPool(int, int) public SlabMemoryPool(int maxSize, int chunksPerSlab) Parameters maxSize int chunksPerSlab int Properties MaxSize Returns the maximum buffer size supported by this pool. public override int MaxSize { get; } Property Value int Remarks The buffer size is the maximum number of T elements that a memory can contain. Note: This value must be constant for the lifetime of the pool. Methods Dispose(bool) Implements standard Dispose-pattern. protected override void Dispose(bool disposing) Parameters disposing bool True if disposing, false if finalizing. Remarks When disposing is true then managed resources should be released. When disposing is false then the object has already gone through garbage collection and only native resources should be touched. GetMemory() Returns Memory<T> of size MaxSize. public override OwnedMem<T> GetMemory() Returns OwnedMem<T>"
  },
  "api/MarymoorStudios.Core.SpanBase58Extensions.html": {
    "href": "api/MarymoorStudios.Core.SpanBase58Extensions.html",
    "title": "Class SpanBase58Extensions",
    "summary": "Class SpanBase58Extensions Namespace MarymoorStudios.Core Assembly MarymoorStudios.Core.dll Base58 Encoder. public static class SpanBase58Extensions Inheritance object SpanBase58Extensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Remarks Encodes binary strings using only alphanumerics (avoiding 0IOl for visual clarity). Methods ToBase58String(ReadOnlySpan<byte>) public static string ToBase58String(this ReadOnlySpan<byte> bytes) Parameters bytes ReadOnlySpan<byte> Returns string ToBase58String(Span<byte>) public static string ToBase58String(this Span<byte> bytes) Parameters bytes Span<byte> Returns string TryParseBase58String(ReadOnlySpan<char>, out byte[]) public static bool TryParseBase58String(this ReadOnlySpan<char> base58Chars, out byte[] result) Parameters base58Chars ReadOnlySpan<char> result byte[] Returns bool TryParseBase58String(string, out byte[]) public static bool TryParseBase58String(this string base58Chars, out byte[] result) Parameters base58Chars string result byte[] Returns bool"
  },
  "api/MarymoorStudios.Core.SpanHexExtensions.html": {
    "href": "api/MarymoorStudios.Core.SpanHexExtensions.html",
    "title": "Class SpanHexExtensions",
    "summary": "Class SpanHexExtensions Namespace MarymoorStudios.Core Assembly MarymoorStudios.Core.dll public static class SpanHexExtensions Inheritance object SpanHexExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods ToHexString(ReadOnlySpan<byte>) public static string ToHexString(this ReadOnlySpan<byte> bytes) Parameters bytes ReadOnlySpan<byte> Returns string ToHexString(Span<byte>) public static string ToHexString(this Span<byte> bytes) Parameters bytes Span<byte> Returns string TryParseHexString(ReadOnlySpan<char>, out byte[]) public static bool TryParseHexString(this ReadOnlySpan<char> hexChars, out byte[] result) Parameters hexChars ReadOnlySpan<char> result byte[] Returns bool TryParseHexString(ReadOnlySpan<char>, Span<byte>) public static bool TryParseHexString(this ReadOnlySpan<char> hexChars, Span<byte> result) Parameters hexChars ReadOnlySpan<char> result Span<byte> Returns bool TryParseHexString(string, out byte[]) public static bool TryParseHexString(this string hexChars, out byte[] result) Parameters hexChars string result byte[] Returns bool"
  },
  "api/MarymoorStudios.Core.Steamworks.AccountID.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.AccountID.html",
    "title": "Struct AccountID",
    "summary": "Struct AccountID Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll [DataContract] public readonly struct AccountID : IEquatable<AccountID>, IComparable<AccountID> Implements IEquatable<AccountID> IComparable<AccountID> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors AccountID(uint) public AccountID(uint id) Parameters id uint Properties Id The underlying value. [DataMember] public uint Id { get; } Property Value uint Invalid The invalid id. public static AccountID Invalid { get; } Property Value AccountID IsValid True if not Invalid. public bool IsValid { get; } Property Value bool Methods CompareTo(AccountID) Value-based comparison. public int CompareTo(AccountID other) Parameters other AccountID Returns int Equals(AccountID) Value-based equality. public bool Equals(AccountID other) Parameters other AccountID Returns bool Equals(object?) public override bool Equals(object? obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() public override string ToString() Returns string Operators operator ==(AccountID, AccountID) Value-based equality. public static bool operator ==(AccountID left, AccountID right) Parameters left AccountID right AccountID Returns bool operator >(AccountID, AccountID) Value-based comparison. public static bool operator >(AccountID left, AccountID right) Parameters left AccountID right AccountID Returns bool operator >=(AccountID, AccountID) Value-based comparison. public static bool operator >=(AccountID left, AccountID right) Parameters left AccountID right AccountID Returns bool operator !=(AccountID, AccountID) Value-based equality. public static bool operator !=(AccountID left, AccountID right) Parameters left AccountID right AccountID Returns bool operator <(AccountID, AccountID) Value-based comparison. public static bool operator <(AccountID left, AccountID right) Parameters left AccountID right AccountID Returns bool operator <=(AccountID, AccountID) Value-based comparison. public static bool operator <=(AccountID left, AccountID right) Parameters left AccountID right AccountID Returns bool"
  },
  "api/MarymoorStudios.Core.Steamworks.AccountIDSerializer.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.AccountIDSerializer.html",
    "title": "Class AccountIDSerializer",
    "summary": "Class AccountIDSerializer Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public sealed class AccountIDSerializer : Serializer<AccountID> Inheritance object Serializer Serializer<AccountID> AccountIDSerializer Inherited Members Serializer<AccountID>.Default Serializer.Register(Type, Type) Serializer.TrySizeOfDerived<TSuper>(SerializationContext, in TSuper, out int) Serializer.TryWriteDerived<TSuper>(SerializationContext, ref RowBuffer, in TSuper) Serializer.Slice(TypeId, ref TypeId, SerializationContext, ref ReadOnlyRowBuffer) Serializer.Dice(int, SerializationContext, ref ReadOnlyRowBuffer) Serializer.TryReadDerived<TSuper>(TypeId, SerializationContext, ref ReadOnlyRowBuffer, out TSuper) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors AccountIDSerializer() public AccountIDSerializer() Properties TypeId public static TypeId TypeId { get; } Property Value TypeId Methods GetTypeId() public override TypeId GetTypeId() Returns TypeId SizeOf(SerializationContext, in AccountID) public override int SizeOf(SerializationContext context, in AccountID value) Parameters context SerializationContext value AccountID Returns int SizeOfSegment(SerializationContext, in AccountID) public static int SizeOfSegment(SerializationContext context, in AccountID value) Parameters context SerializationContext value AccountID Returns int TryRead(SerializationContext, ref ReadOnlyRowBuffer, out AccountID) public override bool TryRead(SerializationContext context, ref ReadOnlyRowBuffer buffer, out AccountID value) Parameters context SerializationContext buffer ReadOnlyRowBuffer value AccountID Returns bool TryReadSegment(SerializationContext, ref ReadOnlyRowBuffer, out uint) public static bool TryReadSegment(SerializationContext context, ref ReadOnlyRowBuffer buffer, out uint memberId) Parameters context SerializationContext buffer ReadOnlyRowBuffer memberId uint Returns bool Write(SerializationContext, ref RowBuffer, in AccountID) public override void Write(SerializationContext context, ref RowBuffer buffer, in AccountID value) Parameters context SerializationContext buffer RowBuffer value AccountID WriteSegment(SerializationContext, ref RowBuffer, in AccountID) public static void WriteSegment(SerializationContext context, ref RowBuffer buffer, in AccountID value) Parameters context SerializationContext buffer RowBuffer value AccountID"
  },
  "api/MarymoorStudios.Core.Steamworks.ActiveBeaconsUpdated.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ActiveBeaconsUpdated.html",
    "title": "Struct ActiveBeaconsUpdated",
    "summary": "Struct ActiveBeaconsUpdated Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct ActiveBeaconsUpdated : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 5306 Field Value int"
  },
  "api/MarymoorStudios.Core.Steamworks.AddAppDependencyResult.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.AddAppDependencyResult.html",
    "title": "Struct AddAppDependencyResult",
    "summary": "Struct AddAppDependencyResult Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct AddAppDependencyResult : ICallResult Implements ICallResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields AppId public AppId AppId Field Value AppId CallbackId public const int CallbackId = 3414 Field Value int PublishedFileId public PublishedFileId PublishedFileId Field Value PublishedFileId Result public EResult Result Field Value EResult"
  },
  "api/MarymoorStudios.Core.Steamworks.AddUGCDependencyResult.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.AddUGCDependencyResult.html",
    "title": "Struct AddUGCDependencyResult",
    "summary": "Struct AddUGCDependencyResult Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct AddUGCDependencyResult : ICallResult Implements ICallResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 3412 Field Value int ChildPublishedFileId public PublishedFileId ChildPublishedFileId Field Value PublishedFileId PublishedFileId public PublishedFileId PublishedFileId Field Value PublishedFileId Result public EResult Result Field Value EResult"
  },
  "api/MarymoorStudios.Core.Steamworks.AppId.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.AppId.html",
    "title": "Struct AppId",
    "summary": "Struct AppId Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public readonly struct AppId : IEquatable<AppId>, IComparable<AppId> Implements IEquatable<AppId> IComparable<AppId> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors AppId(uint) public AppId(uint id) Parameters id uint Properties Id The underlying value. public uint Id { get; } Property Value uint Invalid The invalid id. public static uint Invalid { get; } Property Value uint IsValid True if not Invalid. public bool IsValid { get; } Property Value bool Methods CompareTo(AppId) Value-based comparison. public int CompareTo(AppId other) Parameters other AppId Returns int Equals(AppId) Value-based equality. public bool Equals(AppId other) Parameters other AppId Returns bool Equals(object?) public override bool Equals(object? obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() public override string ToString() Returns string Operators operator ==(AppId, AppId) Value-based equality. public static bool operator ==(AppId left, AppId right) Parameters left AppId right AppId Returns bool operator >(AppId, AppId) Value-based comparison. public static bool operator >(AppId left, AppId right) Parameters left AppId right AppId Returns bool operator >=(AppId, AppId) Value-based comparison. public static bool operator >=(AppId left, AppId right) Parameters left AppId right AppId Returns bool operator !=(AppId, AppId) Value-based equality. public static bool operator !=(AppId left, AppId right) Parameters left AppId right AppId Returns bool operator <(AppId, AppId) Value-based comparison. public static bool operator <(AppId left, AppId right) Parameters left AppId right AppId Returns bool operator <=(AppId, AppId) Value-based comparison. public static bool operator <=(AppId left, AppId right) Parameters left AppId right AppId Returns bool"
  },
  "api/MarymoorStudios.Core.Steamworks.AppProofOfPurchaseKeyResponse.KeyType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.AppProofOfPurchaseKeyResponse.KeyType.html",
    "title": "Struct AppProofOfPurchaseKeyResponse.KeyType",
    "summary": "Struct AppProofOfPurchaseKeyResponse.KeyType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct AppProofOfPurchaseKeyResponse.KeyType Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields Length public const int Length = 240 Field Value int Operators implicit operator string(KeyType) public static implicit operator string(AppProofOfPurchaseKeyResponse.KeyType v) Parameters v AppProofOfPurchaseKeyResponse.KeyType Returns string implicit operator KeyType(string) public static implicit operator AppProofOfPurchaseKeyResponse.KeyType(string s) Parameters s string Returns AppProofOfPurchaseKeyResponse.KeyType"
  },
  "api/MarymoorStudios.Core.Steamworks.AppProofOfPurchaseKeyResponse.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.AppProofOfPurchaseKeyResponse.html",
    "title": "Struct AppProofOfPurchaseKeyResponse",
    "summary": "Struct AppProofOfPurchaseKeyResponse Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct AppProofOfPurchaseKeyResponse : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields AppId public uint AppId Field Value uint CallbackId public const int CallbackId = 1021 Field Value int Key public AppProofOfPurchaseKeyResponse.KeyType Key Field Value AppProofOfPurchaseKeyResponse.KeyType KeyLength public uint KeyLength Field Value uint Result public EResult Result Field Value EResult"
  },
  "api/MarymoorStudios.Core.Steamworks.AppResumingFromSuspend.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.AppResumingFromSuspend.html",
    "title": "Struct AppResumingFromSuspend",
    "summary": "Struct AppResumingFromSuspend Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct AppResumingFromSuspend : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 736 Field Value int"
  },
  "api/MarymoorStudios.Core.Steamworks.AssociateWithClanResult.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.AssociateWithClanResult.html",
    "title": "Struct AssociateWithClanResult",
    "summary": "Struct AssociateWithClanResult Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct AssociateWithClanResult : ICallResult Implements ICallResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 210 Field Value int Result public EResult Result Field Value EResult"
  },
  "api/MarymoorStudios.Core.Steamworks.AudioPlayback_Status.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.AudioPlayback_Status.html",
    "title": "Enum AudioPlayback_Status",
    "summary": "Enum AudioPlayback_Status Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum AudioPlayback_Status Fields Undefined = 0 Playing = 1 Paused = 2 Idle = 3"
  },
  "api/MarymoorStudios.Core.Steamworks.AvailableBeaconLocationsUpdated.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.AvailableBeaconLocationsUpdated.html",
    "title": "Struct AvailableBeaconLocationsUpdated",
    "summary": "Struct AvailableBeaconLocationsUpdated Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct AvailableBeaconLocationsUpdated : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 5305 Field Value int"
  },
  "api/MarymoorStudios.Core.Steamworks.AvatarImageLoaded.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.AvatarImageLoaded.html",
    "title": "Struct AvatarImageLoaded",
    "summary": "Struct AvatarImageLoaded Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct AvatarImageLoaded : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 334 Field Value int Image public int Image Field Value int SteamID public CSteamID SteamID Field Value CSteamID Tall public int Tall Field Value int Wide public int Wide Field Value int"
  },
  "api/MarymoorStudios.Core.Steamworks.BroadcastUploadStart.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.BroadcastUploadStart.html",
    "title": "Struct BroadcastUploadStart",
    "summary": "Struct BroadcastUploadStart Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct BroadcastUploadStart : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 4604 Field Value int Properties IsRTMP public bool IsRTMP { get; set; } Property Value bool"
  },
  "api/MarymoorStudios.Core.Steamworks.BroadcastUploadStop.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.BroadcastUploadStop.html",
    "title": "Struct BroadcastUploadStop",
    "summary": "Struct BroadcastUploadStop Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct BroadcastUploadStop : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 4605 Field Value int Result public EBroadcastUploadResult Result Field Value EBroadcastUploadResult"
  },
  "api/MarymoorStudios.Core.Steamworks.CGameID.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.CGameID.html",
    "title": "Struct CGameID",
    "summary": "Struct CGameID Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll [DataContract] public readonly struct CGameID : IEquatable<CGameID>, IComparable<CGameID> Implements IEquatable<CGameID> IComparable<CGameID> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors CGameID(ulong) public CGameID(ulong id) Parameters id ulong Properties Id The underlying value. [DataMember] public ulong Id { get; } Property Value ulong Invalid The invalid id. public static CGameID Invalid { get; } Property Value CGameID IsValid True if not Invalid. public bool IsValid { get; } Property Value bool Methods CompareTo(CGameID) Value-based comparison. public int CompareTo(CGameID other) Parameters other CGameID Returns int Equals(CGameID) Value-based equality. public bool Equals(CGameID other) Parameters other CGameID Returns bool Equals(object?) public override bool Equals(object? obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() public override string ToString() Returns string Operators operator ==(CGameID, CGameID) Value-based equality. public static bool operator ==(CGameID left, CGameID right) Parameters left CGameID right CGameID Returns bool operator >(CGameID, CGameID) Value-based comparison. public static bool operator >(CGameID left, CGameID right) Parameters left CGameID right CGameID Returns bool operator >=(CGameID, CGameID) Value-based comparison. public static bool operator >=(CGameID left, CGameID right) Parameters left CGameID right CGameID Returns bool operator !=(CGameID, CGameID) Value-based equality. public static bool operator !=(CGameID left, CGameID right) Parameters left CGameID right CGameID Returns bool operator <(CGameID, CGameID) Value-based comparison. public static bool operator <(CGameID left, CGameID right) Parameters left CGameID right CGameID Returns bool operator <=(CGameID, CGameID) Value-based comparison. public static bool operator <=(CGameID left, CGameID right) Parameters left CGameID right CGameID Returns bool"
  },
  "api/MarymoorStudios.Core.Steamworks.CGameIDSerializer.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.CGameIDSerializer.html",
    "title": "Class CGameIDSerializer",
    "summary": "Class CGameIDSerializer Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public sealed class CGameIDSerializer : Serializer<CGameID> Inheritance object Serializer Serializer<CGameID> CGameIDSerializer Inherited Members Serializer<CGameID>.Default Serializer.Register(Type, Type) Serializer.TrySizeOfDerived<TSuper>(SerializationContext, in TSuper, out int) Serializer.TryWriteDerived<TSuper>(SerializationContext, ref RowBuffer, in TSuper) Serializer.Slice(TypeId, ref TypeId, SerializationContext, ref ReadOnlyRowBuffer) Serializer.Dice(int, SerializationContext, ref ReadOnlyRowBuffer) Serializer.TryReadDerived<TSuper>(TypeId, SerializationContext, ref ReadOnlyRowBuffer, out TSuper) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors CGameIDSerializer() public CGameIDSerializer() Properties TypeId public static TypeId TypeId { get; } Property Value TypeId Methods GetTypeId() public override TypeId GetTypeId() Returns TypeId SizeOf(SerializationContext, in CGameID) public override int SizeOf(SerializationContext context, in CGameID value) Parameters context SerializationContext value CGameID Returns int SizeOfSegment(SerializationContext, in CGameID) public static int SizeOfSegment(SerializationContext context, in CGameID value) Parameters context SerializationContext value CGameID Returns int TryRead(SerializationContext, ref ReadOnlyRowBuffer, out CGameID) public override bool TryRead(SerializationContext context, ref ReadOnlyRowBuffer buffer, out CGameID value) Parameters context SerializationContext buffer ReadOnlyRowBuffer value CGameID Returns bool TryReadSegment(SerializationContext, ref ReadOnlyRowBuffer, out ulong) public static bool TryReadSegment(SerializationContext context, ref ReadOnlyRowBuffer buffer, out ulong memberId) Parameters context SerializationContext buffer ReadOnlyRowBuffer memberId ulong Returns bool Write(SerializationContext, ref RowBuffer, in CGameID) public override void Write(SerializationContext context, ref RowBuffer buffer, in CGameID value) Parameters context SerializationContext buffer RowBuffer value CGameID WriteSegment(SerializationContext, ref RowBuffer, in CGameID) public static void WriteSegment(SerializationContext context, ref RowBuffer buffer, in CGameID value) Parameters context SerializationContext buffer RowBuffer value CGameID"
  },
  "api/MarymoorStudios.Core.Steamworks.CSteamID.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.CSteamID.html",
    "title": "Struct CSteamID",
    "summary": "Struct CSteamID Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll [DataContract] public struct CSteamID : IEquatable<CSteamID>, IComparable<CSteamID> Implements IEquatable<CSteamID> IComparable<CSteamID> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors CSteamID(AccountID, EUniverse, EAccountType) public CSteamID(AccountID unAccountID, EUniverse eUniverse, EAccountType eAccountType) Parameters unAccountID AccountID eUniverse EUniverse eAccountType EAccountType CSteamID(AccountID, uint, EUniverse, EAccountType) public CSteamID(AccountID unAccountID, uint unAccountInstance, EUniverse eUniverse, EAccountType eAccountType) Parameters unAccountID AccountID unAccountInstance uint eUniverse EUniverse eAccountType EAccountType CSteamID(ulong) public CSteamID(ulong id) Parameters id ulong Fields m_id public ulong m_id Field Value ulong Properties AccountID public AccountID AccountID { readonly get; set; } Property Value AccountID AccountInstance public uint AccountInstance { readonly get; set; } Property Value uint AccountType public EAccountType AccountType { readonly get; set; } Property Value EAccountType Id The underlying value. [DataMember] public readonly ulong Id { get; } Property Value ulong Invalid The invalid id. public static CSteamID Invalid { get; } Property Value CSteamID LanModeGS public static CSteamID LanModeGS { get; } Property Value CSteamID Nil public static CSteamID Nil { get; } Property Value CSteamID NonSteamGS public static CSteamID NonSteamGS { get; } Property Value CSteamID NotInitYetGS public static CSteamID NotInitYetGS { get; } Property Value CSteamID OutOfDateGS public static CSteamID OutOfDateGS { get; } Property Value CSteamID Universe public EUniverse Universe { readonly get; set; } Property Value EUniverse Methods BAnonAccount() public readonly bool BAnonAccount() Returns bool BAnonGameServerAccount() public readonly bool BAnonGameServerAccount() Returns bool BAnonUserAccount() public readonly bool BAnonUserAccount() Returns bool BBlankAnonAccount() public readonly bool BBlankAnonAccount() Returns bool BChatAccount() public readonly bool BChatAccount() Returns bool BClanAccount() public readonly bool BClanAccount() Returns bool BConsoleUserAccount() public readonly bool BConsoleUserAccount() Returns bool BContentServerAccount() public readonly bool BContentServerAccount() Returns bool BGameServerAccount() public readonly bool BGameServerAccount() Returns bool BIndividualAccount() public readonly bool BIndividualAccount() Returns bool BPersistentGameServerAccount() public readonly bool BPersistentGameServerAccount() Returns bool Clear() public void Clear() CompareTo(CSteamID) Value-based comparison. public readonly int CompareTo(CSteamID other) Parameters other CSteamID Returns int CreateBlankAnonLogon(EUniverse) public void CreateBlankAnonLogon(EUniverse eUniverse) Parameters eUniverse EUniverse CreateBlankAnonUserLogon(EUniverse) public void CreateBlankAnonUserLogon(EUniverse eUniverse) Parameters eUniverse EUniverse Equals(CSteamID) Value-based equality. public readonly bool Equals(CSteamID other) Parameters other CSteamID Returns bool Equals(object?) public override readonly bool Equals(object? obj) Parameters obj object Returns bool GetHashCode() public override readonly int GetHashCode() Returns int InstancedSet(AccountID, uint, EUniverse, EAccountType) public void InstancedSet(AccountID unAccountID, uint unInstance, EUniverse eUniverse, EAccountType eAccountType) Parameters unAccountID AccountID unInstance uint eUniverse EUniverse eAccountType EAccountType IsLobby() public readonly bool IsLobby() Returns bool IsValid() public readonly bool IsValid() Returns bool Set(AccountID, EUniverse, EAccountType) public void Set(AccountID unAccountID, EUniverse eUniverse, EAccountType eAccountType) Parameters unAccountID AccountID eUniverse EUniverse eAccountType EAccountType ToString() public override readonly string ToString() Returns string Operators operator ==(CSteamID, CSteamID) Value-based equality. public static bool operator ==(CSteamID left, CSteamID right) Parameters left CSteamID right CSteamID Returns bool operator >(CSteamID, CSteamID) Value-based comparison. public static bool operator >(CSteamID left, CSteamID right) Parameters left CSteamID right CSteamID Returns bool operator >=(CSteamID, CSteamID) Value-based comparison. public static bool operator >=(CSteamID left, CSteamID right) Parameters left CSteamID right CSteamID Returns bool operator !=(CSteamID, CSteamID) Value-based equality. public static bool operator !=(CSteamID left, CSteamID right) Parameters left CSteamID right CSteamID Returns bool operator <(CSteamID, CSteamID) Value-based comparison. public static bool operator <(CSteamID left, CSteamID right) Parameters left CSteamID right CSteamID Returns bool operator <=(CSteamID, CSteamID) Value-based comparison. public static bool operator <=(CSteamID left, CSteamID right) Parameters left CSteamID right CSteamID Returns bool"
  },
  "api/MarymoorStudios.Core.Steamworks.CSteamIDSerializer.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.CSteamIDSerializer.html",
    "title": "Class CSteamIDSerializer",
    "summary": "Class CSteamIDSerializer Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public sealed class CSteamIDSerializer : Serializer<CSteamID> Inheritance object Serializer Serializer<CSteamID> CSteamIDSerializer Inherited Members Serializer<CSteamID>.Default Serializer.Register(Type, Type) Serializer.TrySizeOfDerived<TSuper>(SerializationContext, in TSuper, out int) Serializer.TryWriteDerived<TSuper>(SerializationContext, ref RowBuffer, in TSuper) Serializer.Slice(TypeId, ref TypeId, SerializationContext, ref ReadOnlyRowBuffer) Serializer.Dice(int, SerializationContext, ref ReadOnlyRowBuffer) Serializer.TryReadDerived<TSuper>(TypeId, SerializationContext, ref ReadOnlyRowBuffer, out TSuper) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors CSteamIDSerializer() public CSteamIDSerializer() Properties TypeId public static TypeId TypeId { get; } Property Value TypeId Methods GetTypeId() public override TypeId GetTypeId() Returns TypeId SizeOf(SerializationContext, in CSteamID) public override int SizeOf(SerializationContext context, in CSteamID value) Parameters context SerializationContext value CSteamID Returns int SizeOfSegment(SerializationContext, in CSteamID) public static int SizeOfSegment(SerializationContext context, in CSteamID value) Parameters context SerializationContext value CSteamID Returns int TryRead(SerializationContext, ref ReadOnlyRowBuffer, out CSteamID) public override bool TryRead(SerializationContext context, ref ReadOnlyRowBuffer buffer, out CSteamID value) Parameters context SerializationContext buffer ReadOnlyRowBuffer value CSteamID Returns bool TryReadSegment(SerializationContext, ref ReadOnlyRowBuffer, out ulong) public static bool TryReadSegment(SerializationContext context, ref ReadOnlyRowBuffer buffer, out ulong memberId) Parameters context SerializationContext buffer ReadOnlyRowBuffer memberId ulong Returns bool Write(SerializationContext, ref RowBuffer, in CSteamID) public override void Write(SerializationContext context, ref RowBuffer buffer, in CSteamID value) Parameters context SerializationContext buffer RowBuffer value CSteamID WriteSegment(SerializationContext, ref RowBuffer, in CSteamID) public static void WriteSegment(SerializationContext context, ref RowBuffer buffer, in CSteamID value) Parameters context SerializationContext buffer RowBuffer value CSteamID"
  },
  "api/MarymoorStudios.Core.Steamworks.CallbackAction-1.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.CallbackAction-1.html",
    "title": "Delegate CallbackAction<T>",
    "summary": "Delegate CallbackAction<T> Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll A callback action. public delegate void CallbackAction<T>(in T data) where T : unmanaged, ICallback Parameters data T The callback data. Type Parameters T The type of callback to receive. Constructors CallbackAction(object, nint) public CallbackAction(object @object, nint method) Parameters object object method nint Methods BeginInvoke(in T, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(in T data, AsyncCallback callback, object @object) Parameters data T callback AsyncCallback object object Returns IAsyncResult EndInvoke(in T, IAsyncResult) public virtual void EndInvoke(in T data, IAsyncResult result) Parameters data T result IAsyncResult Invoke(in T) public virtual void Invoke(in T data) Parameters data T"
  },
  "api/MarymoorStudios.Core.Steamworks.CallbackIds.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.CallbackIds.html",
    "title": "Class CallbackIds",
    "summary": "Class CallbackIds Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public static class CallbackIds Inheritance object CallbackIds Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods IsCallResult(int) True if callbackId is a ICallResult type. public static bool IsCallResult(int callbackId) Parameters callbackId int The callback id to check. Returns bool IsKnown(int) True if callbackId is assigned to a ICallback or ICallResult type. public static bool IsKnown(int callbackId) Parameters callbackId int The callback id to check. Returns bool"
  },
  "api/MarymoorStudios.Core.Steamworks.ChangeNumOpenSlotsCallback.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ChangeNumOpenSlotsCallback.html",
    "title": "Struct ChangeNumOpenSlotsCallback",
    "summary": "Struct ChangeNumOpenSlotsCallback Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct ChangeNumOpenSlotsCallback : ICallResult Implements ICallResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 5304 Field Value int Result public EResult Result Field Value EResult"
  },
  "api/MarymoorStudios.Core.Steamworks.CheckFileSignature.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.CheckFileSignature.html",
    "title": "Struct CheckFileSignature",
    "summary": "Struct CheckFileSignature Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct CheckFileSignature : ICallResult Implements ICallResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 705 Field Value int Signature public ECheckFileSignature Signature Field Value ECheckFileSignature"
  },
  "api/MarymoorStudios.Core.Steamworks.ClanOfficerListResponse.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ClanOfficerListResponse.html",
    "title": "Struct ClanOfficerListResponse",
    "summary": "Struct ClanOfficerListResponse Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct ClanOfficerListResponse : ICallResult Implements ICallResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 335 Field Value int Officers public int Officers Field Value int SteamIDClan public CSteamID SteamIDClan Field Value CSteamID Success public byte Success Field Value byte"
  },
  "api/MarymoorStudios.Core.Steamworks.ClientGameServerDeny.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ClientGameServerDeny.html",
    "title": "Struct ClientGameServerDeny",
    "summary": "Struct ClientGameServerDeny Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct ClientGameServerDeny : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields AppId public uint AppId Field Value uint CallbackId public const int CallbackId = 113 Field Value int GameServerIP public uint GameServerIP Field Value uint GameServerPort public ushort GameServerPort Field Value ushort Reason public uint Reason Field Value uint Secure public ushort Secure Field Value ushort"
  },
  "api/MarymoorStudios.Core.Steamworks.ComputeNewPlayerCompatibilityResult.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ComputeNewPlayerCompatibilityResult.html",
    "title": "Struct ComputeNewPlayerCompatibilityResult",
    "summary": "Struct ComputeNewPlayerCompatibilityResult Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct ComputeNewPlayerCompatibilityResult : ICallResult Implements ICallResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 211 Field Value int ClanPlayersThatDontLikeCandidate public int ClanPlayersThatDontLikeCandidate Field Value int PlayersThatCandidateDoesntLike public int PlayersThatCandidateDoesntLike Field Value int PlayersThatDontLikeCandidate public int PlayersThatDontLikeCandidate Field Value int Result public EResult Result Field Value EResult SteamIDCandidate public CSteamID SteamIDCandidate Field Value CSteamID"
  },
  "api/MarymoorStudios.Core.Steamworks.Constants.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.Constants.html",
    "title": "Class Constants",
    "summary": "Class Constants Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public static class Constants Inheritance object Constants Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Fields AppProofOfPurchaseKeyMaxCount public const int AppProofOfPurchaseKeyMaxCount = 240 Field Value int ChatEntryMaxCount public const int ChatEntryMaxCount = 4096 Field Value int ChatMetadataMaxCount public const uint ChatMetadataMaxCount = 8192 Field Value uint DeveloperMetadataMax public const uint DeveloperMetadataMax = 5000 Field Value uint EnumerateFollowersMax public const int EnumerateFollowersMax = 50 Field Value int EnumeratePublishedFilesMaxResults public const uint EnumeratePublishedFilesMaxResults = 50 Field Value uint FavoriteFlagFavorite public const uint FavoriteFlagFavorite = 1 Field Value uint FavoriteFlagHistory public const uint FavoriteFlagHistory = 2 Field Value uint FavoriteFlagNone public const uint FavoriteFlagNone = 0 Field Value uint FilenameMax public const uint FilenameMax = 260 Field Value uint FriendGameInfoQueryPort_Error public const ushort FriendGameInfoQueryPort_Error = 65534 Field Value ushort FriendGameInfoQueryPort_NotInitialized public const ushort FriendGameInfoQueryPort_NotInitialized = 65535 Field Value ushort FriendsGroupLimit public const int FriendsGroupLimit = 100 Field Value int GameExtraInfoMax public const int GameExtraInfoMax = 64 Field Value int HSERVERQUERY_INVALID public const int HSERVERQUERY_INVALID = -1 Field Value int INVALID_HTMLBROWSER public const uint INVALID_HTMLBROWSER = 0 Field Value uint KNumUGCResultsPerPage public const uint KNumUGCResultsPerPage = 50 Field Value uint LeaderboardDetailsMax public const int LeaderboardDetailsMax = 64 Field Value int LeaderboardNameMax public const int LeaderboardNameMax = 128 Field Value int MASTERSERVERUPDATERPORT_USEGAMESOCKETSHARE public const ushort MASTERSERVERUPDATERPORT_USEGAMESOCKETSHARE = 65535 Field Value ushort MaxCloudFileChunkSize public const uint MaxCloudFileChunkSize = 104857600 Field Value uint MaxFriendsGroupName public const int MaxFriendsGroupName = 64 Field Value int MaxGameServerGameDataCount public const int MaxGameServerGameDataCount = 2048 Field Value int MaxGameServerGameDescriptionCount public const int MaxGameServerGameDescriptionCount = 64 Field Value int MaxGameServerGameDirCount public const int MaxGameServerGameDirCount = 32 Field Value int MaxGameServerMapNameCount public const int MaxGameServerMapNameCount = 32 Field Value int MaxGameServerNameCount public const int MaxGameServerNameCount = 64 Field Value int MaxGameServerTagsCount public const int MaxGameServerTagsCount = 128 Field Value int MaxLobbyKeyLength public const int MaxLobbyKeyLength = 255 Field Value int MaxPhaseIDLength public const uint MaxPhaseIDLength = 64 Field Value uint MaxSteamDatagramGameCoordinatorServerLoginAppDataCount public const uint MaxSteamDatagramGameCoordinatorServerLoginAppDataCount = 2048 Field Value uint MaxSteamDatagramGameCoordinatorServerLoginSerializedCount public const uint MaxSteamDatagramGameCoordinatorServerLoginSerializedCount = 4096 Field Value uint MaxSteamErrMsg public const int MaxSteamErrMsg = 1024 Field Value int MaxSteamNetworkingErrMsg public const int MaxSteamNetworkingErrMsg = 1024 Field Value int MaxSteamNetworkingPingLocationString public const int MaxSteamNetworkingPingLocationString = 1024 Field Value int MaxSteamNetworkingSocketsMessageSizeSendCount public const int MaxSteamNetworkingSocketsMessageSizeSendCount = 524288 Field Value int MaxTimelineEventDuration public const float MaxTimelineEventDuration = 600 Field Value float MaxTimelinePriority public const uint MaxTimelinePriority = 1000 Field Value uint PublishedDocumentChangeDescriptionMax public const uint PublishedDocumentChangeDescriptionMax = 8000 Field Value uint PublishedDocumentDescriptionMax public const uint PublishedDocumentDescriptionMax = 8000 Field Value uint PublishedDocumentTitleMax public const uint PublishedDocumentTitleMax = 129 Field Value uint PublishedFileURLMax public const uint PublishedFileURLMax = 256 Field Value uint STEAMAPPTICKET_INTERFACE_VERSION public const string STEAMAPPTICKET_INTERFACE_VERSION = \"STEAMAPPTICKET_INTERFACE_VERSION001\" Field Value string STEAMCLIENT_INTERFACE_VERSION public const string STEAMCLIENT_INTERFACE_VERSION = \"SteamClient021\" Field Value string STEAMGAMECOORDINATOR_INTERFACE_VERSION public const string STEAMGAMECOORDINATOR_INTERFACE_VERSION = \"SteamGameCoordinator001\" Field Value string STEAMGAMESERVER_QUERY_PORT_SHARED public const ushort STEAMGAMESERVER_QUERY_PORT_SHARED = 65535 Field Value ushort ScreenshotMaxTaggedPublishedFiles public const uint ScreenshotMaxTaggedPublishedFiles = 32 Field Value uint ScreenshotMaxTaggedUsers public const uint ScreenshotMaxTaggedUsers = 32 Field Value uint ScreenshotThumbWidth public const int ScreenshotThumbWidth = 200 Field Value int StatNameMax public const int StatNameMax = 128 Field Value int SteamAccountIDMask public const uint SteamAccountIDMask = 4294967295 Field Value uint SteamAccountInstanceMask public const uint SteamAccountInstanceMask = 1048575 Field Value uint SteamDatagramMaxSerializedTicketCount public const uint SteamDatagramMaxSerializedTicketCount = 512 Field Value uint SteamNetworkConnectionInfoFlags_DualWifi public const int SteamNetworkConnectionInfoFlags_DualWifi = 32 Field Value int SteamNetworkConnectionInfoFlags_Fast public const int SteamNetworkConnectionInfoFlags_Fast = 8 Field Value int SteamNetworkConnectionInfoFlags_LoopbackBuffers public const int SteamNetworkConnectionInfoFlags_LoopbackBuffers = 4 Field Value int SteamNetworkConnectionInfoFlags_Relayed public const int SteamNetworkConnectionInfoFlags_Relayed = 16 Field Value int SteamNetworkConnectionInfoFlags_Unauthenticated public const int SteamNetworkConnectionInfoFlags_Unauthenticated = 1 Field Value int SteamNetworkConnectionInfoFlags_Unencrypted public const int SteamNetworkConnectionInfoFlags_Unencrypted = 2 Field Value int SteamNetworkingConfig_P2P_Transport_ICE_Enable_All public const int SteamNetworkingConfig_P2P_Transport_ICE_Enable_All = 2147483647 Field Value int SteamNetworkingConfig_P2P_Transport_ICE_Enable_Default public const int SteamNetworkingConfig_P2P_Transport_ICE_Enable_Default = -1 Field Value int SteamNetworkingConfig_P2P_Transport_ICE_Enable_Disable public const int SteamNetworkingConfig_P2P_Transport_ICE_Enable_Disable = 0 Field Value int SteamNetworkingConfig_P2P_Transport_ICE_Enable_Private public const int SteamNetworkingConfig_P2P_Transport_ICE_Enable_Private = 2 Field Value int SteamNetworkingConfig_P2P_Transport_ICE_Enable_Public public const int SteamNetworkingConfig_P2P_Transport_ICE_Enable_Public = 4 Field Value int SteamNetworkingConfig_P2P_Transport_ICE_Enable_Relay public const int SteamNetworkingConfig_P2P_Transport_ICE_Enable_Relay = 1 Field Value int SteamNetworkingMaxConnectionAppName public const int SteamNetworkingMaxConnectionAppName = 32 Field Value int SteamNetworkingMaxConnectionCloseReason public const int SteamNetworkingMaxConnectionCloseReason = 128 Field Value int SteamNetworkingMaxConnectionDescription public const int SteamNetworkingMaxConnectionDescription = 128 Field Value int SteamNetworkingPing_Failed public const int SteamNetworkingPing_Failed = -1 Field Value int SteamNetworkingPing_Unknown public const int SteamNetworkingPing_Unknown = -2 Field Value int SteamNetworkingSend_AutoRestartBrokenSession public const int SteamNetworkingSend_AutoRestartBrokenSession = 32 Field Value int SteamNetworkingSend_NoDelay public const int SteamNetworkingSend_NoDelay = 4 Field Value int SteamNetworkingSend_NoNagle public const int SteamNetworkingSend_NoNagle = 1 Field Value int SteamNetworkingSend_Reliable public const int SteamNetworkingSend_Reliable = 8 Field Value int SteamNetworkingSend_ReliableNoNagle public const int SteamNetworkingSend_ReliableNoNagle = 9 Field Value int SteamNetworkingSend_Unreliable public const int SteamNetworkingSend_Unreliable = 0 Field Value int SteamNetworkingSend_UnreliableNoDelay public const int SteamNetworkingSend_UnreliableNoDelay = 5 Field Value int SteamNetworkingSend_UnreliableNoNagle public const int SteamNetworkingSend_UnreliableNoNagle = 1 Field Value int SteamNetworkingSend_UseCurrentThread public const int SteamNetworkingSend_UseCurrentThread = 16 Field Value int SteamNetworkingSocketsFakeUDPPortMaxMessageSizeCount public const int SteamNetworkingSocketsFakeUDPPortMaxMessageSizeCount = 4096 Field Value int SteamNetworkingSocketsFakeUDPPortRecommendedMTUCount public const int SteamNetworkingSocketsFakeUDPPortRecommendedMTUCount = 1200 Field Value int SteamUserDefaultInstance public const uint SteamUserDefaultInstance = 1 Field Value uint TagListMax public const uint TagListMax = 1025 Field Value uint TimelinePriority_KeepCurrentValue public const uint TimelinePriority_KeepCurrentValue = 1000000 Field Value uint UFSTagTypeMaxCount public const int UFSTagTypeMaxCount = 255 Field Value int UFSTagValueMaxCount public const int UFSTagValueMaxCount = 255 Field Value int Properties APICallInvalid public static SteamAPICall APICallInvalid { get; } Property Value SteamAPICall AccountIdInvalid public static AccountID AccountIdInvalid { get; } Property Value AccountID AppIdInvalid public static AppId AppIdInvalid { get; } Property Value AppId DepotIdInvalid public static DepotId DepotIdInvalid { get; } Property Value DepotId FriendsGroupID_Invalid public static FriendsGroupID FriendsGroupID_Invalid { get; } Property Value FriendsGroupID HAuthTicketInvalid public static HAuthTicket HAuthTicketInvalid { get; } Property Value HAuthTicket HSteamListenSocket_Invalid public static HSteamListenSocket HSteamListenSocket_Invalid { get; } Property Value HSteamListenSocket HSteamNetConnection_Invalid public static HSteamNetConnection HSteamNetConnection_Invalid { get; } Property Value HSteamNetConnection HSteamNetPollGroup_Invalid public static HSteamNetPollGroup HSteamNetPollGroup_Invalid { get; } Property Value HSteamNetPollGroup PartyBeaconIdInvalid public static PartyBeaconID PartyBeaconIdInvalid { get; } Property Value PartyBeaconID PublishedFileIdInvalid public static PublishedFileId PublishedFileIdInvalid { get; } Property Value PublishedFileId PublishedFileUpdateHandleInvalid public static PublishedFileUpdateHandle PublishedFileUpdateHandleInvalid { get; } Property Value PublishedFileUpdateHandle SteamDatagramPOPID_dev public static SteamNetworkingPOPID SteamDatagramPOPID_dev { get; } Property Value SteamNetworkingPOPID SteamInventoryResultInvalid public static SteamInventoryResult SteamInventoryResultInvalid { get; } Property Value SteamInventoryResult SteamInventoryUpdateHandleInvalid public static SteamInventoryUpdateHandle SteamInventoryUpdateHandleInvalid { get; } Property Value SteamInventoryUpdateHandle SteamItemInstanceIDInvalid public static SteamItemInstanceID SteamItemInstanceIDInvalid { get; } Property Value SteamItemInstanceID UGCFileStreamHandleInvalid public static UGCFileWriteStreamHandle UGCFileStreamHandleInvalid { get; } Property Value UGCFileWriteStreamHandle UGCHandleInvalid public static UGCHandle UGCHandleInvalid { get; } Property Value UGCHandle UGCQueryHandleInvalid public static UGCQueryHandle UGCQueryHandleInvalid { get; } Property Value UGCQueryHandle UGCUpdateHandleInvalid public static UGCUpdateHandle UGCUpdateHandleInvalid { get; } Property Value UGCUpdateHandle"
  },
  "api/MarymoorStudios.Core.Steamworks.ControllerActionSetHandle.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ControllerActionSetHandle.html",
    "title": "Struct ControllerActionSetHandle",
    "summary": "Struct ControllerActionSetHandle Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public readonly struct ControllerActionSetHandle : IEquatable<ControllerActionSetHandle>, IComparable<ControllerActionSetHandle> Implements IEquatable<ControllerActionSetHandle> IComparable<ControllerActionSetHandle> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors ControllerActionSetHandle(ulong) public ControllerActionSetHandle(ulong id) Parameters id ulong Properties Id The underlying value. public ulong Id { get; } Property Value ulong Invalid The invalid id. public static ulong Invalid { get; } Property Value ulong IsValid True if not Invalid. public bool IsValid { get; } Property Value bool Methods CompareTo(ControllerActionSetHandle) Value-based comparison. public int CompareTo(ControllerActionSetHandle other) Parameters other ControllerActionSetHandle Returns int Equals(ControllerActionSetHandle) Value-based equality. public bool Equals(ControllerActionSetHandle other) Parameters other ControllerActionSetHandle Returns bool Equals(object?) public override bool Equals(object? obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() public override string ToString() Returns string Operators operator ==(ControllerActionSetHandle, ControllerActionSetHandle) Value-based equality. public static bool operator ==(ControllerActionSetHandle left, ControllerActionSetHandle right) Parameters left ControllerActionSetHandle right ControllerActionSetHandle Returns bool operator >(ControllerActionSetHandle, ControllerActionSetHandle) Value-based comparison. public static bool operator >(ControllerActionSetHandle left, ControllerActionSetHandle right) Parameters left ControllerActionSetHandle right ControllerActionSetHandle Returns bool operator >=(ControllerActionSetHandle, ControllerActionSetHandle) Value-based comparison. public static bool operator >=(ControllerActionSetHandle left, ControllerActionSetHandle right) Parameters left ControllerActionSetHandle right ControllerActionSetHandle Returns bool operator !=(ControllerActionSetHandle, ControllerActionSetHandle) Value-based equality. public static bool operator !=(ControllerActionSetHandle left, ControllerActionSetHandle right) Parameters left ControllerActionSetHandle right ControllerActionSetHandle Returns bool operator <(ControllerActionSetHandle, ControllerActionSetHandle) Value-based comparison. public static bool operator <(ControllerActionSetHandle left, ControllerActionSetHandle right) Parameters left ControllerActionSetHandle right ControllerActionSetHandle Returns bool operator <=(ControllerActionSetHandle, ControllerActionSetHandle) Value-based comparison. public static bool operator <=(ControllerActionSetHandle left, ControllerActionSetHandle right) Parameters left ControllerActionSetHandle right ControllerActionSetHandle Returns bool"
  },
  "api/MarymoorStudios.Core.Steamworks.ControllerAnalogActionHandle.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ControllerAnalogActionHandle.html",
    "title": "Struct ControllerAnalogActionHandle",
    "summary": "Struct ControllerAnalogActionHandle Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public readonly struct ControllerAnalogActionHandle : IEquatable<ControllerAnalogActionHandle>, IComparable<ControllerAnalogActionHandle> Implements IEquatable<ControllerAnalogActionHandle> IComparable<ControllerAnalogActionHandle> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors ControllerAnalogActionHandle(ulong) public ControllerAnalogActionHandle(ulong id) Parameters id ulong Properties Id The underlying value. public ulong Id { get; } Property Value ulong Invalid The invalid id. public static ulong Invalid { get; } Property Value ulong IsValid True if not Invalid. public bool IsValid { get; } Property Value bool Methods CompareTo(ControllerAnalogActionHandle) Value-based comparison. public int CompareTo(ControllerAnalogActionHandle other) Parameters other ControllerAnalogActionHandle Returns int Equals(ControllerAnalogActionHandle) Value-based equality. public bool Equals(ControllerAnalogActionHandle other) Parameters other ControllerAnalogActionHandle Returns bool Equals(object?) public override bool Equals(object? obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() public override string ToString() Returns string Operators operator ==(ControllerAnalogActionHandle, ControllerAnalogActionHandle) Value-based equality. public static bool operator ==(ControllerAnalogActionHandle left, ControllerAnalogActionHandle right) Parameters left ControllerAnalogActionHandle right ControllerAnalogActionHandle Returns bool operator >(ControllerAnalogActionHandle, ControllerAnalogActionHandle) Value-based comparison. public static bool operator >(ControllerAnalogActionHandle left, ControllerAnalogActionHandle right) Parameters left ControllerAnalogActionHandle right ControllerAnalogActionHandle Returns bool operator >=(ControllerAnalogActionHandle, ControllerAnalogActionHandle) Value-based comparison. public static bool operator >=(ControllerAnalogActionHandle left, ControllerAnalogActionHandle right) Parameters left ControllerAnalogActionHandle right ControllerAnalogActionHandle Returns bool operator !=(ControllerAnalogActionHandle, ControllerAnalogActionHandle) Value-based equality. public static bool operator !=(ControllerAnalogActionHandle left, ControllerAnalogActionHandle right) Parameters left ControllerAnalogActionHandle right ControllerAnalogActionHandle Returns bool operator <(ControllerAnalogActionHandle, ControllerAnalogActionHandle) Value-based comparison. public static bool operator <(ControllerAnalogActionHandle left, ControllerAnalogActionHandle right) Parameters left ControllerAnalogActionHandle right ControllerAnalogActionHandle Returns bool operator <=(ControllerAnalogActionHandle, ControllerAnalogActionHandle) Value-based comparison. public static bool operator <=(ControllerAnalogActionHandle left, ControllerAnalogActionHandle right) Parameters left ControllerAnalogActionHandle right ControllerAnalogActionHandle Returns bool"
  },
  "api/MarymoorStudios.Core.Steamworks.ControllerDigitalActionHandle.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ControllerDigitalActionHandle.html",
    "title": "Struct ControllerDigitalActionHandle",
    "summary": "Struct ControllerDigitalActionHandle Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public readonly struct ControllerDigitalActionHandle : IEquatable<ControllerDigitalActionHandle>, IComparable<ControllerDigitalActionHandle> Implements IEquatable<ControllerDigitalActionHandle> IComparable<ControllerDigitalActionHandle> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors ControllerDigitalActionHandle(ulong) public ControllerDigitalActionHandle(ulong id) Parameters id ulong Properties Id The underlying value. public ulong Id { get; } Property Value ulong Invalid The invalid id. public static ulong Invalid { get; } Property Value ulong IsValid True if not Invalid. public bool IsValid { get; } Property Value bool Methods CompareTo(ControllerDigitalActionHandle) Value-based comparison. public int CompareTo(ControllerDigitalActionHandle other) Parameters other ControllerDigitalActionHandle Returns int Equals(ControllerDigitalActionHandle) Value-based equality. public bool Equals(ControllerDigitalActionHandle other) Parameters other ControllerDigitalActionHandle Returns bool Equals(object?) public override bool Equals(object? obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() public override string ToString() Returns string Operators operator ==(ControllerDigitalActionHandle, ControllerDigitalActionHandle) Value-based equality. public static bool operator ==(ControllerDigitalActionHandle left, ControllerDigitalActionHandle right) Parameters left ControllerDigitalActionHandle right ControllerDigitalActionHandle Returns bool operator >(ControllerDigitalActionHandle, ControllerDigitalActionHandle) Value-based comparison. public static bool operator >(ControllerDigitalActionHandle left, ControllerDigitalActionHandle right) Parameters left ControllerDigitalActionHandle right ControllerDigitalActionHandle Returns bool operator >=(ControllerDigitalActionHandle, ControllerDigitalActionHandle) Value-based comparison. public static bool operator >=(ControllerDigitalActionHandle left, ControllerDigitalActionHandle right) Parameters left ControllerDigitalActionHandle right ControllerDigitalActionHandle Returns bool operator !=(ControllerDigitalActionHandle, ControllerDigitalActionHandle) Value-based equality. public static bool operator !=(ControllerDigitalActionHandle left, ControllerDigitalActionHandle right) Parameters left ControllerDigitalActionHandle right ControllerDigitalActionHandle Returns bool operator <(ControllerDigitalActionHandle, ControllerDigitalActionHandle) Value-based comparison. public static bool operator <(ControllerDigitalActionHandle left, ControllerDigitalActionHandle right) Parameters left ControllerDigitalActionHandle right ControllerDigitalActionHandle Returns bool operator <=(ControllerDigitalActionHandle, ControllerDigitalActionHandle) Value-based comparison. public static bool operator <=(ControllerDigitalActionHandle left, ControllerDigitalActionHandle right) Parameters left ControllerDigitalActionHandle right ControllerDigitalActionHandle Returns bool"
  },
  "api/MarymoorStudios.Core.Steamworks.ControllerHandle.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ControllerHandle.html",
    "title": "Struct ControllerHandle",
    "summary": "Struct ControllerHandle Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public readonly struct ControllerHandle : IEquatable<ControllerHandle>, IComparable<ControllerHandle> Implements IEquatable<ControllerHandle> IComparable<ControllerHandle> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors ControllerHandle(ulong) public ControllerHandle(ulong id) Parameters id ulong Properties Id The underlying value. public ulong Id { get; } Property Value ulong Invalid The invalid id. public static ulong Invalid { get; } Property Value ulong IsValid True if not Invalid. public bool IsValid { get; } Property Value bool Methods CompareTo(ControllerHandle) Value-based comparison. public int CompareTo(ControllerHandle other) Parameters other ControllerHandle Returns int Equals(ControllerHandle) Value-based equality. public bool Equals(ControllerHandle other) Parameters other ControllerHandle Returns bool Equals(object?) public override bool Equals(object? obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() public override string ToString() Returns string Operators operator ==(ControllerHandle, ControllerHandle) Value-based equality. public static bool operator ==(ControllerHandle left, ControllerHandle right) Parameters left ControllerHandle right ControllerHandle Returns bool operator >(ControllerHandle, ControllerHandle) Value-based comparison. public static bool operator >(ControllerHandle left, ControllerHandle right) Parameters left ControllerHandle right ControllerHandle Returns bool operator >=(ControllerHandle, ControllerHandle) Value-based comparison. public static bool operator >=(ControllerHandle left, ControllerHandle right) Parameters left ControllerHandle right ControllerHandle Returns bool operator !=(ControllerHandle, ControllerHandle) Value-based equality. public static bool operator !=(ControllerHandle left, ControllerHandle right) Parameters left ControllerHandle right ControllerHandle Returns bool operator <(ControllerHandle, ControllerHandle) Value-based comparison. public static bool operator <(ControllerHandle left, ControllerHandle right) Parameters left ControllerHandle right ControllerHandle Returns bool operator <=(ControllerHandle, ControllerHandle) Value-based comparison. public static bool operator <=(ControllerHandle left, ControllerHandle right) Parameters left ControllerHandle right ControllerHandle Returns bool"
  },
  "api/MarymoorStudios.Core.Steamworks.CreateBeaconCallback.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.CreateBeaconCallback.html",
    "title": "Struct CreateBeaconCallback",
    "summary": "Struct CreateBeaconCallback Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct CreateBeaconCallback : ICallResult Implements ICallResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields BeaconID public PartyBeaconID BeaconID Field Value PartyBeaconID CallbackId public const int CallbackId = 5302 Field Value int Result public EResult Result Field Value EResult"
  },
  "api/MarymoorStudios.Core.Steamworks.CreateItemResult.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.CreateItemResult.html",
    "title": "Struct CreateItemResult",
    "summary": "Struct CreateItemResult Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct CreateItemResult : ICallResult Implements ICallResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 3403 Field Value int PublishedFileId public PublishedFileId PublishedFileId Field Value PublishedFileId Result public EResult Result Field Value EResult Properties UserNeedsToAcceptWorkshopLegalAgreement public bool UserNeedsToAcceptWorkshopLegalAgreement { get; set; } Property Value bool"
  },
  "api/MarymoorStudios.Core.Steamworks.DeleteItemResult.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.DeleteItemResult.html",
    "title": "Struct DeleteItemResult",
    "summary": "Struct DeleteItemResult Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct DeleteItemResult : ICallResult Implements ICallResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 3417 Field Value int PublishedFileId public PublishedFileId PublishedFileId Field Value PublishedFileId Result public EResult Result Field Value EResult"
  },
  "api/MarymoorStudios.Core.Steamworks.DepotId.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.DepotId.html",
    "title": "Struct DepotId",
    "summary": "Struct DepotId Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public readonly struct DepotId : IEquatable<DepotId>, IComparable<DepotId> Implements IEquatable<DepotId> IComparable<DepotId> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors DepotId(uint) public DepotId(uint id) Parameters id uint Properties Id The underlying value. public uint Id { get; } Property Value uint Invalid The invalid id. public static uint Invalid { get; } Property Value uint IsValid True if not Invalid. public bool IsValid { get; } Property Value bool Methods CompareTo(DepotId) Value-based comparison. public int CompareTo(DepotId other) Parameters other DepotId Returns int Equals(DepotId) Value-based equality. public bool Equals(DepotId other) Parameters other DepotId Returns bool Equals(object?) public override bool Equals(object? obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() public override string ToString() Returns string Operators operator ==(DepotId, DepotId) Value-based equality. public static bool operator ==(DepotId left, DepotId right) Parameters left DepotId right DepotId Returns bool operator >(DepotId, DepotId) Value-based comparison. public static bool operator >(DepotId left, DepotId right) Parameters left DepotId right DepotId Returns bool operator >=(DepotId, DepotId) Value-based comparison. public static bool operator >=(DepotId left, DepotId right) Parameters left DepotId right DepotId Returns bool operator !=(DepotId, DepotId) Value-based equality. public static bool operator !=(DepotId left, DepotId right) Parameters left DepotId right DepotId Returns bool operator <(DepotId, DepotId) Value-based comparison. public static bool operator <(DepotId left, DepotId right) Parameters left DepotId right DepotId Returns bool operator <=(DepotId, DepotId) Value-based comparison. public static bool operator <=(DepotId left, DepotId right) Parameters left DepotId right DepotId Returns bool"
  },
  "api/MarymoorStudios.Core.Steamworks.DlcInstalled.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.DlcInstalled.html",
    "title": "Struct DlcInstalled",
    "summary": "Struct DlcInstalled Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct DlcInstalled : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields AppId public AppId AppId Field Value AppId CallbackId public const int CallbackId = 1005 Field Value int"
  },
  "api/MarymoorStudios.Core.Steamworks.DownloadClanActivityCountsResult.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.DownloadClanActivityCountsResult.html",
    "title": "Struct DownloadClanActivityCountsResult",
    "summary": "Struct DownloadClanActivityCountsResult Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct DownloadClanActivityCountsResult : ICallResult Implements ICallResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 341 Field Value int Properties Success public bool Success { get; set; } Property Value bool"
  },
  "api/MarymoorStudios.Core.Steamworks.DownloadItemResult.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.DownloadItemResult.html",
    "title": "Struct DownloadItemResult",
    "summary": "Struct DownloadItemResult Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct DownloadItemResult : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields AppId public AppId AppId Field Value AppId CallbackId public const int CallbackId = 3406 Field Value int PublishedFileId public PublishedFileId PublishedFileId Field Value PublishedFileId Result public EResult Result Field Value EResult"
  },
  "api/MarymoorStudios.Core.Steamworks.DurationControl.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.DurationControl.html",
    "title": "Struct DurationControl",
    "summary": "Struct DurationControl Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct DurationControl : ICallResult Implements ICallResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields AppId public AppId AppId Field Value AppId CallbackId public const int CallbackId = 167 Field Value int Last5hSeconds public int Last5hSeconds Field Value int Notification public EDurationControlNotification Notification Field Value EDurationControlNotification Progress public EDurationControlProgress Progress Field Value EDurationControlProgress RemainingSeconds public int RemainingSeconds Field Value int Result public EResult Result Field Value EResult TodaySeconds public int TodaySeconds Field Value int Properties Applicable public bool Applicable { get; set; } Property Value bool"
  },
  "api/MarymoorStudios.Core.Steamworks.EAccountType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.EAccountType.html",
    "title": "Enum EAccountType",
    "summary": "Enum EAccountType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum EAccountType Fields Invalid = 0 Individual = 1 Multiseat = 2 GameServer = 3 AnonGameServer = 4 Pending = 5 ContentServer = 6 Clan = 7 Chat = 8 ConsoleUser = 9 AnonUser = 10 Max = 11"
  },
  "api/MarymoorStudios.Core.Steamworks.EActivateGameOverlayToWebPageMode.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.EActivateGameOverlayToWebPageMode.html",
    "title": "Enum EActivateGameOverlayToWebPageMode",
    "summary": "Enum EActivateGameOverlayToWebPageMode Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum EActivateGameOverlayToWebPageMode Fields Default = 0 Modal = 1"
  },
  "api/MarymoorStudios.Core.Steamworks.EAuthSessionResponse.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.EAuthSessionResponse.html",
    "title": "Enum EAuthSessionResponse",
    "summary": "Enum EAuthSessionResponse Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum EAuthSessionResponse Fields OK = 0 UserNotConnectedToSteam = 1 NoLicenseOrExpired = 2 VACBanned = 3 LoggedInElseWhere = 4 VACCheckTimedOut = 5 AuthTicketCanceled = 6 AuthTicketInvalidAlreadyUsed = 7 AuthTicketInvalid = 8 PublisherIssuedBan = 9 AuthTicketNetworkIdentityFailure = 10"
  },
  "api/MarymoorStudios.Core.Steamworks.EBeginAuthSessionResult.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.EBeginAuthSessionResult.html",
    "title": "Enum EBeginAuthSessionResult",
    "summary": "Enum EBeginAuthSessionResult Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum EBeginAuthSessionResult Fields OK = 0 InvalidTicket = 1 DuplicateRequest = 2 InvalidVersion = 3 GameMismatch = 4 ExpiredTicket = 5"
  },
  "api/MarymoorStudios.Core.Steamworks.EBetaBranchFlags.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.EBetaBranchFlags.html",
    "title": "Enum EBetaBranchFlags",
    "summary": "Enum EBetaBranchFlags Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum EBetaBranchFlags Fields None = 0 Default = 1 Available = 2 Private = 4 Selected = 8 Installed = 16"
  },
  "api/MarymoorStudios.Core.Steamworks.EBroadcastUploadResult.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.EBroadcastUploadResult.html",
    "title": "Enum EBroadcastUploadResult",
    "summary": "Enum EBroadcastUploadResult Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum EBroadcastUploadResult Fields None = 0 OK = 1 InitFailed = 2 FrameFailed = 3 Timeout = 4 BandwidthExceeded = 5 LowFPS = 6 MissingKeyFrames = 7 NoConnection = 8 RelayFailed = 9 SettingsChanged = 10 MissingAudio = 11 TooFarBehind = 12 TranscodeBehind = 13 NotAllowedToPlay = 14 Busy = 15 Banned = 16 AlreadyActive = 17 ForcedOff = 18 AudioBehind = 19 Shutdown = 20 Disconnect = 21 VideoInitFailed = 22 AudioInitFailed = 23"
  },
  "api/MarymoorStudios.Core.Steamworks.EChatEntryType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.EChatEntryType.html",
    "title": "Enum EChatEntryType",
    "summary": "Enum EChatEntryType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum EChatEntryType Fields Invalid = 0 ChatMsg = 1 Typing = 2 InviteGame = 3 Emote = 4 LeftConversation = 6 Entered = 7 WasKicked = 8 WasBanned = 9 Disconnected = 10 HistoricalChat = 11 LinkBlocked = 14"
  },
  "api/MarymoorStudios.Core.Steamworks.EChatMemberStateChange.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.EChatMemberStateChange.html",
    "title": "Enum EChatMemberStateChange",
    "summary": "Enum EChatMemberStateChange Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll [Flags] public enum EChatMemberStateChange Fields Entered = 1 Left = 2 Disconnected = 4 Kicked = 8 Banned = 16"
  },
  "api/MarymoorStudios.Core.Steamworks.EChatRoomEnterResponse.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.EChatRoomEnterResponse.html",
    "title": "Enum EChatRoomEnterResponse",
    "summary": "Enum EChatRoomEnterResponse Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum EChatRoomEnterResponse Fields Success = 1 DoesntExist = 2 NotAllowed = 3 Full = 4 Error = 5 Banned = 6 Limited = 7 ClanDisabled = 8 CommunityBan = 9 MemberBlockedYou = 10 YouBlockedMember = 11 RatelimitExceeded = 15"
  },
  "api/MarymoorStudios.Core.Steamworks.EChatSteamIDInstanceFlags.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.EChatSteamIDInstanceFlags.html",
    "title": "Enum EChatSteamIDInstanceFlags",
    "summary": "Enum EChatSteamIDInstanceFlags Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum EChatSteamIDInstanceFlags Fields AccountInstanceMask = 4095 InstanceFlagClan = 524288 InstanceFlagLobby = 262144 InstanceFlagMMSLobby = 131072"
  },
  "api/MarymoorStudios.Core.Steamworks.ECheckFileSignature.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ECheckFileSignature.html",
    "title": "Enum ECheckFileSignature",
    "summary": "Enum ECheckFileSignature Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum ECheckFileSignature Fields InvalidSignature = 0 ValidSignature = 1 FileNotFound = 2 NoSignaturesFoundForThisApp = 3 NoSignaturesFoundForThisFile = 4"
  },
  "api/MarymoorStudios.Core.Steamworks.ECommunityProfileItemProperty.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ECommunityProfileItemProperty.html",
    "title": "Enum ECommunityProfileItemProperty",
    "summary": "Enum ECommunityProfileItemProperty Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum ECommunityProfileItemProperty Fields ImageSmall = 0 ImageLarge = 1 InternalName = 2 Title = 3 Description = 4 AppID = 5 TypeID = 6 Class = 7 MovieWebM = 8 MovieMP4 = 9 MovieWebMSmall = 10 MovieMP4Small = 11"
  },
  "api/MarymoorStudios.Core.Steamworks.ECommunityProfileItemType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ECommunityProfileItemType.html",
    "title": "Enum ECommunityProfileItemType",
    "summary": "Enum ECommunityProfileItemType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum ECommunityProfileItemType Fields AnimatedAvatar = 0 AvatarFrame = 1 ProfileModifier = 2 ProfileBackground = 3 MiniProfileBackground = 4"
  },
  "api/MarymoorStudios.Core.Steamworks.EControllerActionOrigin.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.EControllerActionOrigin.html",
    "title": "Enum EControllerActionOrigin",
    "summary": "Enum EControllerActionOrigin Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum EControllerActionOrigin Fields None = 0 A = 1 B = 2 X = 3 Y = 4 LeftBumper = 5 RightBumper = 6 LeftGrip = 7 RightGrip = 8 Start = 9 Back = 10 LeftPadTouch = 11 LeftPadSwipe = 12 LeftPadClick = 13 LeftPadDPadNorth = 14 LeftPadDPadSouth = 15 LeftPadDPadWest = 16 LeftPadDPadEast = 17 RightPadTouch = 18 RightPadSwipe = 19 RightPadClick = 20 RightPadDPadNorth = 21 RightPadDPadSouth = 22 RightPadDPadWest = 23 RightPadDPadEast = 24 LeftTriggerPull = 25 LeftTriggerClick = 26 RightTriggerPull = 27 RightTriggerClick = 28 LeftStickMove = 29 LeftStickClick = 30 LeftStickDPadNorth = 31 LeftStickDPadSouth = 32 LeftStickDPadWest = 33 LeftStickDPadEast = 34 GyroMove = 35 GyroPitch = 36 GyroYaw = 37 GyroRoll = 38 PS4X = 39 PS4Circle = 40 PS4Triangle = 41 PS4Square = 42 PS4LeftBumper = 43 PS4RightBumper = 44 PS4Options = 45 PS4Share = 46 PS4LeftPadTouch = 47 PS4LeftPadSwipe = 48 PS4LeftPadClick = 49 PS4LeftPadDPadNorth = 50 PS4LeftPadDPadSouth = 51 PS4LeftPadDPadWest = 52 PS4LeftPadDPadEast = 53 PS4RightPadTouch = 54 PS4RightPadSwipe = 55 PS4RightPadClick = 56 PS4RightPadDPadNorth = 57 PS4RightPadDPadSouth = 58 PS4RightPadDPadWest = 59 PS4RightPadDPadEast = 60 PS4CenterPadTouch = 61 PS4CenterPadSwipe = 62 PS4CenterPadClick = 63 PS4CenterPadDPadNorth = 64 PS4CenterPadDPadSouth = 65 PS4CenterPadDPadWest = 66 PS4CenterPadDPadEast = 67 PS4LeftTriggerPull = 68 PS4LeftTriggerClick = 69 PS4RightTriggerPull = 70 PS4RightTriggerClick = 71 PS4LeftStickMove = 72 PS4LeftStickClick = 73 PS4LeftStickDPadNorth = 74 PS4LeftStickDPadSouth = 75 PS4LeftStickDPadWest = 76 PS4LeftStickDPadEast = 77 PS4RightStickMove = 78 PS4RightStickClick = 79 PS4RightStickDPadNorth = 80 PS4RightStickDPadSouth = 81 PS4RightStickDPadWest = 82 PS4RightStickDPadEast = 83 PS4DPadNorth = 84 PS4DPadSouth = 85 PS4DPadWest = 86 PS4DPadEast = 87 PS4GyroMove = 88 PS4GyroPitch = 89 PS4GyroYaw = 90 PS4GyroRoll = 91 XBoxOneA = 92 XBoxOneB = 93 XBoxOneX = 94 XBoxOneY = 95 XBoxOneLeftBumper = 96 XBoxOneRightBumper = 97 XBoxOneMenu = 98 XBoxOneView = 99 XBoxOneLeftTriggerPull = 100 XBoxOneLeftTriggerClick = 101 XBoxOneRightTriggerPull = 102 XBoxOneRightTriggerClick = 103 XBoxOneLeftStickMove = 104 XBoxOneLeftStickClick = 105 XBoxOneLeftStickDPadNorth = 106 XBoxOneLeftStickDPadSouth = 107 XBoxOneLeftStickDPadWest = 108 XBoxOneLeftStickDPadEast = 109 XBoxOneRightStickMove = 110 XBoxOneRightStickClick = 111 XBoxOneRightStickDPadNorth = 112 XBoxOneRightStickDPadSouth = 113 XBoxOneRightStickDPadWest = 114 XBoxOneRightStickDPadEast = 115 XBoxOneDPadNorth = 116 XBoxOneDPadSouth = 117 XBoxOneDPadWest = 118 XBoxOneDPadEast = 119 XBox360A = 120 XBox360B = 121 XBox360X = 122 XBox360Y = 123 XBox360LeftBumper = 124 XBox360RightBumper = 125 XBox360Start = 126 XBox360Back = 127 XBox360LeftTriggerPull = 128 XBox360LeftTriggerClick = 129 XBox360RightTriggerPull = 130 XBox360RightTriggerClick = 131 XBox360LeftStickMove = 132 XBox360LeftStickClick = 133 XBox360LeftStickDPadNorth = 134 XBox360LeftStickDPadSouth = 135 XBox360LeftStickDPadWest = 136 XBox360LeftStickDPadEast = 137 XBox360RightStickMove = 138 XBox360RightStickClick = 139 XBox360RightStickDPadNorth = 140 XBox360RightStickDPadSouth = 141 XBox360RightStickDPadWest = 142 XBox360RightStickDPadEast = 143 XBox360DPadNorth = 144 XBox360DPadSouth = 145 XBox360DPadWest = 146 XBox360DPadEast = 147 SteamV2A = 148 SteamV2B = 149 SteamV2X = 150 SteamV2Y = 151 SteamV2LeftBumper = 152 SteamV2RightBumper = 153 SteamV2LeftGripLower = 154 SteamV2LeftGripUpper = 155 SteamV2RightGripLower = 156 SteamV2RightGripUpper = 157 SteamV2LeftBumperPressure = 158 SteamV2RightBumperPressure = 159 SteamV2LeftGripPressure = 160 SteamV2RightGripPressure = 161 SteamV2LeftGripUpperPressure = 162 SteamV2RightGripUpperPressure = 163 SteamV2Start = 164 SteamV2Back = 165 SteamV2LeftPadTouch = 166 SteamV2LeftPadSwipe = 167 SteamV2LeftPadClick = 168 SteamV2LeftPadPressure = 169 SteamV2LeftPadDPadNorth = 170 SteamV2LeftPadDPadSouth = 171 SteamV2LeftPadDPadWest = 172 SteamV2LeftPadDPadEast = 173 SteamV2RightPadTouch = 174 SteamV2RightPadSwipe = 175 SteamV2RightPadClick = 176 SteamV2RightPadPressure = 177 SteamV2RightPadDPadNorth = 178 SteamV2RightPadDPadSouth = 179 SteamV2RightPadDPadWest = 180 SteamV2RightPadDPadEast = 181 SteamV2LeftTriggerPull = 182 SteamV2LeftTriggerClick = 183 SteamV2RightTriggerPull = 184 SteamV2RightTriggerClick = 185 SteamV2LeftStickMove = 186 SteamV2LeftStickClick = 187 SteamV2LeftStickDPadNorth = 188 SteamV2LeftStickDPadSouth = 189 SteamV2LeftStickDPadWest = 190 SteamV2LeftStickDPadEast = 191 SteamV2GyroMove = 192 SteamV2GyroPitch = 193 SteamV2GyroYaw = 194 SteamV2GyroRoll = 195 SwitchA = 196 SwitchB = 197 SwitchX = 198 SwitchY = 199 SwitchLeftBumper = 200 SwitchRightBumper = 201 SwitchPlus = 202 SwitchMinus = 203 SwitchCapture = 204 SwitchLeftTriggerPull = 205 SwitchLeftTriggerClick = 206 SwitchRightTriggerPull = 207 SwitchRightTriggerClick = 208 SwitchLeftStickMove = 209 SwitchLeftStickClick = 210 SwitchLeftStickDPadNorth = 211 SwitchLeftStickDPadSouth = 212 SwitchLeftStickDPadWest = 213 SwitchLeftStickDPadEast = 214 SwitchRightStickMove = 215 SwitchRightStickClick = 216 SwitchRightStickDPadNorth = 217 SwitchRightStickDPadSouth = 218 SwitchRightStickDPadWest = 219 SwitchRightStickDPadEast = 220 SwitchDPadNorth = 221 SwitchDPadSouth = 222 SwitchDPadWest = 223 SwitchDPadEast = 224 SwitchProGyroMove = 225 SwitchProGyroPitch = 226 SwitchProGyroYaw = 227 SwitchProGyroRoll = 228 SwitchRightGyroMove = 229 SwitchRightGyroPitch = 230 SwitchRightGyroYaw = 231 SwitchRightGyroRoll = 232 SwitchLeftGyroMove = 233 SwitchLeftGyroPitch = 234 SwitchLeftGyroYaw = 235 SwitchLeftGyroRoll = 236 SwitchLeftGripLower = 237 SwitchLeftGripUpper = 238 SwitchRightGripLower = 239 SwitchRightGripUpper = 240 PS4DPadMove = 241 XBoxOneDPadMove = 242 XBox360DPadMove = 243 SwitchDPadMove = 244 PS5X = 245 PS5Circle = 246 PS5Triangle = 247 PS5Square = 248 PS5LeftBumper = 249 PS5RightBumper = 250 PS5Option = 251 PS5Create = 252 PS5Mute = 253 PS5LeftPadTouch = 254 PS5LeftPadSwipe = 255 PS5LeftPadClick = 256 PS5LeftPadDPadNorth = 257 PS5LeftPadDPadSouth = 258 PS5LeftPadDPadWest = 259 PS5LeftPadDPadEast = 260 PS5RightPadTouch = 261 PS5RightPadSwipe = 262 PS5RightPadClick = 263 PS5RightPadDPadNorth = 264 PS5RightPadDPadSouth = 265 PS5RightPadDPadWest = 266 PS5RightPadDPadEast = 267 PS5CenterPadTouch = 268 PS5CenterPadSwipe = 269 PS5CenterPadClick = 270 PS5CenterPadDPadNorth = 271 PS5CenterPadDPadSouth = 272 PS5CenterPadDPadWest = 273 PS5CenterPadDPadEast = 274 PS5LeftTriggerPull = 275 PS5LeftTriggerClick = 276 PS5RightTriggerPull = 277 PS5RightTriggerClick = 278 PS5LeftStickMove = 279 PS5LeftStickClick = 280 PS5LeftStickDPadNorth = 281 PS5LeftStickDPadSouth = 282 PS5LeftStickDPadWest = 283 PS5LeftStickDPadEast = 284 PS5RightStickMove = 285 PS5RightStickClick = 286 PS5RightStickDPadNorth = 287 PS5RightStickDPadSouth = 288 PS5RightStickDPadWest = 289 PS5RightStickDPadEast = 290 PS5DPadMove = 291 PS5DPadNorth = 292 PS5DPadSouth = 293 PS5DPadWest = 294 PS5DPadEast = 295 PS5GyroMove = 296 PS5GyroPitch = 297 PS5GyroYaw = 298 PS5GyroRoll = 299 XBoxOneLeftGripLower = 300 XBoxOneLeftGripUpper = 301 XBoxOneRightGripLower = 302 XBoxOneRightGripUpper = 303 XBoxOneShare = 304 SteamDeckA = 305 SteamDeckB = 306 SteamDeckX = 307 SteamDeckY = 308 SteamDeckL1 = 309 SteamDeckR1 = 310 SteamDeckMenu = 311 SteamDeckView = 312 SteamDeckLeftPadTouch = 313 SteamDeckLeftPadSwipe = 314 SteamDeckLeftPadClick = 315 SteamDeckLeftPadDPadNorth = 316 SteamDeckLeftPadDPadSouth = 317 SteamDeckLeftPadDPadWest = 318 SteamDeckLeftPadDPadEast = 319 SteamDeckRightPadTouch = 320 SteamDeckRightPadSwipe = 321 SteamDeckRightPadClick = 322 SteamDeckRightPadDPadNorth = 323 SteamDeckRightPadDPadSouth = 324 SteamDeckRightPadDPadWest = 325 SteamDeckRightPadDPadEast = 326 SteamDeckL2SoftPull = 327 SteamDeckL2 = 328 SteamDeckR2SoftPull = 329 SteamDeckR2 = 330 SteamDeckLeftStickMove = 331 SteamDeckL3 = 332 SteamDeckLeftStickDPadNorth = 333 SteamDeckLeftStickDPadSouth = 334 SteamDeckLeftStickDPadWest = 335 SteamDeckLeftStickDPadEast = 336 SteamDeckLeftStickTouch = 337 SteamDeckRightStickMove = 338 SteamDeckR3 = 339 SteamDeckRightStickDPadNorth = 340 SteamDeckRightStickDPadSouth = 341 SteamDeckRightStickDPadWest = 342 SteamDeckRightStickDPadEast = 343 SteamDeckRightStickTouch = 344 SteamDeckL4 = 345 SteamDeckR4 = 346 SteamDeckL5 = 347 SteamDeckR5 = 348 SteamDeckDPadMove = 349 SteamDeckDPadNorth = 350 SteamDeckDPadSouth = 351 SteamDeckDPadWest = 352 SteamDeckDPadEast = 353 SteamDeckGyroMove = 354 SteamDeckGyroPitch = 355 SteamDeckGyroYaw = 356 SteamDeckGyroRoll = 357 SteamDeckReserved1 = 358 SteamDeckReserved2 = 359 SteamDeckReserved3 = 360 SteamDeckReserved4 = 361 SteamDeckReserved5 = 362 SteamDeckReserved6 = 363 SteamDeckReserved7 = 364 SteamDeckReserved8 = 365 SteamDeckReserved9 = 366 SteamDeckReserved10 = 367 SteamDeckReserved11 = 368 SteamDeckReserved12 = 369 SteamDeckReserved13 = 370 SteamDeckReserved14 = 371 SteamDeckReserved15 = 372 SteamDeckReserved16 = 373 SteamDeckReserved17 = 374 SteamDeckReserved18 = 375 SteamDeckReserved19 = 376 SteamDeckReserved20 = 377 SwitchJoyConButtonN = 378 SwitchJoyConButtonE = 379 SwitchJoyConButtonS = 380 SwitchJoyConButtonW = 381 PS5LeftGrip = 382 PS5RightGrip = 383 PS5LeftFn = 384 PS5RightFn = 385 HoripadM1 = 386 HoripadM2 = 387 HoripadL4 = 388 HoripadR4 = 389 Count = 390 MaximumPossibleValue = 32767"
  },
  "api/MarymoorStudios.Core.Steamworks.EControllerHapticLocation.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.EControllerHapticLocation.html",
    "title": "Enum EControllerHapticLocation",
    "summary": "Enum EControllerHapticLocation Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum EControllerHapticLocation Fields Left = 1 Right = 2 Both = 3"
  },
  "api/MarymoorStudios.Core.Steamworks.EControllerHapticType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.EControllerHapticType.html",
    "title": "Enum EControllerHapticType",
    "summary": "Enum EControllerHapticType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum EControllerHapticType Fields Off = 0 Tick = 1 Click = 2"
  },
  "api/MarymoorStudios.Core.Steamworks.EDenyReason.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.EDenyReason.html",
    "title": "Enum EDenyReason",
    "summary": "Enum EDenyReason Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum EDenyReason Fields Invalid = 0 InvalidVersion = 1 Generic = 2 NotLoggedOn = 3 NoLicense = 4 Cheater = 5 LoggedInElseWhere = 6 UnknownText = 7 IncompatibleAnticheat = 8 MemoryCorruption = 9 IncompatibleSoftware = 10 SteamConnectionLost = 11 SteamConnectionError = 12 SteamResponseTimedOut = 13 SteamValidationStalled = 14 SteamOwnerLeftGuestUser = 15"
  },
  "api/MarymoorStudios.Core.Steamworks.EDurationControlNotification.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.EDurationControlNotification.html",
    "title": "Enum EDurationControlNotification",
    "summary": "Enum EDurationControlNotification Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum EDurationControlNotification Fields None = 0 OneHour = 1 ThreeHours = 2 HalfProgress = 3 NoProgress = 4 ExitSoon3h = 5 ExitSoon5h = 6 ExitSoonNight = 7"
  },
  "api/MarymoorStudios.Core.Steamworks.EDurationControlOnlineState.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.EDurationControlOnlineState.html",
    "title": "Enum EDurationControlOnlineState",
    "summary": "Enum EDurationControlOnlineState Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum EDurationControlOnlineState Fields Invalid = 0 Offline = 1 Online = 2 OnlineHighPri = 3"
  },
  "api/MarymoorStudios.Core.Steamworks.EDurationControlProgress.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.EDurationControlProgress.html",
    "title": "Enum EDurationControlProgress",
    "summary": "Enum EDurationControlProgress Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum EDurationControlProgress Fields ProgressFull = 0 ProgressHalf = 1 ProgressNone = 2 ExitSoon3h = 3 ExitSoon5h = 4 ExitSoonNight = 5"
  },
  "api/MarymoorStudios.Core.Steamworks.EFloatingGamepadTextInputMode.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.EFloatingGamepadTextInputMode.html",
    "title": "Enum EFloatingGamepadTextInputMode",
    "summary": "Enum EFloatingGamepadTextInputMode Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum EFloatingGamepadTextInputMode Fields ModeSingleLine = 0 ModeMultipleLines = 1 ModeEmail = 2 ModeNumeric = 3"
  },
  "api/MarymoorStudios.Core.Steamworks.EFriendFlags.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.EFriendFlags.html",
    "title": "Enum EFriendFlags",
    "summary": "Enum EFriendFlags Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll [Flags] public enum EFriendFlags Fields None = 0 Blocked = 1 FriendshipRequested = 2 Immediate = 4 ClanMember = 8 OnGameServer = 16 RequestingFriendship = 128 RequestingInfo = 256 Ignored = 512 IgnoredFriend = 1024 ChatMember = 4096 All = 65535"
  },
  "api/MarymoorStudios.Core.Steamworks.EFriendRelationship.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.EFriendRelationship.html",
    "title": "Enum EFriendRelationship",
    "summary": "Enum EFriendRelationship Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum EFriendRelationship Fields None = 0 Blocked = 1 RequestRecipient = 2 Friend = 3 RequestInitiator = 4 Ignored = 5 IgnoredFriend = 6 SuggestedDEPRECATED = 7 Max = 8"
  },
  "api/MarymoorStudios.Core.Steamworks.EGameSearchErrorCode.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.EGameSearchErrorCode.html",
    "title": "Enum EGameSearchErrorCode",
    "summary": "Enum EGameSearchErrorCode Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum EGameSearchErrorCode Fields OK = 1 FailedSearchAlreadyInProgress = 2 FailedNoSearchInProgress = 3 FailedNotLobbyLeader = 4 FailedNoHostAvailable = 5 FailedSearchParamsInvalid = 6 FailedOffline = 7 FailedNotAuthorized = 8 FailedUnknownError = 9"
  },
  "api/MarymoorStudios.Core.Steamworks.EGamepadTextInputLineMode.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.EGamepadTextInputLineMode.html",
    "title": "Enum EGamepadTextInputLineMode",
    "summary": "Enum EGamepadTextInputLineMode Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum EGamepadTextInputLineMode Fields SingleLine = 0 MultipleLines = 1"
  },
  "api/MarymoorStudios.Core.Steamworks.EGamepadTextInputMode.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.EGamepadTextInputMode.html",
    "title": "Enum EGamepadTextInputMode",
    "summary": "Enum EGamepadTextInputMode Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum EGamepadTextInputMode Fields Normal = 0 Password = 1"
  },
  "api/MarymoorStudios.Core.Steamworks.EHTTPMethod.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.EHTTPMethod.html",
    "title": "Enum EHTTPMethod",
    "summary": "Enum EHTTPMethod Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum EHTTPMethod Fields Invalid = 0 GET = 1 HEAD = 2 POST = 3 PUT = 4 DELETE = 5 OPTIONS = 6 PATCH = 7"
  },
  "api/MarymoorStudios.Core.Steamworks.EHTTPStatusCode.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.EHTTPStatusCode.html",
    "title": "Enum EHTTPStatusCode",
    "summary": "Enum EHTTPStatusCode Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum EHTTPStatusCode Fields Invalid = 0 Continue = 100 SwitchingProtocols = 101 OK = 200 Created = 201 Accepted = 202 NonAuthoritative = 203 NoContent = 204 ResetContent = 205 PartialContent = 206 MultipleChoices = 300 MovedPermanently = 301 Found = 302 SeeOther = 303 NotModified = 304 UseProxy = 305 TemporaryRedirect = 307 PermanentRedirect = 308 BadRequest = 400 Unauthorized = 401 PaymentRequired = 402 Forbidden = 403 NotFound = 404 MethodNotAllowed = 405 NotAcceptable = 406 ProxyAuthRequired = 407 RequestTimeout = 408 Conflict = 409 Gone = 410 LengthRequired = 411 PreconditionFailed = 412 RequestEntityTooLarge = 413 RequestURITooLong = 414 UnsupportedMediaType = 415 RequestedRangeNotSatisfiable = 416 ExpectationFailed = 417 UnknownClientError = 418 TooManyRequests = 429 ConnectionClosed = 444 InternalServerError = 500 NotImplemented = 501 BadGateway = 502 ServiceUnavailable = 503 GatewayTimeout = 504 HTTPVersionNotSupported = 505 UnknownServerError = 599"
  },
  "api/MarymoorStudios.Core.Steamworks.EInputActionOrigin.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.EInputActionOrigin.html",
    "title": "Enum EInputActionOrigin",
    "summary": "Enum EInputActionOrigin Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum EInputActionOrigin Fields None = 0 SteamControllerA = 1 SteamControllerB = 2 SteamControllerX = 3 SteamControllerY = 4 SteamControllerLeftBumper = 5 SteamControllerRightBumper = 6 SteamControllerLeftGrip = 7 SteamControllerRightGrip = 8 SteamControllerStart = 9 SteamControllerBack = 10 SteamControllerLeftPadTouch = 11 SteamControllerLeftPadSwipe = 12 SteamControllerLeftPadClick = 13 SteamControllerLeftPadDPadNorth = 14 SteamControllerLeftPadDPadSouth = 15 SteamControllerLeftPadDPadWest = 16 SteamControllerLeftPadDPadEast = 17 SteamControllerRightPadTouch = 18 SteamControllerRightPadSwipe = 19 SteamControllerRightPadClick = 20 SteamControllerRightPadDPadNorth = 21 SteamControllerRightPadDPadSouth = 22 SteamControllerRightPadDPadWest = 23 SteamControllerRightPadDPadEast = 24 SteamControllerLeftTriggerPull = 25 SteamControllerLeftTriggerClick = 26 SteamControllerRightTriggerPull = 27 SteamControllerRightTriggerClick = 28 SteamControllerLeftStickMove = 29 SteamControllerLeftStickClick = 30 SteamControllerLeftStickDPadNorth = 31 SteamControllerLeftStickDPadSouth = 32 SteamControllerLeftStickDPadWest = 33 SteamControllerLeftStickDPadEast = 34 SteamControllerGyroMove = 35 SteamControllerGyroPitch = 36 SteamControllerGyroYaw = 37 SteamControllerGyroRoll = 38 SteamControllerReserved0 = 39 SteamControllerReserved1 = 40 SteamControllerReserved2 = 41 SteamControllerReserved3 = 42 SteamControllerReserved4 = 43 SteamControllerReserved5 = 44 SteamControllerReserved6 = 45 SteamControllerReserved7 = 46 SteamControllerReserved8 = 47 SteamControllerReserved9 = 48 SteamControllerReserved10 = 49 PS4X = 50 PS4Circle = 51 PS4Triangle = 52 PS4Square = 53 PS4LeftBumper = 54 PS4RightBumper = 55 PS4Options = 56 PS4Share = 57 PS4LeftPadTouch = 58 PS4LeftPadSwipe = 59 PS4LeftPadClick = 60 PS4LeftPadDPadNorth = 61 PS4LeftPadDPadSouth = 62 PS4LeftPadDPadWest = 63 PS4LeftPadDPadEast = 64 PS4RightPadTouch = 65 PS4RightPadSwipe = 66 PS4RightPadClick = 67 PS4RightPadDPadNorth = 68 PS4RightPadDPadSouth = 69 PS4RightPadDPadWest = 70 PS4RightPadDPadEast = 71 PS4CenterPadTouch = 72 PS4CenterPadSwipe = 73 PS4CenterPadClick = 74 PS4CenterPadDPadNorth = 75 PS4CenterPadDPadSouth = 76 PS4CenterPadDPadWest = 77 PS4CenterPadDPadEast = 78 PS4LeftTriggerPull = 79 PS4LeftTriggerClick = 80 PS4RightTriggerPull = 81 PS4RightTriggerClick = 82 PS4LeftStickMove = 83 PS4LeftStickClick = 84 PS4LeftStickDPadNorth = 85 PS4LeftStickDPadSouth = 86 PS4LeftStickDPadWest = 87 PS4LeftStickDPadEast = 88 PS4RightStickMove = 89 PS4RightStickClick = 90 PS4RightStickDPadNorth = 91 PS4RightStickDPadSouth = 92 PS4RightStickDPadWest = 93 PS4RightStickDPadEast = 94 PS4DPadNorth = 95 PS4DPadSouth = 96 PS4DPadWest = 97 PS4DPadEast = 98 PS4GyroMove = 99 PS4GyroPitch = 100 PS4GyroYaw = 101 PS4GyroRoll = 102 PS4DPadMove = 103 PS4Reserved1 = 104 PS4Reserved2 = 105 PS4Reserved3 = 106 PS4Reserved4 = 107 PS4Reserved5 = 108 PS4Reserved6 = 109 PS4Reserved7 = 110 PS4Reserved8 = 111 PS4Reserved9 = 112 PS4Reserved10 = 113 XBoxOneA = 114 XBoxOneB = 115 XBoxOneX = 116 XBoxOneY = 117 XBoxOneLeftBumper = 118 XBoxOneRightBumper = 119 XBoxOneMenu = 120 XBoxOneView = 121 XBoxOneLeftTriggerPull = 122 XBoxOneLeftTriggerClick = 123 XBoxOneRightTriggerPull = 124 XBoxOneRightTriggerClick = 125 XBoxOneLeftStickMove = 126 XBoxOneLeftStickClick = 127 XBoxOneLeftStickDPadNorth = 128 XBoxOneLeftStickDPadSouth = 129 XBoxOneLeftStickDPadWest = 130 XBoxOneLeftStickDPadEast = 131 XBoxOneRightStickMove = 132 XBoxOneRightStickClick = 133 XBoxOneRightStickDPadNorth = 134 XBoxOneRightStickDPadSouth = 135 XBoxOneRightStickDPadWest = 136 XBoxOneRightStickDPadEast = 137 XBoxOneDPadNorth = 138 XBoxOneDPadSouth = 139 XBoxOneDPadWest = 140 XBoxOneDPadEast = 141 XBoxOneDPadMove = 142 XBoxOneLeftGripLower = 143 XBoxOneLeftGripUpper = 144 XBoxOneRightGripLower = 145 XBoxOneRightGripUpper = 146 XBoxOneShare = 147 XBoxOneReserved6 = 148 XBoxOneReserved7 = 149 XBoxOneReserved8 = 150 XBoxOneReserved9 = 151 XBoxOneReserved10 = 152 XBox360A = 153 XBox360B = 154 XBox360X = 155 XBox360Y = 156 XBox360LeftBumper = 157 XBox360RightBumper = 158 XBox360Start = 159 XBox360Back = 160 XBox360LeftTriggerPull = 161 XBox360LeftTriggerClick = 162 XBox360RightTriggerPull = 163 XBox360RightTriggerClick = 164 XBox360LeftStickMove = 165 XBox360LeftStickClick = 166 XBox360LeftStickDPadNorth = 167 XBox360LeftStickDPadSouth = 168 XBox360LeftStickDPadWest = 169 XBox360LeftStickDPadEast = 170 XBox360RightStickMove = 171 XBox360RightStickClick = 172 XBox360RightStickDPadNorth = 173 XBox360RightStickDPadSouth = 174 XBox360RightStickDPadWest = 175 XBox360RightStickDPadEast = 176 XBox360DPadNorth = 177 XBox360DPadSouth = 178 XBox360DPadWest = 179 XBox360DPadEast = 180 XBox360DPadMove = 181 XBox360Reserved1 = 182 XBox360Reserved2 = 183 XBox360Reserved3 = 184 XBox360Reserved4 = 185 XBox360Reserved5 = 186 XBox360Reserved6 = 187 XBox360Reserved7 = 188 XBox360Reserved8 = 189 XBox360Reserved9 = 190 XBox360Reserved10 = 191 SwitchA = 192 SwitchB = 193 SwitchX = 194 SwitchY = 195 SwitchLeftBumper = 196 SwitchRightBumper = 197 SwitchPlus = 198 SwitchMinus = 199 SwitchCapture = 200 SwitchLeftTriggerPull = 201 SwitchLeftTriggerClick = 202 SwitchRightTriggerPull = 203 SwitchRightTriggerClick = 204 SwitchLeftStickMove = 205 SwitchLeftStickClick = 206 SwitchLeftStickDPadNorth = 207 SwitchLeftStickDPadSouth = 208 SwitchLeftStickDPadWest = 209 SwitchLeftStickDPadEast = 210 SwitchRightStickMove = 211 SwitchRightStickClick = 212 SwitchRightStickDPadNorth = 213 SwitchRightStickDPadSouth = 214 SwitchRightStickDPadWest = 215 SwitchRightStickDPadEast = 216 SwitchDPadNorth = 217 SwitchDPadSouth = 218 SwitchDPadWest = 219 SwitchDPadEast = 220 SwitchProGyroMove = 221 SwitchProGyroPitch = 222 SwitchProGyroYaw = 223 SwitchProGyroRoll = 224 SwitchDPadMove = 225 SwitchReserved1 = 226 SwitchReserved2 = 227 SwitchReserved3 = 228 SwitchReserved4 = 229 SwitchReserved5 = 230 SwitchReserved6 = 231 SwitchReserved7 = 232 SwitchReserved8 = 233 SwitchReserved9 = 234 SwitchReserved10 = 235 SwitchRightGyroMove = 236 SwitchRightGyroPitch = 237 SwitchRightGyroYaw = 238 SwitchRightGyroRoll = 239 SwitchLeftGyroMove = 240 SwitchLeftGyroPitch = 241 SwitchLeftGyroYaw = 242 SwitchLeftGyroRoll = 243 SwitchLeftGripLower = 244 SwitchLeftGripUpper = 245 SwitchRightGripLower = 246 SwitchRightGripUpper = 247 SwitchJoyConButtonN = 248 SwitchJoyConButtonE = 249 SwitchJoyConButtonS = 250 SwitchJoyConButtonW = 251 SwitchReserved15 = 252 SwitchReserved16 = 253 SwitchReserved17 = 254 SwitchReserved18 = 255 SwitchReserved19 = 256 SwitchReserved20 = 257 PS5X = 258 PS5Circle = 259 PS5Triangle = 260 PS5Square = 261 PS5LeftBumper = 262 PS5RightBumper = 263 PS5Option = 264 PS5Create = 265 PS5Mute = 266 PS5LeftPadTouch = 267 PS5LeftPadSwipe = 268 PS5LeftPadClick = 269 PS5LeftPadDPadNorth = 270 PS5LeftPadDPadSouth = 271 PS5LeftPadDPadWest = 272 PS5LeftPadDPadEast = 273 PS5RightPadTouch = 274 PS5RightPadSwipe = 275 PS5RightPadClick = 276 PS5RightPadDPadNorth = 277 PS5RightPadDPadSouth = 278 PS5RightPadDPadWest = 279 PS5RightPadDPadEast = 280 PS5CenterPadTouch = 281 PS5CenterPadSwipe = 282 PS5CenterPadClick = 283 PS5CenterPadDPadNorth = 284 PS5CenterPadDPadSouth = 285 PS5CenterPadDPadWest = 286 PS5CenterPadDPadEast = 287 PS5LeftTriggerPull = 288 PS5LeftTriggerClick = 289 PS5RightTriggerPull = 290 PS5RightTriggerClick = 291 PS5LeftStickMove = 292 PS5LeftStickClick = 293 PS5LeftStickDPadNorth = 294 PS5LeftStickDPadSouth = 295 PS5LeftStickDPadWest = 296 PS5LeftStickDPadEast = 297 PS5RightStickMove = 298 PS5RightStickClick = 299 PS5RightStickDPadNorth = 300 PS5RightStickDPadSouth = 301 PS5RightStickDPadWest = 302 PS5RightStickDPadEast = 303 PS5DPadNorth = 304 PS5DPadSouth = 305 PS5DPadWest = 306 PS5DPadEast = 307 PS5GyroMove = 308 PS5GyroPitch = 309 PS5GyroYaw = 310 PS5GyroRoll = 311 PS5DPadMove = 312 PS5LeftGrip = 313 PS5RightGrip = 314 PS5LeftFn = 315 PS5RightFn = 316 PS5Reserved5 = 317 PS5Reserved6 = 318 PS5Reserved7 = 319 PS5Reserved8 = 320 PS5Reserved9 = 321 PS5Reserved10 = 322 PS5Reserved11 = 323 PS5Reserved12 = 324 PS5Reserved13 = 325 PS5Reserved14 = 326 PS5Reserved15 = 327 PS5Reserved16 = 328 PS5Reserved17 = 329 PS5Reserved18 = 330 PS5Reserved19 = 331 PS5Reserved20 = 332 SteamDeckA = 333 SteamDeckB = 334 SteamDeckX = 335 SteamDeckY = 336 SteamDeckL1 = 337 SteamDeckR1 = 338 SteamDeckMenu = 339 SteamDeckView = 340 SteamDeckLeftPadTouch = 341 SteamDeckLeftPadSwipe = 342 SteamDeckLeftPadClick = 343 SteamDeckLeftPadDPadNorth = 344 SteamDeckLeftPadDPadSouth = 345 SteamDeckLeftPadDPadWest = 346 SteamDeckLeftPadDPadEast = 347 SteamDeckRightPadTouch = 348 SteamDeckRightPadSwipe = 349 SteamDeckRightPadClick = 350 SteamDeckRightPadDPadNorth = 351 SteamDeckRightPadDPadSouth = 352 SteamDeckRightPadDPadWest = 353 SteamDeckRightPadDPadEast = 354 SteamDeckL2SoftPull = 355 SteamDeckL2 = 356 SteamDeckR2SoftPull = 357 SteamDeckR2 = 358 SteamDeckLeftStickMove = 359 SteamDeckL3 = 360 SteamDeckLeftStickDPadNorth = 361 SteamDeckLeftStickDPadSouth = 362 SteamDeckLeftStickDPadWest = 363 SteamDeckLeftStickDPadEast = 364 SteamDeckLeftStickTouch = 365 SteamDeckRightStickMove = 366 SteamDeckR3 = 367 SteamDeckRightStickDPadNorth = 368 SteamDeckRightStickDPadSouth = 369 SteamDeckRightStickDPadWest = 370 SteamDeckRightStickDPadEast = 371 SteamDeckRightStickTouch = 372 SteamDeckL4 = 373 SteamDeckR4 = 374 SteamDeckL5 = 375 SteamDeckR5 = 376 SteamDeckDPadMove = 377 SteamDeckDPadNorth = 378 SteamDeckDPadSouth = 379 SteamDeckDPadWest = 380 SteamDeckDPadEast = 381 SteamDeckGyroMove = 382 SteamDeckGyroPitch = 383 SteamDeckGyroYaw = 384 SteamDeckGyroRoll = 385 SteamDeckReserved1 = 386 SteamDeckReserved2 = 387 SteamDeckReserved3 = 388 SteamDeckReserved4 = 389 SteamDeckReserved5 = 390 SteamDeckReserved6 = 391 SteamDeckReserved7 = 392 SteamDeckReserved8 = 393 SteamDeckReserved9 = 394 SteamDeckReserved10 = 395 SteamDeckReserved11 = 396 SteamDeckReserved12 = 397 SteamDeckReserved13 = 398 SteamDeckReserved14 = 399 SteamDeckReserved15 = 400 SteamDeckReserved16 = 401 SteamDeckReserved17 = 402 SteamDeckReserved18 = 403 SteamDeckReserved19 = 404 SteamDeckReserved20 = 405 HoripadM1 = 406 HoripadM2 = 407 HoripadL4 = 408 HoripadR4 = 409 Count = 410 MaximumPossibleValue = 32767"
  },
  "api/MarymoorStudios.Core.Steamworks.EInputSourceMode.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.EInputSourceMode.html",
    "title": "Enum EInputSourceMode",
    "summary": "Enum EInputSourceMode Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum EInputSourceMode Fields None = 0 Dpad = 1 Buttons = 2 FourButtons = 3 AbsoluteMouse = 4 RelativeMouse = 5 JoystickMove = 6 JoystickMouse = 7 JoystickCamera = 8 ScrollWheel = 9 Trigger = 10 TouchMenu = 11 MouseJoystick = 12 MouseRegion = 13 RadialMenu = 14 SingleButton = 15 Switches = 16"
  },
  "api/MarymoorStudios.Core.Steamworks.EItemPreviewType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.EItemPreviewType.html",
    "title": "Enum EItemPreviewType",
    "summary": "Enum EItemPreviewType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum EItemPreviewType Fields Image = 0 YouTubeVideo = 1 Sketchfab = 2 EnvironmentMapHorizontalCross = 3 EnvironmentMapLatLong = 4 Clip = 5 ReservedMax = 255"
  },
  "api/MarymoorStudios.Core.Steamworks.EItemState.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.EItemState.html",
    "title": "Enum EItemState",
    "summary": "Enum EItemState Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum EItemState Fields None = 0 Subscribed = 1 LegacyItem = 2 Installed = 4 NeedsUpdate = 8 Downloading = 16 DownloadPending = 32 DisabledLocally = 64"
  },
  "api/MarymoorStudios.Core.Steamworks.EItemStatistic.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.EItemStatistic.html",
    "title": "Enum EItemStatistic",
    "summary": "Enum EItemStatistic Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum EItemStatistic Fields NumSubscriptions = 0 NumFavorites = 1 NumFollowers = 2 NumUniqueSubscriptions = 3 NumUniqueFavorites = 4 NumUniqueFollowers = 5 NumUniqueWebsiteViews = 6 ReportScore = 7 NumSecondsPlayed = 8 NumPlaytimeSessions = 9 NumComments = 10 NumSecondsPlayedDuringTimePeriod = 11 NumPlaytimeSessionsDuringTimePeriod = 12"
  },
  "api/MarymoorStudios.Core.Steamworks.EItemUpdateStatus.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.EItemUpdateStatus.html",
    "title": "Enum EItemUpdateStatus",
    "summary": "Enum EItemUpdateStatus Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum EItemUpdateStatus Fields Invalid = 0 PreparingConfig = 1 PreparingContent = 2 UploadingContent = 3 UploadingPreviewFile = 4 CommittingChanges = 5"
  },
  "api/MarymoorStudios.Core.Steamworks.ELeaderboardDataRequest.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ELeaderboardDataRequest.html",
    "title": "Enum ELeaderboardDataRequest",
    "summary": "Enum ELeaderboardDataRequest Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum ELeaderboardDataRequest Fields Global = 0 GlobalAroundUser = 1 Friends = 2 Users = 3"
  },
  "api/MarymoorStudios.Core.Steamworks.ELeaderboardDisplayType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ELeaderboardDisplayType.html",
    "title": "Enum ELeaderboardDisplayType",
    "summary": "Enum ELeaderboardDisplayType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum ELeaderboardDisplayType Fields None = 0 Numeric = 1 TimeSeconds = 2 TimeMilliSeconds = 3"
  },
  "api/MarymoorStudios.Core.Steamworks.ELeaderboardSortMethod.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ELeaderboardSortMethod.html",
    "title": "Enum ELeaderboardSortMethod",
    "summary": "Enum ELeaderboardSortMethod Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum ELeaderboardSortMethod Fields None = 0 Ascending = 1 Descending = 2"
  },
  "api/MarymoorStudios.Core.Steamworks.ELeaderboardUploadScoreMethod.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ELeaderboardUploadScoreMethod.html",
    "title": "Enum ELeaderboardUploadScoreMethod",
    "summary": "Enum ELeaderboardUploadScoreMethod Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum ELeaderboardUploadScoreMethod Fields None = 0 KeepBest = 1 ForceUpdate = 2"
  },
  "api/MarymoorStudios.Core.Steamworks.ELobbyComparison.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ELobbyComparison.html",
    "title": "Enum ELobbyComparison",
    "summary": "Enum ELobbyComparison Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum ELobbyComparison Fields EqualToOrLessThan = -2 LessThan = -1 Equal = 0 GreaterThan = 1 EqualToOrGreaterThan = 2 NotEqual = 3"
  },
  "api/MarymoorStudios.Core.Steamworks.ELobbyDistanceFilter.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ELobbyDistanceFilter.html",
    "title": "Enum ELobbyDistanceFilter",
    "summary": "Enum ELobbyDistanceFilter Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum ELobbyDistanceFilter Fields Close = 0 Default = 1 Far = 2 Worldwide = 3"
  },
  "api/MarymoorStudios.Core.Steamworks.ELobbyType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ELobbyType.html",
    "title": "Enum ELobbyType",
    "summary": "Enum ELobbyType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum ELobbyType Fields Private = 0 FriendsOnly = 1 Public = 2 Invisible = 3 PrivateUnique = 4"
  },
  "api/MarymoorStudios.Core.Steamworks.EMarketNotAllowedReasonFlags.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.EMarketNotAllowedReasonFlags.html",
    "title": "Enum EMarketNotAllowedReasonFlags",
    "summary": "Enum EMarketNotAllowedReasonFlags Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum EMarketNotAllowedReasonFlags Fields None = 0 TemporaryFailure = 1 AccountDisabled = 2 AccountLockedDown = 4 AccountLimited = 8 TradeBanned = 16 AccountNotTrusted = 32 SteamGuardNotEnabled = 64 SteamGuardOnlyRecentlyEnabled = 128 RecentPasswordReset = 256 NewPaymentMethod = 512 InvalidCookie = 1024 UsingNewDevice = 2048 RecentSelfRefund = 4096 NewPaymentMethodCannotBeVerified = 8192 NoRecentPurchases = 16384 AcceptedWalletGift = 32768"
  },
  "api/MarymoorStudios.Core.Steamworks.EMatchMakingServerResponse.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.EMatchMakingServerResponse.html",
    "title": "Enum EMatchMakingServerResponse",
    "summary": "Enum EMatchMakingServerResponse Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum EMatchMakingServerResponse Fields ServerResponded = 0 ServerFailedToRespond = 1 NoServersListedOnMasterServer = 2"
  },
  "api/MarymoorStudios.Core.Steamworks.ENotificationPosition.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ENotificationPosition.html",
    "title": "Enum ENotificationPosition",
    "summary": "Enum ENotificationPosition Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum ENotificationPosition Fields Invalid = -1 TopLeft = 0 TopRight = 1 BottomLeft = 2 BottomRight = 3"
  },
  "api/MarymoorStudios.Core.Steamworks.EOverlayToStoreFlag.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.EOverlayToStoreFlag.html",
    "title": "Enum EOverlayToStoreFlag",
    "summary": "Enum EOverlayToStoreFlag Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum EOverlayToStoreFlag Fields None = 0 AddToCart = 1 AddToCartAndShow = 2"
  },
  "api/MarymoorStudios.Core.Steamworks.EP2PSend.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.EP2PSend.html",
    "title": "Enum EP2PSend",
    "summary": "Enum EP2PSend Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum EP2PSend Fields Unreliable = 0 UnreliableNoDelay = 1 Reliable = 2 ReliableWithBuffering = 3"
  },
  "api/MarymoorStudios.Core.Steamworks.EP2PSessionError.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.EP2PSessionError.html",
    "title": "Enum EP2PSessionError",
    "summary": "Enum EP2PSessionError Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum EP2PSessionError Fields None = 0 NoRightsToApp = 2 Timeout = 4 NotRunningAppDELETED = 1 DestinationNotLoggedInDELETED = 3 Max = 5"
  },
  "api/MarymoorStudios.Core.Steamworks.EParentalFeature.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.EParentalFeature.html",
    "title": "Enum EParentalFeature",
    "summary": "Enum EParentalFeature Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum EParentalFeature Fields Invalid = 0 Store = 1 Community = 2 Profile = 3 Friends = 4 News = 5 Trading = 6 Settings = 7 Console = 8 Browser = 9 ParentalSetup = 10 Library = 11 Test = 12 SiteLicense = 13 KioskModeDeprecated = 14 BlockAlways = 15 Max = 16"
  },
  "api/MarymoorStudios.Core.Steamworks.EPersonaChange.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.EPersonaChange.html",
    "title": "Enum EPersonaChange",
    "summary": "Enum EPersonaChange Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum EPersonaChange Fields Name = 1 Status = 2 ComeOnline = 4 GoneOffline = 8 GamePlayed = 16 GameServer = 32 Avatar = 64 JoinedSource = 128 LeftSource = 256 RelationshipChanged = 512 NameFirstSet = 1024 Broadcast = 2048 Nickname = 4096 SteamLevel = 8192 RichPresence = 16384"
  },
  "api/MarymoorStudios.Core.Steamworks.EPersonaState.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.EPersonaState.html",
    "title": "Enum EPersonaState",
    "summary": "Enum EPersonaState Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum EPersonaState Fields Offline = 0 Online = 1 Busy = 2 Away = 3 Snooze = 4 LookingToTrade = 5 LookingToPlay = 6 Invisible = 7 Max = 8"
  },
  "api/MarymoorStudios.Core.Steamworks.EPlayerResult.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.EPlayerResult.html",
    "title": "Enum EPlayerResult",
    "summary": "Enum EPlayerResult Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum EPlayerResult Fields FailedToConnect = 1 Abandoned = 2 Kicked = 3 Incomplete = 4 Completed = 5"
  },
  "api/MarymoorStudios.Core.Steamworks.ERemotePlayInputType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ERemotePlayInputType.html",
    "title": "Enum ERemotePlayInputType",
    "summary": "Enum ERemotePlayInputType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum ERemotePlayInputType Fields Unknown = 0 MouseMotion = 1 MouseButtonDown = 2 MouseButtonUp = 3 MouseWheel = 4 KeyDown = 5 KeyUp = 6"
  },
  "api/MarymoorStudios.Core.Steamworks.ERemotePlayKeyModifier.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ERemotePlayKeyModifier.html",
    "title": "Enum ERemotePlayKeyModifier",
    "summary": "Enum ERemotePlayKeyModifier Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum ERemotePlayKeyModifier Fields None = 0 LeftShift = 1 RightShift = 2 LeftControl = 64 RightControl = 128 LeftAlt = 256 RightAlt = 512 LeftGUI = 1024 RightGUI = 2048 NumLock = 4096 CapsLock = 8192 Mask = 65535"
  },
  "api/MarymoorStudios.Core.Steamworks.ERemotePlayMouseButton.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ERemotePlayMouseButton.html",
    "title": "Enum ERemotePlayMouseButton",
    "summary": "Enum ERemotePlayMouseButton Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum ERemotePlayMouseButton Fields Left = 1 Right = 2 Middle = 16 X1 = 32 X2 = 64"
  },
  "api/MarymoorStudios.Core.Steamworks.ERemotePlayMouseWheelDirection.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ERemotePlayMouseWheelDirection.html",
    "title": "Enum ERemotePlayMouseWheelDirection",
    "summary": "Enum ERemotePlayMouseWheelDirection Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum ERemotePlayMouseWheelDirection Fields Up = 1 Down = 2 Left = 3 Right = 4"
  },
  "api/MarymoorStudios.Core.Steamworks.ERemotePlayScancode.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ERemotePlayScancode.html",
    "title": "Enum ERemotePlayScancode",
    "summary": "Enum ERemotePlayScancode Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum ERemotePlayScancode Fields Unknown = 0 KeyA = 4 KeyB = 5 KeyC = 6 KeyD = 7 KeyE = 8 KeyF = 9 KeyG = 10 KeyH = 11 KeyI = 12 KeyJ = 13 KeyK = 14 KeyL = 15 KeyM = 16 KeyN = 17 KeyO = 18 KeyP = 19 KeyQ = 20 KeyR = 21 KeyS = 22 KeyT = 23 KeyU = 24 KeyV = 25 KeyW = 26 KeyX = 27 KeyY = 28 KeyZ = 29 Key1 = 30 Key2 = 31 Key3 = 32 Key4 = 33 Key5 = 34 Key6 = 35 Key7 = 36 Key8 = 37 Key9 = 38 Key0 = 39 Return = 40 Escape = 41 Backspace = 42 Tab = 43 Space = 44 Minus = 45 Equals = 46 LeftBracket = 47 RightBracket = 48 Backslash = 49 Semicolon = 51 Apostrophe = 52 Grave = 53 Comma = 54 Period = 55 Slash = 56 CapsLock = 57 F1 = 58 F2 = 59 F3 = 60 F4 = 61 F5 = 62 F6 = 63 F7 = 64 F8 = 65 F9 = 66 F10 = 67 F11 = 68 F12 = 69 Insert = 73 Home = 74 PageUp = 75 Delete = 76 End = 77 PageDown = 78 Right = 79 Left = 80 Down = 81 Up = 82 LeftControl = 224 LeftShift = 225 LeftAlt = 226 LeftGUI = 227 RightControl = 228 RightShift = 229 RightALT = 230 RightGUI = 231"
  },
  "api/MarymoorStudios.Core.Steamworks.ERemoteStorageFilePathType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ERemoteStorageFilePathType.html",
    "title": "Enum ERemoteStorageFilePathType",
    "summary": "Enum ERemoteStorageFilePathType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum ERemoteStorageFilePathType Fields Invalid = 0 Absolute = 1 APIFilename = 2"
  },
  "api/MarymoorStudios.Core.Steamworks.ERemoteStorageLocalFileChange.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ERemoteStorageLocalFileChange.html",
    "title": "Enum ERemoteStorageLocalFileChange",
    "summary": "Enum ERemoteStorageLocalFileChange Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum ERemoteStorageLocalFileChange Fields Invalid = 0 FileUpdated = 1 FileDeleted = 2"
  },
  "api/MarymoorStudios.Core.Steamworks.ERemoteStoragePlatform.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ERemoteStoragePlatform.html",
    "title": "Enum ERemoteStoragePlatform",
    "summary": "Enum ERemoteStoragePlatform Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum ERemoteStoragePlatform Fields None = 0 Windows = 1 OSX = 2 PS3 = 4 Linux = 8 Switch = 16 Android = 32 IOS = 64 All = -1"
  },
  "api/MarymoorStudios.Core.Steamworks.ERemoteStoragePublishedFileVisibility.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ERemoteStoragePublishedFileVisibility.html",
    "title": "Enum ERemoteStoragePublishedFileVisibility",
    "summary": "Enum ERemoteStoragePublishedFileVisibility Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum ERemoteStoragePublishedFileVisibility Fields Public = 0 FriendsOnly = 1 Private = 2 Unlisted = 3"
  },
  "api/MarymoorStudios.Core.Steamworks.EResult.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.EResult.html",
    "title": "Enum EResult",
    "summary": "Enum EResult Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum EResult Fields None = 0 OK = 1 Fail = 2 NoConnection = 3 InvalidPassword = 5 LoggedInElsewhere = 6 InvalidProtocolVer = 7 InvalidParam = 8 FileNotFound = 9 Busy = 10 InvalidState = 11 InvalidName = 12 InvalidEmail = 13 DuplicateName = 14 AccessDenied = 15 Timeout = 16 Banned = 17 AccountNotFound = 18 InvalidSteamID = 19 ServiceUnavailable = 20 NotLoggedOn = 21 Pending = 22 EncryptionFailure = 23 InsufficientPrivilege = 24 LimitExceeded = 25 Revoked = 26 Expired = 27 AlreadyRedeemed = 28 DuplicateRequest = 29 AlreadyOwned = 30 IPNotFound = 31 PersistFailed = 32 LockingFailed = 33 LogonSessionReplaced = 34 ConnectFailed = 35 HandshakeFailed = 36 IOFailure = 37 RemoteDisconnect = 38 ShoppingCartNotFound = 39 Blocked = 40 Ignored = 41 NoMatch = 42 AccountDisabled = 43 ServiceReadOnly = 44 AccountNotFeatured = 45 AdministratorOK = 46 ContentVersion = 47 TryAnotherCM = 48 PasswordRequiredToKickSession = 49 AlreadyLoggedInElsewhere = 50 Suspended = 51 Cancelled = 52 DataCorruption = 53 DiskFull = 54 RemoteCallFailed = 55 PasswordUnset = 56 ExternalAccountUnlinked = 57 PSNTicketInvalid = 58 ExternalAccountAlreadyLinked = 59 RemoteFileConflict = 60 IllegalPassword = 61 SameAsPreviousValue = 62 AccountLogonDenied = 63 CannotUseOldPassword = 64 InvalidLoginAuthCode = 65 AccountLogonDeniedNoMail = 66 HardwareNotCapableOfIPT = 67 IPTInitError = 68 ParentalControlRestricted = 69 FacebookQueryError = 70 ExpiredLoginAuthCode = 71 IPLoginRestrictionFailed = 72 AccountLockedDown = 73 AccountLogonDeniedVerifiedEmailRequired = 74 NoMatchingURL = 75 BadResponse = 76 RequirePasswordReEntry = 77 ValueOutOfRange = 78 UnexpectedError = 79 Disabled = 80 InvalidCEGSubmission = 81 RestrictedDevice = 82 RegionLocked = 83 RateLimitExceeded = 84 AccountLoginDeniedNeedTwoFactor = 85 ItemDeleted = 86 AccountLoginDeniedThrottle = 87 TwoFactorCodeMismatch = 88 TwoFactorActivationCodeMismatch = 89 AccountAssociatedToMultiplePartners = 90 NotModified = 91 NoMobileDevice = 92 TimeNotSynced = 93 SmsCodeFailed = 94 AccountLimitExceeded = 95 AccountActivityLimitExceeded = 96 PhoneActivityLimitExceeded = 97 RefundToWallet = 98 EmailSendFailure = 99 NotSettled = 100 NeedCaptcha = 101 GSLTDenied = 102 GSOwnerDenied = 103 InvalidItemType = 104 IPBanned = 105 GSLTExpired = 106 InsufficientFunds = 107 TooManyPending = 108 NoSiteLicensesFound = 109 WGNetworkSendExceeded = 110 AccountNotFriends = 111 LimitedUserAccount = 112 CantRemoveItem = 113 AccountDeleted = 114 ExistingUserCancelledLicense = 115 CommunityCooldown = 116 NoLauncherSpecified = 117 MustAgreeToSSA = 118 LauncherMigrated = 119 SteamRealmMismatch = 120 InvalidSignature = 121 ParseFailure = 122 NoVerifiedPhone = 123 InsufficientBattery = 124 ChargerRequired = 125 CachedCredentialInvalid = 126 PhoneNumberIsVOIP = 127 NotSupported = 128 FamilySizeLimitExceeded = 129 OfflineAppCacheInvalid = 130"
  },
  "api/MarymoorStudios.Core.Steamworks.ESNetSocketConnectionType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ESNetSocketConnectionType.html",
    "title": "Enum ESNetSocketConnectionType",
    "summary": "Enum ESNetSocketConnectionType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum ESNetSocketConnectionType Fields NotConnected = 0 UDP = 1 UDPRelay = 2"
  },
  "api/MarymoorStudios.Core.Steamworks.ESNetSocketState.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ESNetSocketState.html",
    "title": "Enum ESNetSocketState",
    "summary": "Enum ESNetSocketState Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum ESNetSocketState Fields Invalid = 0 Connected = 1 Initiated = 10 LocalCandidatesFound = 11 ReceivedRemoteCandidates = 12 ChallengeHandshake = 15 Disconnecting = 21 LocalDisconnect = 22 TimeoutDuringConnect = 23 RemoteEndDisconnected = 24 ConnectionBroken = 25"
  },
  "api/MarymoorStudios.Core.Steamworks.EServerMode.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.EServerMode.html",
    "title": "Enum EServerMode",
    "summary": "Enum EServerMode Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum EServerMode Fields Invalid = 0 NoAuthentication = 1 Authentication = 2 AuthenticationAndSecure = 3"
  },
  "api/MarymoorStudios.Core.Steamworks.ESteamAPICallFailure.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ESteamAPICallFailure.html",
    "title": "Enum ESteamAPICallFailure",
    "summary": "Enum ESteamAPICallFailure Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum ESteamAPICallFailure Fields None = -1 SteamGone = 0 NetworkFailure = 1 InvalidHandle = 2 MismatchedCallback = 3"
  },
  "api/MarymoorStudios.Core.Steamworks.ESteamAPIInitResult.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ESteamAPIInitResult.html",
    "title": "Enum ESteamAPIInitResult",
    "summary": "Enum ESteamAPIInitResult Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum ESteamAPIInitResult Fields OK = 0 FailedGeneric = 1 NoSteamClient = 2 VersionMismatch = 3"
  },
  "api/MarymoorStudios.Core.Steamworks.ESteamControllerLEDFlag.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ESteamControllerLEDFlag.html",
    "title": "Enum ESteamControllerLEDFlag",
    "summary": "Enum ESteamControllerLEDFlag Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum ESteamControllerLEDFlag Fields SetColor = 0 RestoreUserDefault = 1"
  },
  "api/MarymoorStudios.Core.Steamworks.ESteamControllerPad.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ESteamControllerPad.html",
    "title": "Enum ESteamControllerPad",
    "summary": "Enum ESteamControllerPad Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum ESteamControllerPad Fields Left = 0 Right = 1"
  },
  "api/MarymoorStudios.Core.Steamworks.ESteamDeviceFormFactor.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ESteamDeviceFormFactor.html",
    "title": "Enum ESteamDeviceFormFactor",
    "summary": "Enum ESteamDeviceFormFactor Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum ESteamDeviceFormFactor Fields Unknown = 0 Phone = 1 Tablet = 2 Computer = 3 TV = 4 VRHeadset = 5"
  },
  "api/MarymoorStudios.Core.Steamworks.ESteamIPType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ESteamIPType.html",
    "title": "Enum ESteamIPType",
    "summary": "Enum ESteamIPType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum ESteamIPType Fields IPv4 = 0 IPv6 = 1"
  },
  "api/MarymoorStudios.Core.Steamworks.ESteamIPv6ConnectivityProtocol.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ESteamIPv6ConnectivityProtocol.html",
    "title": "Enum ESteamIPv6ConnectivityProtocol",
    "summary": "Enum ESteamIPv6ConnectivityProtocol Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum ESteamIPv6ConnectivityProtocol Fields Invalid = 0 HTTP = 1 UDP = 2"
  },
  "api/MarymoorStudios.Core.Steamworks.ESteamIPv6ConnectivityState.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ESteamIPv6ConnectivityState.html",
    "title": "Enum ESteamIPv6ConnectivityState",
    "summary": "Enum ESteamIPv6ConnectivityState Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum ESteamIPv6ConnectivityState Fields Unknown = 0 Good = 1 Bad = 2"
  },
  "api/MarymoorStudios.Core.Steamworks.ESteamInputActionEventType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ESteamInputActionEventType.html",
    "title": "Enum ESteamInputActionEventType",
    "summary": "Enum ESteamInputActionEventType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum ESteamInputActionEventType Fields DigitalAction = 0 AnalogAction = 1"
  },
  "api/MarymoorStudios.Core.Steamworks.ESteamInputConfigurationEnableType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ESteamInputConfigurationEnableType.html",
    "title": "Enum ESteamInputConfigurationEnableType",
    "summary": "Enum ESteamInputConfigurationEnableType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum ESteamInputConfigurationEnableType Fields None = 0 Playstation = 1 Xbox = 2 Generic = 4 Switch = 8"
  },
  "api/MarymoorStudios.Core.Steamworks.ESteamInputGlyphSize.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ESteamInputGlyphSize.html",
    "title": "Enum ESteamInputGlyphSize",
    "summary": "Enum ESteamInputGlyphSize Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum ESteamInputGlyphSize Fields Small = 0 Medium = 1 Large = 2 Count = 3"
  },
  "api/MarymoorStudios.Core.Steamworks.ESteamInputGlyphStyle.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ESteamInputGlyphStyle.html",
    "title": "Enum ESteamInputGlyphStyle",
    "summary": "Enum ESteamInputGlyphStyle Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum ESteamInputGlyphStyle Fields Knockout = 0 Light = 1 Dark = 2 NeutralColorABXY = 16 SolidABXY = 32"
  },
  "api/MarymoorStudios.Core.Steamworks.ESteamInputLEDFlag.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ESteamInputLEDFlag.html",
    "title": "Enum ESteamInputLEDFlag",
    "summary": "Enum ESteamInputLEDFlag Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum ESteamInputLEDFlag Fields SetColor = 0 RestoreUserDefault = 1"
  },
  "api/MarymoorStudios.Core.Steamworks.ESteamInputType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ESteamInputType.html",
    "title": "Enum ESteamInputType",
    "summary": "Enum ESteamInputType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum ESteamInputType Fields Unknown = 0 SteamController = 1 XBox360Controller = 2 XBoxOneController = 3 GenericGamepad = 4 PS4Controller = 5 AppleMFiController = 6 AndroidController = 7 SwitchJoyConPair = 8 SwitchJoyConSingle = 9 SwitchProController = 10 MobileTouch = 11 PS3Controller = 12 PS5Controller = 13 SteamDeckController = 14 Count = 15 MaximumPossibleValue = 255"
  },
  "api/MarymoorStudios.Core.Steamworks.ESteamItemFlags.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ESteamItemFlags.html",
    "title": "Enum ESteamItemFlags",
    "summary": "Enum ESteamItemFlags Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum ESteamItemFlags Fields NoTrade = 1 Removed = 256 Consumed = 512"
  },
  "api/MarymoorStudios.Core.Steamworks.ESteamNetConnectionEnd.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ESteamNetConnectionEnd.html",
    "title": "Enum ESteamNetConnectionEnd",
    "summary": "Enum ESteamNetConnectionEnd Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum ESteamNetConnectionEnd Fields Invalid = 0 AppMin = 1000 AppGeneric = 1000 AppMax = 1999 AppExceptionMin = 2000 AppExceptionGeneric = 2000 AppExceptionMax = 2999 LocalMin = 3000 LocalOfflineMode = 3001 LocalManyRelayConnectivity = 3002 LocalHostedServerPrimaryRelay = 3003 LocalNetworkConfig = 3004 LocalRights = 3005 LocalP2PICENoPublicAddresses = 3006 LocalMax = 3999 RemoteMin = 4000 RemoteTimeout = 4001 RemoteBadCrypt = 4002 RemoteBadCert = 4003 RemoteBadProtocolVersion = 4006 RemoteP2PICENoPublicAddresses = 4007 RemoteMax = 4999 MiscMin = 5000 MiscGeneric = 5001 MiscInternalError = 5002 MiscTimeout = 5003 MiscSteamConnectivity = 5005 MiscNoRelaySessionsToClient = 5006 MiscP2PRendezvous = 5008 MiscP2PNATFirewall = 5009 MiscPeerSentNoConnection = 5010 MiscMax = 5999"
  },
  "api/MarymoorStudios.Core.Steamworks.ESteamNetworkingAvailability.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ESteamNetworkingAvailability.html",
    "title": "Enum ESteamNetworkingAvailability",
    "summary": "Enum ESteamNetworkingAvailability Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum ESteamNetworkingAvailability Fields CannotTry = -102 Failed = -101 Previously = -100 Retrying = -10 NeverTried = 1 Waiting = 2 Attempting = 3 Current = 100 Unknown = 0 Force32bit = 2147483647"
  },
  "api/MarymoorStudios.Core.Steamworks.ESteamNetworkingConfigDataType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ESteamNetworkingConfigDataType.html",
    "title": "Enum ESteamNetworkingConfigDataType",
    "summary": "Enum ESteamNetworkingConfigDataType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum ESteamNetworkingConfigDataType Fields Int32 = 1 Int64 = 2 Float = 3 String = 4 Ptr = 5"
  },
  "api/MarymoorStudios.Core.Steamworks.ESteamNetworkingConfigScope.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ESteamNetworkingConfigScope.html",
    "title": "Enum ESteamNetworkingConfigScope",
    "summary": "Enum ESteamNetworkingConfigScope Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum ESteamNetworkingConfigScope Fields Global = 1 SocketsInterface = 2 ListenSocket = 3 Connection = 4"
  },
  "api/MarymoorStudios.Core.Steamworks.ESteamNetworkingConfigValue.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ESteamNetworkingConfigValue.html",
    "title": "Enum ESteamNetworkingConfigValue",
    "summary": "Enum ESteamNetworkingConfigValue Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum ESteamNetworkingConfigValue Fields Invalid = 0 TimeoutInitial = 24 TimeoutConnected = 25 SendBufferSize = 9 RecvBufferSize = 47 RecvBufferMessages = 48 RecvMaxMessageSize = 49 RecvMaxSegmentsPerPacket = 50 ConnectionUserData = 40 SendRateMin = 10 SendRateMax = 11 NagleTime = 12 IPAllowWithoutAuth = 23 IPLocalHostAllowWithoutAuth = 52 MTUPacketSize = 32 MTUDataSize = 33 Unencrypted = 34 SymmetricConnect = 37 LocalVirtualPort = 38 DualWifiEnable = 39 EnableDiagnosticsUI = 46 SendTimeSincePreviousPacket = 59 FakePacketLossSend = 2 FakePacketLossRecv = 3 FakePacketLagSend = 4 FakePacketLagRecv = 5 FakePacketJitterSendAvg = 53 FakePacketJitterSendMax = 54 FakePacketJitterSendPct = 55 FakePacketJitterRecvAvg = 56 FakePacketJitterRecvMax = 57 FakePacketJitterRecvPct = 58 FakePacketReorderSend = 6 FakePacketReorderRecv = 7 FakePacketReorderTime = 8 FakePacketDupSend = 26 FakePacketDupRecv = 27 FakePacketDupTimeMax = 28 PacketTraceMaxBytes = 41 FakeRateLimitSendRate = 42 FakeRateLimitSendBurst = 43 FakeRateLimitRecvRate = 44 FakeRateLimitRecvBurst = 45 OutOfOrderCorrectionWindowMicroseconds = 51 CallbackConnectionStatusChanged = 201 CallbackAuthStatusChanged = 202 CallbackRelayNetworkStatusChanged = 203 CallbackMessagesSessionRequest = 204 CallbackMessagesSessionFailed = 205 CallbackCreateConnectionSignaling = 206 CallbackFakeIPResult = 207 P2PSTUNServerList = 103 P2PTransportICEEnable = 104 P2PTransportICEPenalty = 105 P2PTransportSDRPenalty = 106 P2PTURNServerList = 107 P2PTURNUserList = 108 P2PTURNPassList = 109 P2PTransportICEImplementation = 110 SDRClientConsecutitivePingTimeoutsFailInitial = 19 SDRClientConsecutitivePingTimeoutsFail = 20 SDRClientMinPingsBeforePingAccurate = 21 SDRClientSingleSocket = 22 SDRClientForceRelayCluster = 29 SDRClientDevTicket = 30 SDRClientForceProxyAddr = 31 SDRClientFakeClusterPing = 36 SDRClientLimitPingProbesToNearestN = 60 LogLevelAckRTT = 13 LogLevelPacketDecode = 14 LogLevelMessage = 15 LogLevelPacketGaps = 16 LogLevelP2PRendezvous = 17 LogLevelSDRRelayPings = 18 ECN = 999 DELETEDEnumerateDevVars = 35"
  },
  "api/MarymoorStudios.Core.Steamworks.ESteamNetworkingConnectionState.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ESteamNetworkingConnectionState.html",
    "title": "Enum ESteamNetworkingConnectionState",
    "summary": "Enum ESteamNetworkingConnectionState Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum ESteamNetworkingConnectionState Fields None = 0 Connecting = 1 FindingRoute = 2 Connected = 3 ClosedByPeer = 4 ProblemDetectedLocally = 5 FinWait = -1 Linger = -2 Dead = -3"
  },
  "api/MarymoorStudios.Core.Steamworks.ESteamNetworkingFakeIPType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ESteamNetworkingFakeIPType.html",
    "title": "Enum ESteamNetworkingFakeIPType",
    "summary": "Enum ESteamNetworkingFakeIPType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum ESteamNetworkingFakeIPType Fields Invalid = 0 NotFake = 1 GlobalIPv4 = 2 LocalIPv4 = 3"
  },
  "api/MarymoorStudios.Core.Steamworks.ESteamNetworkingGetConfigValueResult.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ESteamNetworkingGetConfigValueResult.html",
    "title": "Enum ESteamNetworkingGetConfigValueResult",
    "summary": "Enum ESteamNetworkingGetConfigValueResult Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum ESteamNetworkingGetConfigValueResult Fields BadValue = -1 BadScopeObj = -2 BufferTooSmall = -3 OK = 1 OKInherited = 2"
  },
  "api/MarymoorStudios.Core.Steamworks.ESteamNetworkingIdentityType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ESteamNetworkingIdentityType.html",
    "title": "Enum ESteamNetworkingIdentityType",
    "summary": "Enum ESteamNetworkingIdentityType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum ESteamNetworkingIdentityType Fields Invalid = 0 SteamID = 16 XboxPairwiseID = 17 SonyPSN = 18 IPAddress = 1 GenericString = 2 GenericBytes = 3 UnknownType = 4 Force32bit = 2147483647"
  },
  "api/MarymoorStudios.Core.Steamworks.ESteamNetworkingSocketsDebugOutputType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ESteamNetworkingSocketsDebugOutputType.html",
    "title": "Enum ESteamNetworkingSocketsDebugOutputType",
    "summary": "Enum ESteamNetworkingSocketsDebugOutputType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum ESteamNetworkingSocketsDebugOutputType Fields None = 0 Bug = 1 Error = 2 Important = 3 Warning = 4 Msg = 5 Verbose = 6 Debug = 7 Everything = 8"
  },
  "api/MarymoorStudios.Core.Steamworks.ESteamPartyBeaconLocationData.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ESteamPartyBeaconLocationData.html",
    "title": "Enum ESteamPartyBeaconLocationData",
    "summary": "Enum ESteamPartyBeaconLocationData Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum ESteamPartyBeaconLocationData Fields Invalid = 0 Name = 1 IconURLSmall = 2 IconURLMedium = 3 IconURLLarge = 4"
  },
  "api/MarymoorStudios.Core.Steamworks.ESteamPartyBeaconLocationType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ESteamPartyBeaconLocationType.html",
    "title": "Enum ESteamPartyBeaconLocationType",
    "summary": "Enum ESteamPartyBeaconLocationType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum ESteamPartyBeaconLocationType Fields Invalid = 0 ChatGroup = 1 Max = 2"
  },
  "api/MarymoorStudios.Core.Steamworks.ETextFilteringContext.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ETextFilteringContext.html",
    "title": "Enum ETextFilteringContext",
    "summary": "Enum ETextFilteringContext Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum ETextFilteringContext Fields Unknown = 0 GameContent = 1 Chat = 2 Name = 3"
  },
  "api/MarymoorStudios.Core.Steamworks.ETimelineEventClipPriority.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ETimelineEventClipPriority.html",
    "title": "Enum ETimelineEventClipPriority",
    "summary": "Enum ETimelineEventClipPriority Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum ETimelineEventClipPriority Fields Invalid = 0 None = 1 Standard = 2 Featured = 3"
  },
  "api/MarymoorStudios.Core.Steamworks.ETimelineGameMode.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ETimelineGameMode.html",
    "title": "Enum ETimelineGameMode",
    "summary": "Enum ETimelineGameMode Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum ETimelineGameMode Fields Invalid = 0 Playing = 1 Staging = 2 Menus = 3 LoadingScreen = 4 Max = 5"
  },
  "api/MarymoorStudios.Core.Steamworks.EUGCContentDescriptorID.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.EUGCContentDescriptorID.html",
    "title": "Enum EUGCContentDescriptorID",
    "summary": "Enum EUGCContentDescriptorID Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum EUGCContentDescriptorID Fields NudityOrSexualContent = 1 FrequentViolenceOrGore = 2 AdultOnlySexualContent = 3 GratuitousSexualContent = 4 AnyMatureContent = 5"
  },
  "api/MarymoorStudios.Core.Steamworks.EUGCMatchingUGCType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.EUGCMatchingUGCType.html",
    "title": "Enum EUGCMatchingUGCType",
    "summary": "Enum EUGCMatchingUGCType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum EUGCMatchingUGCType Fields Items = 0 ItemsMtx = 1 ItemsReadyToUse = 2 Collections = 3 Artwork = 4 Videos = 5 Screenshots = 6 AllGuides = 7 WebGuides = 8 IntegratedGuides = 9 UsableInGame = 10 ControllerBindings = 11 GameManagedItems = 12 All = -1"
  },
  "api/MarymoorStudios.Core.Steamworks.EUGCQuery.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.EUGCQuery.html",
    "title": "Enum EUGCQuery",
    "summary": "Enum EUGCQuery Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum EUGCQuery Fields RankedByVote = 0 RankedByPublicationDate = 1 AcceptedForGameRankedByAcceptanceDate = 2 RankedByTrend = 3 FavoritedByFriendsRankedByPublicationDate = 4 CreatedByFriendsRankedByPublicationDate = 5 RankedByNumTimesReported = 6 CreatedByFollowedUsersRankedByPublicationDate = 7 NotYetRated = 8 RankedByTotalVotesAsc = 9 RankedByVotesUp = 10 RankedByTextSearch = 11 RankedByTotalUniqueSubscriptions = 12 RankedByPlaytimeTrend = 13 RankedByTotalPlaytime = 14 RankedByAveragePlaytimeTrend = 15 RankedByLifetimeAveragePlaytime = 16 RankedByPlaytimeSessionsTrend = 17 RankedByLifetimePlaytimeSessions = 18 RankedByLastUpdatedDate = 19"
  },
  "api/MarymoorStudios.Core.Steamworks.EUGCReadAction.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.EUGCReadAction.html",
    "title": "Enum EUGCReadAction",
    "summary": "Enum EUGCReadAction Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum EUGCReadAction Fields ontinueReadingUntilFinished = 0 ontinueReading = 1 lose = 2"
  },
  "api/MarymoorStudios.Core.Steamworks.EUniverse.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.EUniverse.html",
    "title": "Enum EUniverse",
    "summary": "Enum EUniverse Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum EUniverse Fields Invalid = 0 Public = 1 Beta = 2 Internal = 3 Dev = 4 Max = 5"
  },
  "api/MarymoorStudios.Core.Steamworks.EUserHasLicenseForAppResult.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.EUserHasLicenseForAppResult.html",
    "title": "Enum EUserHasLicenseForAppResult",
    "summary": "Enum EUserHasLicenseForAppResult Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum EUserHasLicenseForAppResult Fields HasLicense = 0 DoesNotHaveLicense = 1 NoAuth = 2"
  },
  "api/MarymoorStudios.Core.Steamworks.EUserUGCList.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.EUserUGCList.html",
    "title": "Enum EUserUGCList",
    "summary": "Enum EUserUGCList Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum EUserUGCList Fields Published = 0 VotedOn = 1 VotedUp = 2 VotedDown = 3 WillVoteLater = 4 Favorited = 5 Subscribed = 6 UsedOrPlayed = 7 Followed = 8"
  },
  "api/MarymoorStudios.Core.Steamworks.EUserUGCListSortOrder.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.EUserUGCListSortOrder.html",
    "title": "Enum EUserUGCListSortOrder",
    "summary": "Enum EUserUGCListSortOrder Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum EUserUGCListSortOrder Fields CreationOrderDesc = 0 CreationOrderAsc = 1 TitleAsc = 2 LastUpdatedDesc = 3 SubscriptionDateDesc = 4 VoteScoreDesc = 5 ForModeration = 6"
  },
  "api/MarymoorStudios.Core.Steamworks.EVRScreenshotType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.EVRScreenshotType.html",
    "title": "Enum EVRScreenshotType",
    "summary": "Enum EVRScreenshotType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum EVRScreenshotType Fields None = 0 Mono = 1 Stereo = 2 MonoCubemap = 3 MonoPanorama = 4 StereoPanorama = 5"
  },
  "api/MarymoorStudios.Core.Steamworks.EVoiceResult.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.EVoiceResult.html",
    "title": "Enum EVoiceResult",
    "summary": "Enum EVoiceResult Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum EVoiceResult Fields OK = 0 NotInitialized = 1 NotRecording = 2 NoData = 3 BufferTooSmall = 4 DataCorrupted = 5 Restricted = 6 UnsupportedCodec = 7 ReceiverOutOfDate = 8 ReceiverDidNotAnswer = 9"
  },
  "api/MarymoorStudios.Core.Steamworks.EWorkshopEnumerationType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.EWorkshopEnumerationType.html",
    "title": "Enum EWorkshopEnumerationType",
    "summary": "Enum EWorkshopEnumerationType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum EWorkshopEnumerationType Fields RankedByVote = 0 Recent = 1 Trending = 2 FavoritesOfFriends = 3 VotedByFriends = 4 ContentByFriends = 5 RecentFromFollowedUsers = 6"
  },
  "api/MarymoorStudios.Core.Steamworks.EWorkshopFileAction.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.EWorkshopFileAction.html",
    "title": "Enum EWorkshopFileAction",
    "summary": "Enum EWorkshopFileAction Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum EWorkshopFileAction Fields Played = 0 Completed = 1"
  },
  "api/MarymoorStudios.Core.Steamworks.EWorkshopFileType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.EWorkshopFileType.html",
    "title": "Enum EWorkshopFileType",
    "summary": "Enum EWorkshopFileType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum EWorkshopFileType Fields First = 0 Community = 0 Microtransaction = 1 Collection = 2 Art = 3 Video = 4 Screenshot = 5 Game = 6 Software = 7 Concept = 8 WebGuide = 9 IntegratedGuide = 10 Merch = 11 ControllerBinding = 12 SteamworksAccessInvite = 13 SteamVideo = 14 GameManagedItem = 15 Clip = 16 Max = 17"
  },
  "api/MarymoorStudios.Core.Steamworks.EWorkshopVideoProvider.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.EWorkshopVideoProvider.html",
    "title": "Enum EWorkshopVideoProvider",
    "summary": "Enum EWorkshopVideoProvider Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum EWorkshopVideoProvider Fields None = 0 Youtube = 1"
  },
  "api/MarymoorStudios.Core.Steamworks.EWorkshopVote.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.EWorkshopVote.html",
    "title": "Enum EWorkshopVote",
    "summary": "Enum EWorkshopVote Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum EWorkshopVote Fields Unvoted = 0 For = 1 Against = 2 Later = 3"
  },
  "api/MarymoorStudios.Core.Steamworks.EXboxOrigin.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.EXboxOrigin.html",
    "title": "Enum EXboxOrigin",
    "summary": "Enum EXboxOrigin Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum EXboxOrigin Fields A = 0 B = 1 X = 2 Y = 3 LeftBumper = 4 RightBumper = 5 Menu = 6 View = 7 LeftTriggerPull = 8 LeftTriggerClick = 9 RightTriggerPull = 10 RightTriggerClick = 11 LeftStickMove = 12 LeftStickClick = 13 LeftStickDPadNorth = 14 LeftStickDPadSouth = 15 LeftStickDPadWest = 16 LeftStickDPadEast = 17 RightStickMove = 18 RightStickClick = 19 RightStickDPadNorth = 20 RightStickDPadSouth = 21 RightStickDPadWest = 22 RightStickDPadEast = 23 DPadNorth = 24 DPadSouth = 25 DPadWest = 26 DPadEast = 27 Count = 28"
  },
  "api/MarymoorStudios.Core.Steamworks.EncryptedAppTicketResponse.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.EncryptedAppTicketResponse.html",
    "title": "Struct EncryptedAppTicketResponse",
    "summary": "Struct EncryptedAppTicketResponse Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct EncryptedAppTicketResponse : ICallResult Implements ICallResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 154 Field Value int Result public EResult Result Field Value EResult"
  },
  "api/MarymoorStudios.Core.Steamworks.EndGameResultCallback.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.EndGameResultCallback.html",
    "title": "Struct EndGameResultCallback",
    "summary": "Struct EndGameResultCallback Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct EndGameResultCallback : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 5215 Field Value int Result public EResult Result Field Value EResult UniqueGameID public ulong UniqueGameID Field Value ulong"
  },
  "api/MarymoorStudios.Core.Steamworks.EquippedProfileItems.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.EquippedProfileItems.html",
    "title": "Struct EquippedProfileItems",
    "summary": "Struct EquippedProfileItems Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct EquippedProfileItems : ICallResult Implements ICallResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 351 Field Value int Result public EResult Result Field Value EResult SteamID public CSteamID SteamID Field Value CSteamID Properties FromCache public bool FromCache { get; set; } Property Value bool HasAnimatedAvatar public bool HasAnimatedAvatar { get; set; } Property Value bool HasAvatarFrame public bool HasAvatarFrame { get; set; } Property Value bool HasMiniProfileBackground public bool HasMiniProfileBackground { get; set; } Property Value bool HasProfileBackground public bool HasProfileBackground { get; set; } Property Value bool HasProfileModifier public bool HasProfileModifier { get; set; } Property Value bool"
  },
  "api/MarymoorStudios.Core.Steamworks.EquippedProfileItemsChanged.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.EquippedProfileItemsChanged.html",
    "title": "Struct EquippedProfileItemsChanged",
    "summary": "Struct EquippedProfileItemsChanged Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct EquippedProfileItemsChanged : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 350 Field Value int SteamID public CSteamID SteamID Field Value CSteamID"
  },
  "api/MarymoorStudios.Core.Steamworks.FavoritesListAccountsUpdated.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.FavoritesListAccountsUpdated.html",
    "title": "Struct FavoritesListAccountsUpdated",
    "summary": "Struct FavoritesListAccountsUpdated Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct FavoritesListAccountsUpdated : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 516 Field Value int Result public EResult Result Field Value EResult"
  },
  "api/MarymoorStudios.Core.Steamworks.FavoritesListChanged.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.FavoritesListChanged.html",
    "title": "Struct FavoritesListChanged",
    "summary": "Struct FavoritesListChanged Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct FavoritesListChanged : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields AccountId public AccountID AccountId Field Value AccountID AppId public uint AppId Field Value uint CallbackId public const int CallbackId = 502 Field Value int ConnPort public uint ConnPort Field Value uint Flags public uint Flags Field Value uint IP public uint IP Field Value uint QueryPort public uint QueryPort Field Value uint Properties Add public bool Add { get; set; } Property Value bool"
  },
  "api/MarymoorStudios.Core.Steamworks.FileDetailsResult.FileSHAType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.FileDetailsResult.FileSHAType.html",
    "title": "Struct FileDetailsResult.FileSHAType",
    "summary": "Struct FileDetailsResult.FileSHAType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct FileDetailsResult.FileSHAType Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields Length public const int Length = 20 Field Value int"
  },
  "api/MarymoorStudios.Core.Steamworks.FileDetailsResult.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.FileDetailsResult.html",
    "title": "Struct FileDetailsResult",
    "summary": "Struct FileDetailsResult Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct FileDetailsResult : ICallResult Implements ICallResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 1023 Field Value int FileSHA public FileDetailsResult.FileSHAType FileSHA Field Value FileDetailsResult.FileSHAType FileSize public ulong FileSize Field Value ulong Flags public uint Flags Field Value uint Result public EResult Result Field Value EResult"
  },
  "api/MarymoorStudios.Core.Steamworks.FilterTextDictionaryChanged.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.FilterTextDictionaryChanged.html",
    "title": "Struct FilterTextDictionaryChanged",
    "summary": "Struct FilterTextDictionaryChanged Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct FilterTextDictionaryChanged : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 739 Field Value int Language public int Language Field Value int"
  },
  "api/MarymoorStudios.Core.Steamworks.FloatingGamepadTextInputDismissed.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.FloatingGamepadTextInputDismissed.html",
    "title": "Struct FloatingGamepadTextInputDismissed",
    "summary": "Struct FloatingGamepadTextInputDismissed Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct FloatingGamepadTextInputDismissed : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 738 Field Value int"
  },
  "api/MarymoorStudios.Core.Steamworks.FriendGameInfo.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.FriendGameInfo.html",
    "title": "Struct FriendGameInfo",
    "summary": "Struct FriendGameInfo Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct FriendGameInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields GameID public CGameID GameID Field Value CGameID GameIP public uint GameIP Field Value uint GamePort public ushort GamePort Field Value ushort QueryPort public ushort QueryPort Field Value ushort SteamIDLobby public CSteamID SteamIDLobby Field Value CSteamID"
  },
  "api/MarymoorStudios.Core.Steamworks.FriendRichPresenceUpdate.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.FriendRichPresenceUpdate.html",
    "title": "Struct FriendRichPresenceUpdate",
    "summary": "Struct FriendRichPresenceUpdate Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct FriendRichPresenceUpdate : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields AppId public AppId AppId Field Value AppId CallbackId public const int CallbackId = 336 Field Value int SteamIDFriend public CSteamID SteamIDFriend Field Value CSteamID"
  },
  "api/MarymoorStudios.Core.Steamworks.FriendsEnumerateFollowingList.SteamIDType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.FriendsEnumerateFollowingList.SteamIDType.html",
    "title": "Struct FriendsEnumerateFollowingList.SteamIDType",
    "summary": "Struct FriendsEnumerateFollowingList.SteamIDType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct FriendsEnumerateFollowingList.SteamIDType Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields Length public const int Length = 50 Field Value int"
  },
  "api/MarymoorStudios.Core.Steamworks.FriendsEnumerateFollowingList.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.FriendsEnumerateFollowingList.html",
    "title": "Struct FriendsEnumerateFollowingList",
    "summary": "Struct FriendsEnumerateFollowingList Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct FriendsEnumerateFollowingList : ICallResult Implements ICallResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 346 Field Value int Result public EResult Result Field Value EResult ResultsReturned public int ResultsReturned Field Value int SteamID public FriendsEnumerateFollowingList.SteamIDType SteamID Field Value FriendsEnumerateFollowingList.SteamIDType TotalResultCount public int TotalResultCount Field Value int"
  },
  "api/MarymoorStudios.Core.Steamworks.FriendsGetFollowerCount.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.FriendsGetFollowerCount.html",
    "title": "Struct FriendsGetFollowerCount",
    "summary": "Struct FriendsGetFollowerCount Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct FriendsGetFollowerCount : ICallResult Implements ICallResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 344 Field Value int Count public int Count Field Value int Result public EResult Result Field Value EResult SteamID public CSteamID SteamID Field Value CSteamID"
  },
  "api/MarymoorStudios.Core.Steamworks.FriendsGroupID.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.FriendsGroupID.html",
    "title": "Struct FriendsGroupID",
    "summary": "Struct FriendsGroupID Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public readonly struct FriendsGroupID : IEquatable<FriendsGroupID>, IComparable<FriendsGroupID> Implements IEquatable<FriendsGroupID> IComparable<FriendsGroupID> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors FriendsGroupID(short) public FriendsGroupID(short id) Parameters id short Properties Id The underlying value. public short Id { get; } Property Value short Invalid The invalid id. public static short Invalid { get; } Property Value short IsValid True if not Invalid. public bool IsValid { get; } Property Value bool Methods CompareTo(FriendsGroupID) Value-based comparison. public int CompareTo(FriendsGroupID other) Parameters other FriendsGroupID Returns int Equals(FriendsGroupID) Value-based equality. public bool Equals(FriendsGroupID other) Parameters other FriendsGroupID Returns bool Equals(object?) public override bool Equals(object? obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() public override string ToString() Returns string Operators operator ==(FriendsGroupID, FriendsGroupID) Value-based equality. public static bool operator ==(FriendsGroupID left, FriendsGroupID right) Parameters left FriendsGroupID right FriendsGroupID Returns bool operator >(FriendsGroupID, FriendsGroupID) Value-based comparison. public static bool operator >(FriendsGroupID left, FriendsGroupID right) Parameters left FriendsGroupID right FriendsGroupID Returns bool operator >=(FriendsGroupID, FriendsGroupID) Value-based comparison. public static bool operator >=(FriendsGroupID left, FriendsGroupID right) Parameters left FriendsGroupID right FriendsGroupID Returns bool operator !=(FriendsGroupID, FriendsGroupID) Value-based equality. public static bool operator !=(FriendsGroupID left, FriendsGroupID right) Parameters left FriendsGroupID right FriendsGroupID Returns bool operator <(FriendsGroupID, FriendsGroupID) Value-based comparison. public static bool operator <(FriendsGroupID left, FriendsGroupID right) Parameters left FriendsGroupID right FriendsGroupID Returns bool operator <=(FriendsGroupID, FriendsGroupID) Value-based comparison. public static bool operator <=(FriendsGroupID left, FriendsGroupID right) Parameters left FriendsGroupID right FriendsGroupID Returns bool"
  },
  "api/MarymoorStudios.Core.Steamworks.FriendsIsFollowing.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.FriendsIsFollowing.html",
    "title": "Struct FriendsIsFollowing",
    "summary": "Struct FriendsIsFollowing Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct FriendsIsFollowing : ICallResult Implements ICallResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 345 Field Value int Result public EResult Result Field Value EResult SteamID public CSteamID SteamID Field Value CSteamID Properties IsFollowing public bool IsFollowing { get; set; } Property Value bool"
  },
  "api/MarymoorStudios.Core.Steamworks.GSClientAchievementStatus.AchievementType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.GSClientAchievementStatus.AchievementType.html",
    "title": "Struct GSClientAchievementStatus.AchievementType",
    "summary": "Struct GSClientAchievementStatus.AchievementType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct GSClientAchievementStatus.AchievementType Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields Length public const int Length = 128 Field Value int Operators implicit operator string(AchievementType) public static implicit operator string(GSClientAchievementStatus.AchievementType v) Parameters v GSClientAchievementStatus.AchievementType Returns string implicit operator AchievementType(string) public static implicit operator GSClientAchievementStatus.AchievementType(string s) Parameters s string Returns GSClientAchievementStatus.AchievementType"
  },
  "api/MarymoorStudios.Core.Steamworks.GSClientAchievementStatus.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.GSClientAchievementStatus.html",
    "title": "Struct GSClientAchievementStatus",
    "summary": "Struct GSClientAchievementStatus Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct GSClientAchievementStatus : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields Achievement public GSClientAchievementStatus.AchievementType Achievement Field Value GSClientAchievementStatus.AchievementType CallbackId public const int CallbackId = 206 Field Value int SteamID public ulong SteamID Field Value ulong Properties Unlocked public bool Unlocked { get; set; } Property Value bool"
  },
  "api/MarymoorStudios.Core.Steamworks.GSClientApprove.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.GSClientApprove.html",
    "title": "Struct GSClientApprove",
    "summary": "Struct GSClientApprove Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct GSClientApprove : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 201 Field Value int OwnerSteamID public CSteamID OwnerSteamID Field Value CSteamID SteamID public CSteamID SteamID Field Value CSteamID"
  },
  "api/MarymoorStudios.Core.Steamworks.GSClientDeny.OptionalTextType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.GSClientDeny.OptionalTextType.html",
    "title": "Struct GSClientDeny.OptionalTextType",
    "summary": "Struct GSClientDeny.OptionalTextType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct GSClientDeny.OptionalTextType Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields Length public const int Length = 128 Field Value int Operators implicit operator string(OptionalTextType) public static implicit operator string(GSClientDeny.OptionalTextType v) Parameters v GSClientDeny.OptionalTextType Returns string implicit operator OptionalTextType(string) public static implicit operator GSClientDeny.OptionalTextType(string s) Parameters s string Returns GSClientDeny.OptionalTextType"
  },
  "api/MarymoorStudios.Core.Steamworks.GSClientDeny.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.GSClientDeny.html",
    "title": "Struct GSClientDeny",
    "summary": "Struct GSClientDeny Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct GSClientDeny : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 202 Field Value int DenyReason public EDenyReason DenyReason Field Value EDenyReason OptionalText public GSClientDeny.OptionalTextType OptionalText Field Value GSClientDeny.OptionalTextType SteamID public CSteamID SteamID Field Value CSteamID"
  },
  "api/MarymoorStudios.Core.Steamworks.GSClientGroupStatus.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.GSClientGroupStatus.html",
    "title": "Struct GSClientGroupStatus",
    "summary": "Struct GSClientGroupStatus Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct GSClientGroupStatus : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 208 Field Value int SteamIDGroup public CSteamID SteamIDGroup Field Value CSteamID SteamIDUser public CSteamID SteamIDUser Field Value CSteamID Properties Member public bool Member { get; set; } Property Value bool Officer public bool Officer { get; set; } Property Value bool"
  },
  "api/MarymoorStudios.Core.Steamworks.GSClientKick.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.GSClientKick.html",
    "title": "Struct GSClientKick",
    "summary": "Struct GSClientKick Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct GSClientKick : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 203 Field Value int DenyReason public EDenyReason DenyReason Field Value EDenyReason SteamID public CSteamID SteamID Field Value CSteamID"
  },
  "api/MarymoorStudios.Core.Steamworks.GSGameplayStats.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.GSGameplayStats.html",
    "title": "Struct GSGameplayStats",
    "summary": "Struct GSGameplayStats Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct GSGameplayStats : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 207 Field Value int Rank public int Rank Field Value int Result public EResult Result Field Value EResult TotalConnects public uint TotalConnects Field Value uint TotalMinutesPlayed public uint TotalMinutesPlayed Field Value uint"
  },
  "api/MarymoorStudios.Core.Steamworks.GSPolicyResponse.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.GSPolicyResponse.html",
    "title": "Struct GSPolicyResponse",
    "summary": "Struct GSPolicyResponse Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct GSPolicyResponse : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 115 Field Value int Secure public byte Secure Field Value byte"
  },
  "api/MarymoorStudios.Core.Steamworks.GSReputation.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.GSReputation.html",
    "title": "Struct GSReputation",
    "summary": "Struct GSReputation Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct GSReputation : ICallResult Implements ICallResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields BanExpires public uint BanExpires Field Value uint BannedGameID public ulong BannedGameID Field Value ulong BannedIP public uint BannedIP Field Value uint BannedPort public ushort BannedPort Field Value ushort CallbackId public const int CallbackId = 209 Field Value int ReputationScore public uint ReputationScore Field Value uint Result public EResult Result Field Value EResult Properties Banned public bool Banned { get; set; } Property Value bool"
  },
  "api/MarymoorStudios.Core.Steamworks.GSStatsReceived.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.GSStatsReceived.html",
    "title": "Struct GSStatsReceived",
    "summary": "Struct GSStatsReceived Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct GSStatsReceived : ICallResult Implements ICallResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 1800 Field Value int Result public EResult Result Field Value EResult SteamIDUser public CSteamID SteamIDUser Field Value CSteamID"
  },
  "api/MarymoorStudios.Core.Steamworks.GSStatsStored.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.GSStatsStored.html",
    "title": "Struct GSStatsStored",
    "summary": "Struct GSStatsStored Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct GSStatsStored : ICallResult Implements ICallResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 1801 Field Value int Result public EResult Result Field Value EResult SteamIDUser public CSteamID SteamIDUser Field Value CSteamID"
  },
  "api/MarymoorStudios.Core.Steamworks.GSStatsUnloaded.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.GSStatsUnloaded.html",
    "title": "Struct GSStatsUnloaded",
    "summary": "Struct GSStatsUnloaded Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct GSStatsUnloaded : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 1108 Field Value int SteamIDUser public CSteamID SteamIDUser Field Value CSteamID"
  },
  "api/MarymoorStudios.Core.Steamworks.GameConnectedChatJoin.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.GameConnectedChatJoin.html",
    "title": "Struct GameConnectedChatJoin",
    "summary": "Struct GameConnectedChatJoin Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct GameConnectedChatJoin : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 339 Field Value int SteamIDClanChat public CSteamID SteamIDClanChat Field Value CSteamID SteamIDUser public CSteamID SteamIDUser Field Value CSteamID"
  },
  "api/MarymoorStudios.Core.Steamworks.GameConnectedChatLeave.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.GameConnectedChatLeave.html",
    "title": "Struct GameConnectedChatLeave",
    "summary": "Struct GameConnectedChatLeave Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct GameConnectedChatLeave : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 340 Field Value int SteamIDClanChat public CSteamID SteamIDClanChat Field Value CSteamID SteamIDUser public CSteamID SteamIDUser Field Value CSteamID Properties Dropped public bool Dropped { get; set; } Property Value bool Kicked public bool Kicked { get; set; } Property Value bool"
  },
  "api/MarymoorStudios.Core.Steamworks.GameConnectedClanChatMsg.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.GameConnectedClanChatMsg.html",
    "title": "Struct GameConnectedClanChatMsg",
    "summary": "Struct GameConnectedClanChatMsg Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct GameConnectedClanChatMsg : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 338 Field Value int MessageID public int MessageID Field Value int SteamIDClanChat public CSteamID SteamIDClanChat Field Value CSteamID SteamIDUser public CSteamID SteamIDUser Field Value CSteamID"
  },
  "api/MarymoorStudios.Core.Steamworks.GameConnectedFriendChatMsg.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.GameConnectedFriendChatMsg.html",
    "title": "Struct GameConnectedFriendChatMsg",
    "summary": "Struct GameConnectedFriendChatMsg Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct GameConnectedFriendChatMsg : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 343 Field Value int MessageID public int MessageID Field Value int SteamIDUser public CSteamID SteamIDUser Field Value CSteamID"
  },
  "api/MarymoorStudios.Core.Steamworks.GameLobbyJoinRequested.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.GameLobbyJoinRequested.html",
    "title": "Struct GameLobbyJoinRequested",
    "summary": "Struct GameLobbyJoinRequested Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct GameLobbyJoinRequested : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 333 Field Value int SteamIDFriend public CSteamID SteamIDFriend Field Value CSteamID SteamIDLobby public CSteamID SteamIDLobby Field Value CSteamID"
  },
  "api/MarymoorStudios.Core.Steamworks.GameOverlayActivated.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.GameOverlayActivated.html",
    "title": "Struct GameOverlayActivated",
    "summary": "Struct GameOverlayActivated Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct GameOverlayActivated : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields Active public byte Active Field Value byte AppId public AppId AppId Field Value AppId CallbackId public const int CallbackId = 331 Field Value int OverlayPID public uint OverlayPID Field Value uint Properties UserInitiated public bool UserInitiated { get; set; } Property Value bool"
  },
  "api/MarymoorStudios.Core.Steamworks.GameRichPresenceJoinRequested.ConnectType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.GameRichPresenceJoinRequested.ConnectType.html",
    "title": "Struct GameRichPresenceJoinRequested.ConnectType",
    "summary": "Struct GameRichPresenceJoinRequested.ConnectType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct GameRichPresenceJoinRequested.ConnectType Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields Length public const int Length = 256 Field Value int Operators implicit operator string(ConnectType) public static implicit operator string(GameRichPresenceJoinRequested.ConnectType v) Parameters v GameRichPresenceJoinRequested.ConnectType Returns string implicit operator ConnectType(string) public static implicit operator GameRichPresenceJoinRequested.ConnectType(string s) Parameters s string Returns GameRichPresenceJoinRequested.ConnectType"
  },
  "api/MarymoorStudios.Core.Steamworks.GameRichPresenceJoinRequested.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.GameRichPresenceJoinRequested.html",
    "title": "Struct GameRichPresenceJoinRequested",
    "summary": "Struct GameRichPresenceJoinRequested Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct GameRichPresenceJoinRequested : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 337 Field Value int Connect public GameRichPresenceJoinRequested.ConnectType Connect Field Value GameRichPresenceJoinRequested.ConnectType SteamIDFriend public CSteamID SteamIDFriend Field Value CSteamID"
  },
  "api/MarymoorStudios.Core.Steamworks.GameServerChangeRequested.PasswordType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.GameServerChangeRequested.PasswordType.html",
    "title": "Struct GameServerChangeRequested.PasswordType",
    "summary": "Struct GameServerChangeRequested.PasswordType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct GameServerChangeRequested.PasswordType Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields Length public const int Length = 64 Field Value int Operators implicit operator string(PasswordType) public static implicit operator string(GameServerChangeRequested.PasswordType v) Parameters v GameServerChangeRequested.PasswordType Returns string implicit operator PasswordType(string) public static implicit operator GameServerChangeRequested.PasswordType(string s) Parameters s string Returns GameServerChangeRequested.PasswordType"
  },
  "api/MarymoorStudios.Core.Steamworks.GameServerChangeRequested.ServerType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.GameServerChangeRequested.ServerType.html",
    "title": "Struct GameServerChangeRequested.ServerType",
    "summary": "Struct GameServerChangeRequested.ServerType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct GameServerChangeRequested.ServerType Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields Length public const int Length = 64 Field Value int Operators implicit operator string(ServerType) public static implicit operator string(GameServerChangeRequested.ServerType v) Parameters v GameServerChangeRequested.ServerType Returns string implicit operator ServerType(string) public static implicit operator GameServerChangeRequested.ServerType(string s) Parameters s string Returns GameServerChangeRequested.ServerType"
  },
  "api/MarymoorStudios.Core.Steamworks.GameServerChangeRequested.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.GameServerChangeRequested.html",
    "title": "Struct GameServerChangeRequested",
    "summary": "Struct GameServerChangeRequested Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct GameServerChangeRequested : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 332 Field Value int Password public GameServerChangeRequested.PasswordType Password Field Value GameServerChangeRequested.PasswordType Server public GameServerChangeRequested.ServerType Server Field Value GameServerChangeRequested.ServerType"
  },
  "api/MarymoorStudios.Core.Steamworks.GameWebCallback.URLType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.GameWebCallback.URLType.html",
    "title": "Struct GameWebCallback.URLType",
    "summary": "Struct GameWebCallback.URLType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct GameWebCallback.URLType Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields Length public const int Length = 256 Field Value int Operators implicit operator string(URLType) public static implicit operator string(GameWebCallback.URLType v) Parameters v GameWebCallback.URLType Returns string implicit operator URLType(string) public static implicit operator GameWebCallback.URLType(string s) Parameters s string Returns GameWebCallback.URLType"
  },
  "api/MarymoorStudios.Core.Steamworks.GameWebCallback.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.GameWebCallback.html",
    "title": "Struct GameWebCallback",
    "summary": "Struct GameWebCallback Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct GameWebCallback : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 164 Field Value int URL public GameWebCallback.URLType URL Field Value GameWebCallback.URLType"
  },
  "api/MarymoorStudios.Core.Steamworks.GamepadTextInputDismissed.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.GamepadTextInputDismissed.html",
    "title": "Struct GamepadTextInputDismissed",
    "summary": "Struct GamepadTextInputDismissed Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct GamepadTextInputDismissed : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields AppId public AppId AppId Field Value AppId CallbackId public const int CallbackId = 714 Field Value int SubmittedText public uint SubmittedText Field Value uint Properties Submitted public bool Submitted { get; set; } Property Value bool"
  },
  "api/MarymoorStudios.Core.Steamworks.GetAppDependenciesResult.AppIDsType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.GetAppDependenciesResult.AppIDsType.html",
    "title": "Struct GetAppDependenciesResult.AppIDsType",
    "summary": "Struct GetAppDependenciesResult.AppIDsType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct GetAppDependenciesResult.AppIDsType Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields Length public const int Length = 32 Field Value int"
  },
  "api/MarymoorStudios.Core.Steamworks.GetAppDependenciesResult.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.GetAppDependenciesResult.html",
    "title": "Struct GetAppDependenciesResult",
    "summary": "Struct GetAppDependenciesResult Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct GetAppDependenciesResult : ICallResult Implements ICallResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields AppIDs public GetAppDependenciesResult.AppIDsType AppIDs Field Value GetAppDependenciesResult.AppIDsType CallbackId public const int CallbackId = 3416 Field Value int NumAppDependencies public uint NumAppDependencies Field Value uint PublishedFileId public PublishedFileId PublishedFileId Field Value PublishedFileId Result public EResult Result Field Value EResult TotalNumAppDependencies public uint TotalNumAppDependencies Field Value uint"
  },
  "api/MarymoorStudios.Core.Steamworks.GetAuthSessionTicketResponse.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.GetAuthSessionTicketResponse.html",
    "title": "Struct GetAuthSessionTicketResponse",
    "summary": "Struct GetAuthSessionTicketResponse Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct GetAuthSessionTicketResponse : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields AuthTicket public HAuthTicket AuthTicket Field Value HAuthTicket CallbackId public const int CallbackId = 163 Field Value int Result public EResult Result Field Value EResult"
  },
  "api/MarymoorStudios.Core.Steamworks.GetOPFSettingsResult.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.GetOPFSettingsResult.html",
    "title": "Struct GetOPFSettingsResult",
    "summary": "Struct GetOPFSettingsResult Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct GetOPFSettingsResult : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 4624 Field Value int Result public EResult Result Field Value EResult VideoAppID public AppId VideoAppID Field Value AppId"
  },
  "api/MarymoorStudios.Core.Steamworks.GetTicketForWebApiResponse.TicketType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.GetTicketForWebApiResponse.TicketType.html",
    "title": "Struct GetTicketForWebApiResponse.TicketType",
    "summary": "Struct GetTicketForWebApiResponse.TicketType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct GetTicketForWebApiResponse.TicketType Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields Length public const int Length = 2560 Field Value int"
  },
  "api/MarymoorStudios.Core.Steamworks.GetTicketForWebApiResponse.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.GetTicketForWebApiResponse.html",
    "title": "Struct GetTicketForWebApiResponse",
    "summary": "Struct GetTicketForWebApiResponse Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct GetTicketForWebApiResponse : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields AuthTicket public HAuthTicket AuthTicket Field Value HAuthTicket CallbackId public const int CallbackId = 168 Field Value int Result public EResult Result Field Value EResult Ticket public GetTicketForWebApiResponse.TicketType Ticket Field Value GetTicketForWebApiResponse.TicketType TicketCount public int TicketCount Field Value int"
  },
  "api/MarymoorStudios.Core.Steamworks.GetUserItemVoteResult.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.GetUserItemVoteResult.html",
    "title": "Struct GetUserItemVoteResult",
    "summary": "Struct GetUserItemVoteResult Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct GetUserItemVoteResult : ICallResult Implements ICallResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 3409 Field Value int PublishedFileId public PublishedFileId PublishedFileId Field Value PublishedFileId Result public EResult Result Field Value EResult Properties VoteSkipped public bool VoteSkipped { get; set; } Property Value bool VotedDown public bool VotedDown { get; set; } Property Value bool VotedUp public bool VotedUp { get; set; } Property Value bool"
  },
  "api/MarymoorStudios.Core.Steamworks.GetVideoURLResult.URLType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.GetVideoURLResult.URLType.html",
    "title": "Struct GetVideoURLResult.URLType",
    "summary": "Struct GetVideoURLResult.URLType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct GetVideoURLResult.URLType Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields Length public const int Length = 256 Field Value int Operators implicit operator string(URLType) public static implicit operator string(GetVideoURLResult.URLType v) Parameters v GetVideoURLResult.URLType Returns string implicit operator URLType(string) public static implicit operator GetVideoURLResult.URLType(string s) Parameters s string Returns GetVideoURLResult.URLType"
  },
  "api/MarymoorStudios.Core.Steamworks.GetVideoURLResult.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.GetVideoURLResult.html",
    "title": "Struct GetVideoURLResult",
    "summary": "Struct GetVideoURLResult Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct GetVideoURLResult : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 4611 Field Value int Result public EResult Result Field Value EResult URL public GetVideoURLResult.URLType URL Field Value GetVideoURLResult.URLType VideoAppID public AppId VideoAppID Field Value AppId"
  },
  "api/MarymoorStudios.Core.Steamworks.GlobalAchievementPercentagesReady.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.GlobalAchievementPercentagesReady.html",
    "title": "Struct GlobalAchievementPercentagesReady",
    "summary": "Struct GlobalAchievementPercentagesReady Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct GlobalAchievementPercentagesReady : ICallResult Implements ICallResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 1110 Field Value int GameID public ulong GameID Field Value ulong Result public EResult Result Field Value EResult"
  },
  "api/MarymoorStudios.Core.Steamworks.GlobalStatsReceived.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.GlobalStatsReceived.html",
    "title": "Struct GlobalStatsReceived",
    "summary": "Struct GlobalStatsReceived Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct GlobalStatsReceived : ICallResult Implements ICallResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 1112 Field Value int GameID public ulong GameID Field Value ulong Result public EResult Result Field Value EResult"
  },
  "api/MarymoorStudios.Core.Steamworks.HAuthTicket.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.HAuthTicket.html",
    "title": "Struct HAuthTicket",
    "summary": "Struct HAuthTicket Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public readonly struct HAuthTicket : IEquatable<HAuthTicket>, IComparable<HAuthTicket> Implements IEquatable<HAuthTicket> IComparable<HAuthTicket> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors HAuthTicket(uint) public HAuthTicket(uint id) Parameters id uint Properties Id The underlying value. public uint Id { get; } Property Value uint Invalid The invalid id. public static uint Invalid { get; } Property Value uint IsValid True if not Invalid. public bool IsValid { get; } Property Value bool Methods CompareTo(HAuthTicket) Value-based comparison. public int CompareTo(HAuthTicket other) Parameters other HAuthTicket Returns int Equals(HAuthTicket) Value-based equality. public bool Equals(HAuthTicket other) Parameters other HAuthTicket Returns bool Equals(object?) public override bool Equals(object? obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() public override string ToString() Returns string Operators operator ==(HAuthTicket, HAuthTicket) Value-based equality. public static bool operator ==(HAuthTicket left, HAuthTicket right) Parameters left HAuthTicket right HAuthTicket Returns bool operator >(HAuthTicket, HAuthTicket) Value-based comparison. public static bool operator >(HAuthTicket left, HAuthTicket right) Parameters left HAuthTicket right HAuthTicket Returns bool operator >=(HAuthTicket, HAuthTicket) Value-based comparison. public static bool operator >=(HAuthTicket left, HAuthTicket right) Parameters left HAuthTicket right HAuthTicket Returns bool operator !=(HAuthTicket, HAuthTicket) Value-based equality. public static bool operator !=(HAuthTicket left, HAuthTicket right) Parameters left HAuthTicket right HAuthTicket Returns bool operator <(HAuthTicket, HAuthTicket) Value-based comparison. public static bool operator <(HAuthTicket left, HAuthTicket right) Parameters left HAuthTicket right HAuthTicket Returns bool operator <=(HAuthTicket, HAuthTicket) Value-based comparison. public static bool operator <=(HAuthTicket left, HAuthTicket right) Parameters left HAuthTicket right HAuthTicket Returns bool"
  },
  "api/MarymoorStudios.Core.Steamworks.HHTMLBrowser.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.HHTMLBrowser.html",
    "title": "Struct HHTMLBrowser",
    "summary": "Struct HHTMLBrowser Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public readonly struct HHTMLBrowser : IEquatable<HHTMLBrowser>, IComparable<HHTMLBrowser> Implements IEquatable<HHTMLBrowser> IComparable<HHTMLBrowser> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors HHTMLBrowser(uint) public HHTMLBrowser(uint id) Parameters id uint Properties Id The underlying value. public uint Id { get; } Property Value uint Invalid The invalid id. public static uint Invalid { get; } Property Value uint IsValid True if not Invalid. public bool IsValid { get; } Property Value bool Methods CompareTo(HHTMLBrowser) Value-based comparison. public int CompareTo(HHTMLBrowser other) Parameters other HHTMLBrowser Returns int Equals(HHTMLBrowser) Value-based equality. public bool Equals(HHTMLBrowser other) Parameters other HHTMLBrowser Returns bool Equals(object?) public override bool Equals(object? obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() public override string ToString() Returns string Operators operator ==(HHTMLBrowser, HHTMLBrowser) Value-based equality. public static bool operator ==(HHTMLBrowser left, HHTMLBrowser right) Parameters left HHTMLBrowser right HHTMLBrowser Returns bool operator >(HHTMLBrowser, HHTMLBrowser) Value-based comparison. public static bool operator >(HHTMLBrowser left, HHTMLBrowser right) Parameters left HHTMLBrowser right HHTMLBrowser Returns bool operator >=(HHTMLBrowser, HHTMLBrowser) Value-based comparison. public static bool operator >=(HHTMLBrowser left, HHTMLBrowser right) Parameters left HHTMLBrowser right HHTMLBrowser Returns bool operator !=(HHTMLBrowser, HHTMLBrowser) Value-based equality. public static bool operator !=(HHTMLBrowser left, HHTMLBrowser right) Parameters left HHTMLBrowser right HHTMLBrowser Returns bool operator <(HHTMLBrowser, HHTMLBrowser) Value-based comparison. public static bool operator <(HHTMLBrowser left, HHTMLBrowser right) Parameters left HHTMLBrowser right HHTMLBrowser Returns bool operator <=(HHTMLBrowser, HHTMLBrowser) Value-based comparison. public static bool operator <=(HHTMLBrowser left, HHTMLBrowser right) Parameters left HHTMLBrowser right HHTMLBrowser Returns bool"
  },
  "api/MarymoorStudios.Core.Steamworks.HServerListRequest.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.HServerListRequest.html",
    "title": "Struct HServerListRequest",
    "summary": "Struct HServerListRequest Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public readonly struct HServerListRequest : IEquatable<HServerListRequest>, IComparable<HServerListRequest> Implements IEquatable<HServerListRequest> IComparable<HServerListRequest> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors HServerListRequest(nint) public HServerListRequest(nint id) Parameters id nint Properties Id The underlying value. public nint Id { get; } Property Value nint Invalid The invalid id. public static nint Invalid { get; } Property Value nint IsValid True if not Invalid. public bool IsValid { get; } Property Value bool Methods CompareTo(HServerListRequest) Value-based comparison. public int CompareTo(HServerListRequest other) Parameters other HServerListRequest Returns int Equals(HServerListRequest) Value-based equality. public bool Equals(HServerListRequest other) Parameters other HServerListRequest Returns bool Equals(object?) public override bool Equals(object? obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() public override string ToString() Returns string Operators operator ==(HServerListRequest, HServerListRequest) Value-based equality. public static bool operator ==(HServerListRequest left, HServerListRequest right) Parameters left HServerListRequest right HServerListRequest Returns bool operator >(HServerListRequest, HServerListRequest) Value-based comparison. public static bool operator >(HServerListRequest left, HServerListRequest right) Parameters left HServerListRequest right HServerListRequest Returns bool operator >=(HServerListRequest, HServerListRequest) Value-based comparison. public static bool operator >=(HServerListRequest left, HServerListRequest right) Parameters left HServerListRequest right HServerListRequest Returns bool operator !=(HServerListRequest, HServerListRequest) Value-based equality. public static bool operator !=(HServerListRequest left, HServerListRequest right) Parameters left HServerListRequest right HServerListRequest Returns bool operator <(HServerListRequest, HServerListRequest) Value-based comparison. public static bool operator <(HServerListRequest left, HServerListRequest right) Parameters left HServerListRequest right HServerListRequest Returns bool operator <=(HServerListRequest, HServerListRequest) Value-based comparison. public static bool operator <=(HServerListRequest left, HServerListRequest right) Parameters left HServerListRequest right HServerListRequest Returns bool"
  },
  "api/MarymoorStudios.Core.Steamworks.HServerQuery.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.HServerQuery.html",
    "title": "Struct HServerQuery",
    "summary": "Struct HServerQuery Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public readonly struct HServerQuery : IEquatable<HServerQuery>, IComparable<HServerQuery> Implements IEquatable<HServerQuery> IComparable<HServerQuery> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors HServerQuery(int) public HServerQuery(int id) Parameters id int Properties Id The underlying value. public int Id { get; } Property Value int Invalid The invalid id. public static int Invalid { get; } Property Value int IsValid True if not Invalid. public bool IsValid { get; } Property Value bool Methods CompareTo(HServerQuery) Value-based comparison. public int CompareTo(HServerQuery other) Parameters other HServerQuery Returns int Equals(HServerQuery) Value-based equality. public bool Equals(HServerQuery other) Parameters other HServerQuery Returns bool Equals(object?) public override bool Equals(object? obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() public override string ToString() Returns string Operators operator ==(HServerQuery, HServerQuery) Value-based equality. public static bool operator ==(HServerQuery left, HServerQuery right) Parameters left HServerQuery right HServerQuery Returns bool operator >(HServerQuery, HServerQuery) Value-based comparison. public static bool operator >(HServerQuery left, HServerQuery right) Parameters left HServerQuery right HServerQuery Returns bool operator >=(HServerQuery, HServerQuery) Value-based comparison. public static bool operator >=(HServerQuery left, HServerQuery right) Parameters left HServerQuery right HServerQuery Returns bool operator !=(HServerQuery, HServerQuery) Value-based equality. public static bool operator !=(HServerQuery left, HServerQuery right) Parameters left HServerQuery right HServerQuery Returns bool operator <(HServerQuery, HServerQuery) Value-based comparison. public static bool operator <(HServerQuery left, HServerQuery right) Parameters left HServerQuery right HServerQuery Returns bool operator <=(HServerQuery, HServerQuery) Value-based comparison. public static bool operator <=(HServerQuery left, HServerQuery right) Parameters left HServerQuery right HServerQuery Returns bool"
  },
  "api/MarymoorStudios.Core.Steamworks.HSteamListenSocket.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.HSteamListenSocket.html",
    "title": "Struct HSteamListenSocket",
    "summary": "Struct HSteamListenSocket Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public readonly struct HSteamListenSocket : IEquatable<HSteamListenSocket>, IComparable<HSteamListenSocket> Implements IEquatable<HSteamListenSocket> IComparable<HSteamListenSocket> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors HSteamListenSocket(uint) public HSteamListenSocket(uint id) Parameters id uint Properties Id The underlying value. public uint Id { get; } Property Value uint Invalid The invalid id. public static uint Invalid { get; } Property Value uint IsValid True if not Invalid. public bool IsValid { get; } Property Value bool Methods CompareTo(HSteamListenSocket) Value-based comparison. public int CompareTo(HSteamListenSocket other) Parameters other HSteamListenSocket Returns int Equals(HSteamListenSocket) Value-based equality. public bool Equals(HSteamListenSocket other) Parameters other HSteamListenSocket Returns bool Equals(object?) public override bool Equals(object? obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() public override string ToString() Returns string Operators operator ==(HSteamListenSocket, HSteamListenSocket) Value-based equality. public static bool operator ==(HSteamListenSocket left, HSteamListenSocket right) Parameters left HSteamListenSocket right HSteamListenSocket Returns bool operator >(HSteamListenSocket, HSteamListenSocket) Value-based comparison. public static bool operator >(HSteamListenSocket left, HSteamListenSocket right) Parameters left HSteamListenSocket right HSteamListenSocket Returns bool operator >=(HSteamListenSocket, HSteamListenSocket) Value-based comparison. public static bool operator >=(HSteamListenSocket left, HSteamListenSocket right) Parameters left HSteamListenSocket right HSteamListenSocket Returns bool operator !=(HSteamListenSocket, HSteamListenSocket) Value-based equality. public static bool operator !=(HSteamListenSocket left, HSteamListenSocket right) Parameters left HSteamListenSocket right HSteamListenSocket Returns bool operator <(HSteamListenSocket, HSteamListenSocket) Value-based comparison. public static bool operator <(HSteamListenSocket left, HSteamListenSocket right) Parameters left HSteamListenSocket right HSteamListenSocket Returns bool operator <=(HSteamListenSocket, HSteamListenSocket) Value-based comparison. public static bool operator <=(HSteamListenSocket left, HSteamListenSocket right) Parameters left HSteamListenSocket right HSteamListenSocket Returns bool"
  },
  "api/MarymoorStudios.Core.Steamworks.HSteamNetConnection.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.HSteamNetConnection.html",
    "title": "Struct HSteamNetConnection",
    "summary": "Struct HSteamNetConnection Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public readonly struct HSteamNetConnection : IEquatable<HSteamNetConnection>, IComparable<HSteamNetConnection> Implements IEquatable<HSteamNetConnection> IComparable<HSteamNetConnection> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors HSteamNetConnection(uint) public HSteamNetConnection(uint id) Parameters id uint Properties Id The underlying value. public uint Id { get; } Property Value uint Invalid The invalid id. public static uint Invalid { get; } Property Value uint IsValid True if not Invalid. public bool IsValid { get; } Property Value bool Methods CompareTo(HSteamNetConnection) Value-based comparison. public int CompareTo(HSteamNetConnection other) Parameters other HSteamNetConnection Returns int Equals(HSteamNetConnection) Value-based equality. public bool Equals(HSteamNetConnection other) Parameters other HSteamNetConnection Returns bool Equals(object?) public override bool Equals(object? obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() public override string ToString() Returns string Operators operator ==(HSteamNetConnection, HSteamNetConnection) Value-based equality. public static bool operator ==(HSteamNetConnection left, HSteamNetConnection right) Parameters left HSteamNetConnection right HSteamNetConnection Returns bool operator >(HSteamNetConnection, HSteamNetConnection) Value-based comparison. public static bool operator >(HSteamNetConnection left, HSteamNetConnection right) Parameters left HSteamNetConnection right HSteamNetConnection Returns bool operator >=(HSteamNetConnection, HSteamNetConnection) Value-based comparison. public static bool operator >=(HSteamNetConnection left, HSteamNetConnection right) Parameters left HSteamNetConnection right HSteamNetConnection Returns bool operator !=(HSteamNetConnection, HSteamNetConnection) Value-based equality. public static bool operator !=(HSteamNetConnection left, HSteamNetConnection right) Parameters left HSteamNetConnection right HSteamNetConnection Returns bool operator <(HSteamNetConnection, HSteamNetConnection) Value-based comparison. public static bool operator <(HSteamNetConnection left, HSteamNetConnection right) Parameters left HSteamNetConnection right HSteamNetConnection Returns bool operator <=(HSteamNetConnection, HSteamNetConnection) Value-based comparison. public static bool operator <=(HSteamNetConnection left, HSteamNetConnection right) Parameters left HSteamNetConnection right HSteamNetConnection Returns bool"
  },
  "api/MarymoorStudios.Core.Steamworks.HSteamNetPollGroup.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.HSteamNetPollGroup.html",
    "title": "Struct HSteamNetPollGroup",
    "summary": "Struct HSteamNetPollGroup Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public readonly struct HSteamNetPollGroup : IEquatable<HSteamNetPollGroup>, IComparable<HSteamNetPollGroup> Implements IEquatable<HSteamNetPollGroup> IComparable<HSteamNetPollGroup> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors HSteamNetPollGroup(uint) public HSteamNetPollGroup(uint id) Parameters id uint Properties Id The underlying value. public uint Id { get; } Property Value uint Invalid The invalid id. public static uint Invalid { get; } Property Value uint IsValid True if not Invalid. public bool IsValid { get; } Property Value bool Methods CompareTo(HSteamNetPollGroup) Value-based comparison. public int CompareTo(HSteamNetPollGroup other) Parameters other HSteamNetPollGroup Returns int Equals(HSteamNetPollGroup) Value-based equality. public bool Equals(HSteamNetPollGroup other) Parameters other HSteamNetPollGroup Returns bool Equals(object?) public override bool Equals(object? obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() public override string ToString() Returns string Operators operator ==(HSteamNetPollGroup, HSteamNetPollGroup) Value-based equality. public static bool operator ==(HSteamNetPollGroup left, HSteamNetPollGroup right) Parameters left HSteamNetPollGroup right HSteamNetPollGroup Returns bool operator >(HSteamNetPollGroup, HSteamNetPollGroup) Value-based comparison. public static bool operator >(HSteamNetPollGroup left, HSteamNetPollGroup right) Parameters left HSteamNetPollGroup right HSteamNetPollGroup Returns bool operator >=(HSteamNetPollGroup, HSteamNetPollGroup) Value-based comparison. public static bool operator >=(HSteamNetPollGroup left, HSteamNetPollGroup right) Parameters left HSteamNetPollGroup right HSteamNetPollGroup Returns bool operator !=(HSteamNetPollGroup, HSteamNetPollGroup) Value-based equality. public static bool operator !=(HSteamNetPollGroup left, HSteamNetPollGroup right) Parameters left HSteamNetPollGroup right HSteamNetPollGroup Returns bool operator <(HSteamNetPollGroup, HSteamNetPollGroup) Value-based comparison. public static bool operator <(HSteamNetPollGroup left, HSteamNetPollGroup right) Parameters left HSteamNetPollGroup right HSteamNetPollGroup Returns bool operator <=(HSteamNetPollGroup, HSteamNetPollGroup) Value-based comparison. public static bool operator <=(HSteamNetPollGroup left, HSteamNetPollGroup right) Parameters left HSteamNetPollGroup right HSteamNetPollGroup Returns bool"
  },
  "api/MarymoorStudios.Core.Steamworks.HSteamPipe.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.HSteamPipe.html",
    "title": "Struct HSteamPipe",
    "summary": "Struct HSteamPipe Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public readonly struct HSteamPipe : IEquatable<HSteamPipe>, IComparable<HSteamPipe> Implements IEquatable<HSteamPipe> IComparable<HSteamPipe> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors HSteamPipe(int) public HSteamPipe(int handle) Parameters handle int Properties Handle The underlying value. public int Handle { get; } Property Value int Invalid The invalid id. public static HSteamPipe Invalid { get; } Property Value HSteamPipe IsValid True if not Invalid. public bool IsValid { get; } Property Value bool Methods CompareTo(HSteamPipe) Value-based comparison. public int CompareTo(HSteamPipe other) Parameters other HSteamPipe Returns int Equals(HSteamPipe) Value-based equality. public bool Equals(HSteamPipe other) Parameters other HSteamPipe Returns bool Equals(object?) public override bool Equals(object? obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() public override string ToString() Returns string Operators operator ==(HSteamPipe, HSteamPipe) Value-based equality. public static bool operator ==(HSteamPipe left, HSteamPipe right) Parameters left HSteamPipe right HSteamPipe Returns bool operator >(HSteamPipe, HSteamPipe) Value-based comparison. public static bool operator >(HSteamPipe left, HSteamPipe right) Parameters left HSteamPipe right HSteamPipe Returns bool operator >=(HSteamPipe, HSteamPipe) Value-based comparison. public static bool operator >=(HSteamPipe left, HSteamPipe right) Parameters left HSteamPipe right HSteamPipe Returns bool operator !=(HSteamPipe, HSteamPipe) Value-based equality. public static bool operator !=(HSteamPipe left, HSteamPipe right) Parameters left HSteamPipe right HSteamPipe Returns bool operator <(HSteamPipe, HSteamPipe) Value-based comparison. public static bool operator <(HSteamPipe left, HSteamPipe right) Parameters left HSteamPipe right HSteamPipe Returns bool operator <=(HSteamPipe, HSteamPipe) Value-based comparison. public static bool operator <=(HSteamPipe left, HSteamPipe right) Parameters left HSteamPipe right HSteamPipe Returns bool"
  },
  "api/MarymoorStudios.Core.Steamworks.HSteamUser.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.HSteamUser.html",
    "title": "Struct HSteamUser",
    "summary": "Struct HSteamUser Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public readonly struct HSteamUser : IEquatable<HSteamUser>, IComparable<HSteamUser> Implements IEquatable<HSteamUser> IComparable<HSteamUser> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors HSteamUser(int) public HSteamUser(int handle) Parameters handle int Properties Handle The underlying value. public int Handle { get; } Property Value int Invalid The invalid id. public static HSteamUser Invalid { get; } Property Value HSteamUser IsValid True if not Invalid. public bool IsValid { get; } Property Value bool Methods CompareTo(HSteamUser) Value-based comparison. public int CompareTo(HSteamUser other) Parameters other HSteamUser Returns int Equals(HSteamUser) Value-based equality. public bool Equals(HSteamUser other) Parameters other HSteamUser Returns bool Equals(object?) public override bool Equals(object? obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() public override string ToString() Returns string Operators operator ==(HSteamUser, HSteamUser) Value-based equality. public static bool operator ==(HSteamUser left, HSteamUser right) Parameters left HSteamUser right HSteamUser Returns bool operator >(HSteamUser, HSteamUser) Value-based comparison. public static bool operator >(HSteamUser left, HSteamUser right) Parameters left HSteamUser right HSteamUser Returns bool operator >=(HSteamUser, HSteamUser) Value-based comparison. public static bool operator >=(HSteamUser left, HSteamUser right) Parameters left HSteamUser right HSteamUser Returns bool operator !=(HSteamUser, HSteamUser) Value-based equality. public static bool operator !=(HSteamUser left, HSteamUser right) Parameters left HSteamUser right HSteamUser Returns bool operator <(HSteamUser, HSteamUser) Value-based comparison. public static bool operator <(HSteamUser left, HSteamUser right) Parameters left HSteamUser right HSteamUser Returns bool operator <=(HSteamUser, HSteamUser) Value-based comparison. public static bool operator <=(HSteamUser left, HSteamUser right) Parameters left HSteamUser right HSteamUser Returns bool"
  },
  "api/MarymoorStudios.Core.Steamworks.HTTPCookieContainerHandle.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.HTTPCookieContainerHandle.html",
    "title": "Struct HTTPCookieContainerHandle",
    "summary": "Struct HTTPCookieContainerHandle Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public readonly struct HTTPCookieContainerHandle : IEquatable<HTTPCookieContainerHandle>, IComparable<HTTPCookieContainerHandle> Implements IEquatable<HTTPCookieContainerHandle> IComparable<HTTPCookieContainerHandle> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors HTTPCookieContainerHandle(uint) public HTTPCookieContainerHandle(uint id) Parameters id uint Properties Id The underlying value. public uint Id { get; } Property Value uint Invalid The invalid id. public static uint Invalid { get; } Property Value uint IsValid True if not Invalid. public bool IsValid { get; } Property Value bool Methods CompareTo(HTTPCookieContainerHandle) Value-based comparison. public int CompareTo(HTTPCookieContainerHandle other) Parameters other HTTPCookieContainerHandle Returns int Equals(HTTPCookieContainerHandle) Value-based equality. public bool Equals(HTTPCookieContainerHandle other) Parameters other HTTPCookieContainerHandle Returns bool Equals(object?) public override bool Equals(object? obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() public override string ToString() Returns string Operators operator ==(HTTPCookieContainerHandle, HTTPCookieContainerHandle) Value-based equality. public static bool operator ==(HTTPCookieContainerHandle left, HTTPCookieContainerHandle right) Parameters left HTTPCookieContainerHandle right HTTPCookieContainerHandle Returns bool operator >(HTTPCookieContainerHandle, HTTPCookieContainerHandle) Value-based comparison. public static bool operator >(HTTPCookieContainerHandle left, HTTPCookieContainerHandle right) Parameters left HTTPCookieContainerHandle right HTTPCookieContainerHandle Returns bool operator >=(HTTPCookieContainerHandle, HTTPCookieContainerHandle) Value-based comparison. public static bool operator >=(HTTPCookieContainerHandle left, HTTPCookieContainerHandle right) Parameters left HTTPCookieContainerHandle right HTTPCookieContainerHandle Returns bool operator !=(HTTPCookieContainerHandle, HTTPCookieContainerHandle) Value-based equality. public static bool operator !=(HTTPCookieContainerHandle left, HTTPCookieContainerHandle right) Parameters left HTTPCookieContainerHandle right HTTPCookieContainerHandle Returns bool operator <(HTTPCookieContainerHandle, HTTPCookieContainerHandle) Value-based comparison. public static bool operator <(HTTPCookieContainerHandle left, HTTPCookieContainerHandle right) Parameters left HTTPCookieContainerHandle right HTTPCookieContainerHandle Returns bool operator <=(HTTPCookieContainerHandle, HTTPCookieContainerHandle) Value-based comparison. public static bool operator <=(HTTPCookieContainerHandle left, HTTPCookieContainerHandle right) Parameters left HTTPCookieContainerHandle right HTTPCookieContainerHandle Returns bool"
  },
  "api/MarymoorStudios.Core.Steamworks.HTTPRequestCompleted.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.HTTPRequestCompleted.html",
    "title": "Struct HTTPRequestCompleted",
    "summary": "Struct HTTPRequestCompleted Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct HTTPRequestCompleted : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields BodySize public uint BodySize Field Value uint CallbackId public const int CallbackId = 2101 Field Value int ContextValue public ulong ContextValue Field Value ulong Request public HTTPRequestHandle Request Field Value HTTPRequestHandle StatusCode public EHTTPStatusCode StatusCode Field Value EHTTPStatusCode Properties RequestSuccessful public bool RequestSuccessful { get; set; } Property Value bool"
  },
  "api/MarymoorStudios.Core.Steamworks.HTTPRequestDataReceived.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.HTTPRequestDataReceived.html",
    "title": "Struct HTTPRequestDataReceived",
    "summary": "Struct HTTPRequestDataReceived Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct HTTPRequestDataReceived : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields BytesReceived public uint BytesReceived Field Value uint CallbackId public const int CallbackId = 2103 Field Value int ContextValue public ulong ContextValue Field Value ulong Offset public uint Offset Field Value uint Request public HTTPRequestHandle Request Field Value HTTPRequestHandle"
  },
  "api/MarymoorStudios.Core.Steamworks.HTTPRequestHandle.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.HTTPRequestHandle.html",
    "title": "Struct HTTPRequestHandle",
    "summary": "Struct HTTPRequestHandle Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public readonly struct HTTPRequestHandle : IEquatable<HTTPRequestHandle>, IComparable<HTTPRequestHandle> Implements IEquatable<HTTPRequestHandle> IComparable<HTTPRequestHandle> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors HTTPRequestHandle(uint) public HTTPRequestHandle(uint id) Parameters id uint Properties Id The underlying value. public uint Id { get; } Property Value uint Invalid The invalid id. public static uint Invalid { get; } Property Value uint IsValid True if not Invalid. public bool IsValid { get; } Property Value bool Methods CompareTo(HTTPRequestHandle) Value-based comparison. public int CompareTo(HTTPRequestHandle other) Parameters other HTTPRequestHandle Returns int Equals(HTTPRequestHandle) Value-based equality. public bool Equals(HTTPRequestHandle other) Parameters other HTTPRequestHandle Returns bool Equals(object?) public override bool Equals(object? obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() public override string ToString() Returns string Operators operator ==(HTTPRequestHandle, HTTPRequestHandle) Value-based equality. public static bool operator ==(HTTPRequestHandle left, HTTPRequestHandle right) Parameters left HTTPRequestHandle right HTTPRequestHandle Returns bool operator >(HTTPRequestHandle, HTTPRequestHandle) Value-based comparison. public static bool operator >(HTTPRequestHandle left, HTTPRequestHandle right) Parameters left HTTPRequestHandle right HTTPRequestHandle Returns bool operator >=(HTTPRequestHandle, HTTPRequestHandle) Value-based comparison. public static bool operator >=(HTTPRequestHandle left, HTTPRequestHandle right) Parameters left HTTPRequestHandle right HTTPRequestHandle Returns bool operator !=(HTTPRequestHandle, HTTPRequestHandle) Value-based equality. public static bool operator !=(HTTPRequestHandle left, HTTPRequestHandle right) Parameters left HTTPRequestHandle right HTTPRequestHandle Returns bool operator <(HTTPRequestHandle, HTTPRequestHandle) Value-based comparison. public static bool operator <(HTTPRequestHandle left, HTTPRequestHandle right) Parameters left HTTPRequestHandle right HTTPRequestHandle Returns bool operator <=(HTTPRequestHandle, HTTPRequestHandle) Value-based comparison. public static bool operator <=(HTTPRequestHandle left, HTTPRequestHandle right) Parameters left HTTPRequestHandle right HTTPRequestHandle Returns bool"
  },
  "api/MarymoorStudios.Core.Steamworks.HTTPRequestHeadersReceived.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.HTTPRequestHeadersReceived.html",
    "title": "Struct HTTPRequestHeadersReceived",
    "summary": "Struct HTTPRequestHeadersReceived Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct HTTPRequestHeadersReceived : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 2102 Field Value int ContextValue public ulong ContextValue Field Value ulong Request public HTTPRequestHandle Request Field Value HTTPRequestHandle"
  },
  "api/MarymoorStudios.Core.Steamworks.HtmlBrowserReady.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.HtmlBrowserReady.html",
    "title": "Struct HtmlBrowserReady",
    "summary": "Struct HtmlBrowserReady Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct HtmlBrowserReady : ICallResult Implements ICallResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields BrowserHandle public HHTMLBrowser BrowserHandle Field Value HHTMLBrowser CallbackId public const int CallbackId = 4501 Field Value int"
  },
  "api/MarymoorStudios.Core.Steamworks.HtmlBrowserRestarted.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.HtmlBrowserRestarted.html",
    "title": "Struct HtmlBrowserRestarted",
    "summary": "Struct HtmlBrowserRestarted Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct HtmlBrowserRestarted : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields BrowserHandle public HHTMLBrowser BrowserHandle Field Value HHTMLBrowser CallbackId public const int CallbackId = 4527 Field Value int OldBrowserHandle public HHTMLBrowser OldBrowserHandle Field Value HHTMLBrowser"
  },
  "api/MarymoorStudios.Core.Steamworks.HtmlCanGoBackAndForward.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.HtmlCanGoBackAndForward.html",
    "title": "Struct HtmlCanGoBackAndForward",
    "summary": "Struct HtmlCanGoBackAndForward Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct HtmlCanGoBackAndForward : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields BrowserHandle public HHTMLBrowser BrowserHandle Field Value HHTMLBrowser CallbackId public const int CallbackId = 4510 Field Value int Properties CanGoBack public bool CanGoBack { get; set; } Property Value bool CanGoForward public bool CanGoForward { get; set; } Property Value bool"
  },
  "api/MarymoorStudios.Core.Steamworks.HtmlChangedTitle.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.HtmlChangedTitle.html",
    "title": "Struct HtmlChangedTitle",
    "summary": "Struct HtmlChangedTitle Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct HtmlChangedTitle : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields BrowserHandle public HHTMLBrowser BrowserHandle Field Value HHTMLBrowser CallbackId public const int CallbackId = 4508 Field Value int Title public nint Title Field Value nint"
  },
  "api/MarymoorStudios.Core.Steamworks.HtmlCloseBrowser.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.HtmlCloseBrowser.html",
    "title": "Struct HtmlCloseBrowser",
    "summary": "Struct HtmlCloseBrowser Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct HtmlCloseBrowser : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields BrowserHandle public HHTMLBrowser BrowserHandle Field Value HHTMLBrowser CallbackId public const int CallbackId = 4504 Field Value int"
  },
  "api/MarymoorStudios.Core.Steamworks.HtmlFileOpenDialog.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.HtmlFileOpenDialog.html",
    "title": "Struct HtmlFileOpenDialog",
    "summary": "Struct HtmlFileOpenDialog Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct HtmlFileOpenDialog : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields BrowserHandle public HHTMLBrowser BrowserHandle Field Value HHTMLBrowser CallbackId public const int CallbackId = 4516 Field Value int InitialFile public nint InitialFile Field Value nint Title public nint Title Field Value nint"
  },
  "api/MarymoorStudios.Core.Steamworks.HtmlFinishedRequest.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.HtmlFinishedRequest.html",
    "title": "Struct HtmlFinishedRequest",
    "summary": "Struct HtmlFinishedRequest Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct HtmlFinishedRequest : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields BrowserHandle public HHTMLBrowser BrowserHandle Field Value HHTMLBrowser CallbackId public const int CallbackId = 4506 Field Value int PageTitle public nint PageTitle Field Value nint URL public nint URL Field Value nint"
  },
  "api/MarymoorStudios.Core.Steamworks.HtmlHideToolTip.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.HtmlHideToolTip.html",
    "title": "Struct HtmlHideToolTip",
    "summary": "Struct HtmlHideToolTip Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct HtmlHideToolTip : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields BrowserHandle public HHTMLBrowser BrowserHandle Field Value HHTMLBrowser CallbackId public const int CallbackId = 4526 Field Value int"
  },
  "api/MarymoorStudios.Core.Steamworks.HtmlHorizontalScroll.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.HtmlHorizontalScroll.html",
    "title": "Struct HtmlHorizontalScroll",
    "summary": "Struct HtmlHorizontalScroll Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct HtmlHorizontalScroll : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields BrowserHandle public HHTMLBrowser BrowserHandle Field Value HHTMLBrowser CallbackId public const int CallbackId = 4511 Field Value int PageScale public float PageScale Field Value float PageSize public uint PageSize Field Value uint ScrollCurrent public uint ScrollCurrent Field Value uint ScrollMax public uint ScrollMax Field Value uint Properties Visible public bool Visible { get; set; } Property Value bool"
  },
  "api/MarymoorStudios.Core.Steamworks.HtmlJSAlert.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.HtmlJSAlert.html",
    "title": "Struct HtmlJSAlert",
    "summary": "Struct HtmlJSAlert Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct HtmlJSAlert : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields BrowserHandle public HHTMLBrowser BrowserHandle Field Value HHTMLBrowser CallbackId public const int CallbackId = 4514 Field Value int Message public nint Message Field Value nint"
  },
  "api/MarymoorStudios.Core.Steamworks.HtmlJSConfirm.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.HtmlJSConfirm.html",
    "title": "Struct HtmlJSConfirm",
    "summary": "Struct HtmlJSConfirm Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct HtmlJSConfirm : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields BrowserHandle public HHTMLBrowser BrowserHandle Field Value HHTMLBrowser CallbackId public const int CallbackId = 4515 Field Value int Message public nint Message Field Value nint"
  },
  "api/MarymoorStudios.Core.Steamworks.HtmlLinkAtPosition.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.HtmlLinkAtPosition.html",
    "title": "Struct HtmlLinkAtPosition",
    "summary": "Struct HtmlLinkAtPosition Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct HtmlLinkAtPosition : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields BrowserHandle public HHTMLBrowser BrowserHandle Field Value HHTMLBrowser CallbackId public const int CallbackId = 4513 Field Value int URL public nint URL Field Value nint X public uint X Field Value uint Y public uint Y Field Value uint Properties Input public bool Input { get; set; } Property Value bool LiveLink public bool LiveLink { get; set; } Property Value bool"
  },
  "api/MarymoorStudios.Core.Steamworks.HtmlNeedsPaint.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.HtmlNeedsPaint.html",
    "title": "Struct HtmlNeedsPaint",
    "summary": "Struct HtmlNeedsPaint Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct HtmlNeedsPaint : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields BGRA public nint BGRA Field Value nint BrowserHandle public HHTMLBrowser BrowserHandle Field Value HHTMLBrowser CallbackId public const int CallbackId = 4502 Field Value int PageScale public float PageScale Field Value float PageSerial public uint PageSerial Field Value uint ScrollX public uint ScrollX Field Value uint ScrollY public uint ScrollY Field Value uint Tall public uint Tall Field Value uint UpdateTall public uint UpdateTall Field Value uint UpdateWide public uint UpdateWide Field Value uint UpdateX public uint UpdateX Field Value uint UpdateY public uint UpdateY Field Value uint Wide public uint Wide Field Value uint"
  },
  "api/MarymoorStudios.Core.Steamworks.HtmlNewWindow.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.HtmlNewWindow.html",
    "title": "Struct HtmlNewWindow",
    "summary": "Struct HtmlNewWindow Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct HtmlNewWindow : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields BrowserHandle public HHTMLBrowser BrowserHandle Field Value HHTMLBrowser CallbackId public const int CallbackId = 4521 Field Value int NewWindow_BrowserHandle_IGNORE public HHTMLBrowser NewWindow_BrowserHandle_IGNORE Field Value HHTMLBrowser Tall public uint Tall Field Value uint URL public nint URL Field Value nint Wide public uint Wide Field Value uint X public uint X Field Value uint Y public uint Y Field Value uint"
  },
  "api/MarymoorStudios.Core.Steamworks.HtmlOpenLinkInNewTab.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.HtmlOpenLinkInNewTab.html",
    "title": "Struct HtmlOpenLinkInNewTab",
    "summary": "Struct HtmlOpenLinkInNewTab Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct HtmlOpenLinkInNewTab : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields BrowserHandle public HHTMLBrowser BrowserHandle Field Value HHTMLBrowser CallbackId public const int CallbackId = 4507 Field Value int URL public nint URL Field Value nint"
  },
  "api/MarymoorStudios.Core.Steamworks.HtmlSearchResults.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.HtmlSearchResults.html",
    "title": "Struct HtmlSearchResults",
    "summary": "Struct HtmlSearchResults Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct HtmlSearchResults : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields BrowserHandle public HHTMLBrowser BrowserHandle Field Value HHTMLBrowser CallbackId public const int CallbackId = 4509 Field Value int CurrentMatch public uint CurrentMatch Field Value uint Results public uint Results Field Value uint"
  },
  "api/MarymoorStudios.Core.Steamworks.HtmlSetCursor.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.HtmlSetCursor.html",
    "title": "Struct HtmlSetCursor",
    "summary": "Struct HtmlSetCursor Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct HtmlSetCursor : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields BrowserHandle public HHTMLBrowser BrowserHandle Field Value HHTMLBrowser CallbackId public const int CallbackId = 4522 Field Value int MouseCursor public uint MouseCursor Field Value uint"
  },
  "api/MarymoorStudios.Core.Steamworks.HtmlShowToolTip.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.HtmlShowToolTip.html",
    "title": "Struct HtmlShowToolTip",
    "summary": "Struct HtmlShowToolTip Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct HtmlShowToolTip : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields BrowserHandle public HHTMLBrowser BrowserHandle Field Value HHTMLBrowser CallbackId public const int CallbackId = 4524 Field Value int Msg public nint Msg Field Value nint"
  },
  "api/MarymoorStudios.Core.Steamworks.HtmlStartRequest.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.HtmlStartRequest.html",
    "title": "Struct HtmlStartRequest",
    "summary": "Struct HtmlStartRequest Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct HtmlStartRequest : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields BrowserHandle public HHTMLBrowser BrowserHandle Field Value HHTMLBrowser CallbackId public const int CallbackId = 4503 Field Value int PostData public nint PostData Field Value nint Target public nint Target Field Value nint URL public nint URL Field Value nint Properties IsRedirect public bool IsRedirect { get; set; } Property Value bool"
  },
  "api/MarymoorStudios.Core.Steamworks.HtmlStatusText.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.HtmlStatusText.html",
    "title": "Struct HtmlStatusText",
    "summary": "Struct HtmlStatusText Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct HtmlStatusText : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields BrowserHandle public HHTMLBrowser BrowserHandle Field Value HHTMLBrowser CallbackId public const int CallbackId = 4523 Field Value int Msg public nint Msg Field Value nint"
  },
  "api/MarymoorStudios.Core.Steamworks.HtmlURLChanged.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.HtmlURLChanged.html",
    "title": "Struct HtmlURLChanged",
    "summary": "Struct HtmlURLChanged Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct HtmlURLChanged : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields BrowserHandle public HHTMLBrowser BrowserHandle Field Value HHTMLBrowser CallbackId public const int CallbackId = 4505 Field Value int PageTitle public nint PageTitle Field Value nint PostData public nint PostData Field Value nint URL public nint URL Field Value nint Properties IsRedirect public bool IsRedirect { get; set; } Property Value bool NewNavigation public bool NewNavigation { get; set; } Property Value bool"
  },
  "api/MarymoorStudios.Core.Steamworks.HtmlUpdateToolTip.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.HtmlUpdateToolTip.html",
    "title": "Struct HtmlUpdateToolTip",
    "summary": "Struct HtmlUpdateToolTip Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct HtmlUpdateToolTip : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields BrowserHandle public HHTMLBrowser BrowserHandle Field Value HHTMLBrowser CallbackId public const int CallbackId = 4525 Field Value int Msg public nint Msg Field Value nint"
  },
  "api/MarymoorStudios.Core.Steamworks.HtmlVerticalScroll.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.HtmlVerticalScroll.html",
    "title": "Struct HtmlVerticalScroll",
    "summary": "Struct HtmlVerticalScroll Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct HtmlVerticalScroll : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields BrowserHandle public HHTMLBrowser BrowserHandle Field Value HHTMLBrowser CallbackId public const int CallbackId = 4512 Field Value int PageScale public float PageScale Field Value float PageSize public uint PageSize Field Value uint ScrollCurrent public uint ScrollCurrent Field Value uint ScrollMax public uint ScrollMax Field Value uint Properties Visible public bool Visible { get; set; } Property Value bool"
  },
  "api/MarymoorStudios.Core.Steamworks.ICallResult.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ICallResult.html",
    "title": "Interface ICallResult",
    "summary": "Interface ICallResult Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll A structure that is used to resolve a pending CallResult promise. public interface ICallResult"
  },
  "api/MarymoorStudios.Core.Steamworks.ICallback.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ICallback.html",
    "title": "Interface ICallback",
    "summary": "Interface ICallback Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll A structure that is passed as an argument to a SIP-bound CallbackAction<T>. public interface ICallback"
  },
  "api/MarymoorStudios.Core.Steamworks.IGlobalCallback.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.IGlobalCallback.html",
    "title": "Interface IGlobalCallback",
    "summary": "Interface IGlobalCallback Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll Like a ICallback except that action dispatch is FREE-THREADED instead of SIP-bound. public interface IGlobalCallback : ICallback Remarks These types of callbacks are not SIP-bound and must be handled with EXTREME care."
  },
  "api/MarymoorStudios.Core.Steamworks.IPCFailure.EFailureType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.IPCFailure.EFailureType.html",
    "title": "Enum IPCFailure.EFailureType",
    "summary": "Enum IPCFailure.EFailureType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum IPCFailure.EFailureType Fields FlushedCallbackQueue = 0 PipeFail = 1"
  },
  "api/MarymoorStudios.Core.Steamworks.IPCFailure.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.IPCFailure.html",
    "title": "Struct IPCFailure",
    "summary": "Struct IPCFailure Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct IPCFailure : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 117 Field Value int FailureType public byte FailureType Field Value byte"
  },
  "api/MarymoorStudios.Core.Steamworks.IPCountry.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.IPCountry.html",
    "title": "Struct IPCountry",
    "summary": "Struct IPCountry Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct IPCountry : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 701 Field Value int"
  },
  "api/MarymoorStudios.Core.Steamworks.ISteamApps.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ISteamApps.html",
    "title": "Class ISteamApps",
    "summary": "Class ISteamApps Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public sealed class ISteamApps : SteamNativeObject Inheritance object SteamNativeObject ISteamApps Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Fields INTERFACE_VERSION public const string INTERFACE_VERSION = \"STEAMAPPS_INTERFACE_VERSION008\" Field Value string Methods BGetDLCDataByIndex(int, out AppId, out bool, Span<byte>) public bool BGetDLCDataByIndex(int dlc, out AppId appId, out bool available, Span<byte> name) Parameters dlc int appId AppId available bool name Span<byte> Returns bool BIsAppInstalled(AppId) public bool BIsAppInstalled(AppId appId) Parameters appId AppId Returns bool BIsCybercafe() public bool BIsCybercafe() Returns bool BIsDlcInstalled(AppId) public bool BIsDlcInstalled(AppId appId) Parameters appId AppId Returns bool BIsLowViolence() public bool BIsLowViolence() Returns bool BIsSubscribed() public bool BIsSubscribed() Returns bool BIsSubscribedApp(AppId) public bool BIsSubscribedApp(AppId appId) Parameters appId AppId Returns bool BIsSubscribedFromFamilySharing() public bool BIsSubscribedFromFamilySharing() Returns bool BIsSubscribedFromFreeWeekend() public bool BIsSubscribedFromFreeWeekend() Returns bool BIsTimedTrial(out uint, out uint) public bool BIsTimedTrial(out uint secondsAllowed, out uint secondsPlayed) Parameters secondsAllowed uint secondsPlayed uint Returns bool BIsVACBanned() public bool BIsVACBanned() Returns bool GetAppBuildId() public int GetAppBuildId() Returns int GetAppInstallDir(AppId, Span<byte>) public uint GetAppInstallDir(AppId appId, Span<byte> folder) Parameters appId AppId folder Span<byte> Returns uint GetAppOwner() public CSteamID GetAppOwner() Returns CSteamID GetAvailableGameLanguages() public string GetAvailableGameLanguages() Returns string GetBetaInfo(int, out uint, out uint, Span<byte>, Span<byte>) public bool GetBetaInfo(int betaIndex, out uint flags, out uint buildID, Span<byte> betaName, Span<byte> description) Parameters betaIndex int flags uint buildID uint betaName Span<byte> description Span<byte> Returns bool GetCurrentBetaName(Span<byte>) public bool GetCurrentBetaName(Span<byte> name) Parameters name Span<byte> Returns bool GetCurrentGameLanguage() public string GetCurrentGameLanguage() Returns string GetDLCCount() public int GetDLCCount() Returns int GetDlcDownloadProgress(AppId, out ulong, out ulong) public bool GetDlcDownloadProgress(AppId appId, out ulong bytesDownloaded, out ulong bytesTotal) Parameters appId AppId bytesDownloaded ulong bytesTotal ulong Returns bool GetEarliestPurchaseUnixTime(AppId) public uint GetEarliestPurchaseUnixTime(AppId appId) Parameters appId AppId Returns uint GetFileDetails(string) public Promise<FileDetailsResult> GetFileDetails(string pszFileName) Parameters pszFileName string Returns Promise<FileDetailsResult> GetInstalledDepots(AppId, Span<DepotId>) public uint GetInstalledDepots(AppId appId, Span<DepotId> depots) Parameters appId AppId depots Span<DepotId> Returns uint GetLaunchCommandLine(Span<byte>) public int GetLaunchCommandLine(Span<byte> pszCommandLine) Parameters pszCommandLine Span<byte> Returns int GetLaunchQueryParam(string) public string GetLaunchQueryParam(string key) Parameters key string Returns string GetNumBetas(out int, out int) public int GetNumBetas(out int available, out int @private) Parameters available int private int Returns int InstallDLC(AppId) public void InstallDLC(AppId appId) Parameters appId AppId MarkContentCorrupt(bool) public bool MarkContentCorrupt(bool missingFilesOnly) Parameters missingFilesOnly bool Returns bool OnAppProofOfPurchaseKeyResponse(CallbackAction<AppProofOfPurchaseKeyResponse>) public IDisposable OnAppProofOfPurchaseKeyResponse(CallbackAction<AppProofOfPurchaseKeyResponse> func) Parameters func CallbackAction<AppProofOfPurchaseKeyResponse> Returns IDisposable OnDlcInstalled(CallbackAction<DlcInstalled>) public IDisposable OnDlcInstalled(CallbackAction<DlcInstalled> func) Parameters func CallbackAction<DlcInstalled> Returns IDisposable OnNewUrlLaunchParameters(CallbackAction<NewUrlLaunchParameters>) public IDisposable OnNewUrlLaunchParameters(CallbackAction<NewUrlLaunchParameters> func) Parameters func CallbackAction<NewUrlLaunchParameters> Returns IDisposable OnTimedTrialStatus(CallbackAction<TimedTrialStatus>) public IDisposable OnTimedTrialStatus(CallbackAction<TimedTrialStatus> func) Parameters func CallbackAction<TimedTrialStatus> Returns IDisposable RequestAllProofOfPurchaseKeys() public void RequestAllProofOfPurchaseKeys() RequestAppProofOfPurchaseKey(AppId) public void RequestAppProofOfPurchaseKey(AppId appId) Parameters appId AppId SetActiveBeta(string) public bool SetActiveBeta(string betaName) Parameters betaName string Returns bool SetDlcContext(AppId) public bool SetDlcContext(AppId appId) Parameters appId AppId Returns bool UninstallDLC(AppId) public void UninstallDLC(AppId appId) Parameters appId AppId"
  },
  "api/MarymoorStudios.Core.Steamworks.ISteamClient.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ISteamClient.html",
    "title": "Class ISteamClient",
    "summary": "Class ISteamClient Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public sealed class ISteamClient : SteamNativeObject Inheritance object SteamNativeObject ISteamClient Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods BReleaseSteamPipe(HSteamPipe) public bool BReleaseSteamPipe(HSteamPipe steamPipe) Parameters steamPipe HSteamPipe Returns bool BShutdownIfAllPipesClosed() public bool BShutdownIfAllPipesClosed() Returns bool ConnectToGlobalUser(HSteamPipe) public HSteamUser ConnectToGlobalUser(HSteamPipe steamPipe) Parameters steamPipe HSteamPipe Returns HSteamUser CreateLocalUser(out HSteamPipe, EAccountType) public HSteamUser CreateLocalUser(out HSteamPipe hSteamPipe, EAccountType accountType) Parameters hSteamPipe HSteamPipe accountType EAccountType Returns HSteamUser CreateSteamPipe() public HSteamPipe CreateSteamPipe() Returns HSteamPipe GetIPCCallCount() public uint GetIPCCallCount() Returns uint GetISteamApps() public ISteamApps GetISteamApps() Returns ISteamApps GetISteamController() public ISteamController GetISteamController() Returns ISteamController GetISteamFriends() public ISteamFriends GetISteamFriends() Returns ISteamFriends GetISteamGameSearch() public ISteamGameSearch GetISteamGameSearch() Returns ISteamGameSearch GetISteamGameServer() public ISteamGameServer GetISteamGameServer() Returns ISteamGameServer GetISteamGameServerStats() public ISteamGameServerStats GetISteamGameServerStats() Returns ISteamGameServerStats GetISteamHTMLSurface() public ISteamHTMLSurface GetISteamHTMLSurface() Returns ISteamHTMLSurface GetISteamHTTP() public ISteamHTTP GetISteamHTTP() Returns ISteamHTTP GetISteamInput() public ISteamInput GetISteamInput() Returns ISteamInput GetISteamInventory() public ISteamInventory GetISteamInventory() Returns ISteamInventory GetISteamMatchmaking() public ISteamMatchmaking GetISteamMatchmaking() Returns ISteamMatchmaking GetISteamMatchmakingServers() public ISteamMatchmakingServers GetISteamMatchmakingServers() Returns ISteamMatchmakingServers GetISteamMusic() public ISteamMusic GetISteamMusic() Returns ISteamMusic GetISteamMusicRemote() public ISteamMusicRemote GetISteamMusicRemote() Returns ISteamMusicRemote GetISteamNetworking() public ISteamNetworking GetISteamNetworking() Returns ISteamNetworking GetISteamNetworkingMessages() public ISteamNetworkingMessages GetISteamNetworkingMessages() Returns ISteamNetworkingMessages GetISteamNetworkingSockets() public ISteamNetworkingSockets GetISteamNetworkingSockets() Returns ISteamNetworkingSockets GetISteamNetworkingUtils() public ISteamNetworkingUtils GetISteamNetworkingUtils() Returns ISteamNetworkingUtils GetISteamParentalSettings() public ISteamParentalSettings GetISteamParentalSettings() Returns ISteamParentalSettings GetISteamParties() public ISteamParties GetISteamParties() Returns ISteamParties GetISteamRemotePlay() public ISteamRemotePlay GetISteamRemotePlay() Returns ISteamRemotePlay GetISteamRemoteStorage() public ISteamRemoteStorage GetISteamRemoteStorage() Returns ISteamRemoteStorage GetISteamScreenshots() public ISteamScreenshots GetISteamScreenshots() Returns ISteamScreenshots GetISteamUGC() public ISteamUGC GetISteamUGC() Returns ISteamUGC GetISteamUser() public ISteamUser GetISteamUser() Returns ISteamUser GetISteamUserStats() public ISteamUserStats GetISteamUserStats() Returns ISteamUserStats GetISteamUtils() public ISteamUtils GetISteamUtils() Returns ISteamUtils GetISteamVideo() public ISteamVideo GetISteamVideo() Returns ISteamVideo ReleaseUser(HSteamPipe, HSteamUser) public void ReleaseUser(HSteamPipe steamPipe, HSteamUser user) Parameters steamPipe HSteamPipe user HSteamUser"
  },
  "api/MarymoorStudios.Core.Steamworks.ISteamController.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ISteamController.html",
    "title": "Class ISteamController",
    "summary": "Class ISteamController Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public sealed class ISteamController : SteamNativeObject Inheritance object SteamNativeObject ISteamController Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Fields INTERFACE_VERSION public const string INTERFACE_VERSION = \"SteamController008\" Field Value string Methods ActivateActionSet(ControllerHandle, ControllerActionSetHandle) public void ActivateActionSet(ControllerHandle controllerHandle, ControllerActionSetHandle actionSetHandle) Parameters controllerHandle ControllerHandle actionSetHandle ControllerActionSetHandle ActivateActionSetLayer(ControllerHandle, ControllerActionSetHandle) public void ActivateActionSetLayer(ControllerHandle controllerHandle, ControllerActionSetHandle actionSetLayerHandle) Parameters controllerHandle ControllerHandle actionSetLayerHandle ControllerActionSetHandle DeactivateActionSetLayer(ControllerHandle, ControllerActionSetHandle) public void DeactivateActionSetLayer(ControllerHandle controllerHandle, ControllerActionSetHandle actionSetLayerHandle) Parameters controllerHandle ControllerHandle actionSetLayerHandle ControllerActionSetHandle DeactivateAllActionSetLayers(ControllerHandle) public void DeactivateAllActionSetLayers(ControllerHandle controllerHandle) Parameters controllerHandle ControllerHandle GetActionOriginFromXboxOrigin(ControllerHandle, EXboxOrigin) public EControllerActionOrigin GetActionOriginFromXboxOrigin(ControllerHandle controllerHandle, EXboxOrigin origin) Parameters controllerHandle ControllerHandle origin EXboxOrigin Returns EControllerActionOrigin GetActionSetHandle(string) public ControllerActionSetHandle GetActionSetHandle(string pszActionSetName) Parameters pszActionSetName string Returns ControllerActionSetHandle GetActiveActionSetLayers(ControllerHandle, Span<ControllerActionSetHandle>) public int GetActiveActionSetLayers(ControllerHandle controllerHandle, Span<ControllerActionSetHandle> handlesOut) Parameters controllerHandle ControllerHandle handlesOut Span<ControllerActionSetHandle> Returns int GetAnalogActionData(ControllerHandle, ControllerAnalogActionHandle) public InputAnalogActionData GetAnalogActionData(ControllerHandle controllerHandle, ControllerAnalogActionHandle analogActionHandle) Parameters controllerHandle ControllerHandle analogActionHandle ControllerAnalogActionHandle Returns InputAnalogActionData GetAnalogActionHandle(string) public ControllerAnalogActionHandle GetAnalogActionHandle(string pszActionName) Parameters pszActionName string Returns ControllerAnalogActionHandle GetAnalogActionOrigins(ControllerHandle, ControllerActionSetHandle, ControllerAnalogActionHandle, Span<EControllerActionOrigin>) public int GetAnalogActionOrigins(ControllerHandle controllerHandle, ControllerActionSetHandle actionSetHandle, ControllerAnalogActionHandle analogActionHandle, Span<EControllerActionOrigin> originsOut) Parameters controllerHandle ControllerHandle actionSetHandle ControllerActionSetHandle analogActionHandle ControllerAnalogActionHandle originsOut Span<EControllerActionOrigin> Returns int GetConnectedControllers(Span<ControllerHandle>) public int GetConnectedControllers(Span<ControllerHandle> handlesOut) Parameters handlesOut Span<ControllerHandle> Returns int GetControllerBindingRevision(ControllerHandle, out int, out int) public bool GetControllerBindingRevision(ControllerHandle controllerHandle, out int major, out int minor) Parameters controllerHandle ControllerHandle major int minor int Returns bool GetControllerForGamepadIndex(int) public ControllerHandle GetControllerForGamepadIndex(int index) Parameters index int Returns ControllerHandle GetCurrentActionSet(ControllerHandle) public ControllerActionSetHandle GetCurrentActionSet(ControllerHandle controllerHandle) Parameters controllerHandle ControllerHandle Returns ControllerActionSetHandle GetDigitalActionData(ControllerHandle, ControllerDigitalActionHandle) public InputDigitalActionData GetDigitalActionData(ControllerHandle controllerHandle, ControllerDigitalActionHandle digitalActionHandle) Parameters controllerHandle ControllerHandle digitalActionHandle ControllerDigitalActionHandle Returns InputDigitalActionData GetDigitalActionHandle(string) public ControllerDigitalActionHandle GetDigitalActionHandle(string pszActionName) Parameters pszActionName string Returns ControllerDigitalActionHandle GetDigitalActionOrigins(ControllerHandle, ControllerActionSetHandle, ControllerDigitalActionHandle, Span<EControllerActionOrigin>) public int GetDigitalActionOrigins(ControllerHandle controllerHandle, ControllerActionSetHandle actionSetHandle, ControllerDigitalActionHandle digitalActionHandle, Span<EControllerActionOrigin> originsOut) Parameters controllerHandle ControllerHandle actionSetHandle ControllerActionSetHandle digitalActionHandle ControllerDigitalActionHandle originsOut Span<EControllerActionOrigin> Returns int GetGamepadIndexForController(ControllerHandle) public int GetGamepadIndexForController(ControllerHandle controllerHandle) Parameters controllerHandle ControllerHandle Returns int GetGlyphForActionOrigin(EControllerActionOrigin) public string GetGlyphForActionOrigin(EControllerActionOrigin origin) Parameters origin EControllerActionOrigin Returns string GetGlyphForXboxOrigin(EXboxOrigin) public string GetGlyphForXboxOrigin(EXboxOrigin origin) Parameters origin EXboxOrigin Returns string GetInputTypeForHandle(ControllerHandle) public ESteamInputType GetInputTypeForHandle(ControllerHandle controllerHandle) Parameters controllerHandle ControllerHandle Returns ESteamInputType GetMotionData(ControllerHandle) public InputMotionData GetMotionData(ControllerHandle controllerHandle) Parameters controllerHandle ControllerHandle Returns InputMotionData GetStringForActionOrigin(EControllerActionOrigin) public string GetStringForActionOrigin(EControllerActionOrigin origin) Parameters origin EControllerActionOrigin Returns string GetStringForXboxOrigin(EXboxOrigin) public string GetStringForXboxOrigin(EXboxOrigin origin) Parameters origin EXboxOrigin Returns string Init() public bool Init() Returns bool OnSteamInputConfigurationLoaded(CallbackAction<SteamInputConfigurationLoaded>) public IDisposable OnSteamInputConfigurationLoaded(CallbackAction<SteamInputConfigurationLoaded> func) Parameters func CallbackAction<SteamInputConfigurationLoaded> Returns IDisposable OnSteamInputDeviceConnected(CallbackAction<SteamInputDeviceConnected>) public IDisposable OnSteamInputDeviceConnected(CallbackAction<SteamInputDeviceConnected> func) Parameters func CallbackAction<SteamInputDeviceConnected> Returns IDisposable OnSteamInputDeviceDisconnected(CallbackAction<SteamInputDeviceDisconnected>) public IDisposable OnSteamInputDeviceDisconnected(CallbackAction<SteamInputDeviceDisconnected> func) Parameters func CallbackAction<SteamInputDeviceDisconnected> Returns IDisposable OnSteamInputGamepadSlotChange(CallbackAction<SteamInputGamepadSlotChange>) public IDisposable OnSteamInputGamepadSlotChange(CallbackAction<SteamInputGamepadSlotChange> func) Parameters func CallbackAction<SteamInputGamepadSlotChange> Returns IDisposable RunFrame() public void RunFrame() SetLEDColor(ControllerHandle, byte, byte, byte, uint) public void SetLEDColor(ControllerHandle controllerHandle, byte colorR, byte colorG, byte colorB, uint flags) Parameters controllerHandle ControllerHandle colorR byte colorG byte colorB byte flags uint ShowBindingPanel(ControllerHandle) public bool ShowBindingPanel(ControllerHandle controllerHandle) Parameters controllerHandle ControllerHandle Returns bool Shutdown() public bool Shutdown() Returns bool StopAnalogActionMomentum(ControllerHandle, ControllerAnalogActionHandle) public void StopAnalogActionMomentum(ControllerHandle controllerHandle, ControllerAnalogActionHandle action) Parameters controllerHandle ControllerHandle action ControllerAnalogActionHandle TranslateActionOrigin(ESteamInputType, EControllerActionOrigin) public EControllerActionOrigin TranslateActionOrigin(ESteamInputType destinationInputType, EControllerActionOrigin sourceOrigin) Parameters destinationInputType ESteamInputType sourceOrigin EControllerActionOrigin Returns EControllerActionOrigin TriggerHapticPulse(ControllerHandle, ESteamControllerPad, ushort) public void TriggerHapticPulse(ControllerHandle controllerHandle, ESteamControllerPad targetPad, ushort durationMicroSec) Parameters controllerHandle ControllerHandle targetPad ESteamControllerPad durationMicroSec ushort TriggerRepeatedHapticPulse(ControllerHandle, ESteamControllerPad, ushort, ushort, ushort, uint) public void TriggerRepeatedHapticPulse(ControllerHandle controllerHandle, ESteamControllerPad targetPad, ushort durationMicroSec, ushort offMicroSec, ushort repeat, uint flags) Parameters controllerHandle ControllerHandle targetPad ESteamControllerPad durationMicroSec ushort offMicroSec ushort repeat ushort flags uint TriggerVibration(ControllerHandle, ushort, ushort) public void TriggerVibration(ControllerHandle controllerHandle, ushort leftSpeed, ushort rightSpeed) Parameters controllerHandle ControllerHandle leftSpeed ushort rightSpeed ushort"
  },
  "api/MarymoorStudios.Core.Steamworks.ISteamFriends.SteamIdEnumerable.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ISteamFriends.SteamIdEnumerable.html",
    "title": "Struct ISteamFriends.SteamIdEnumerable",
    "summary": "Struct ISteamFriends.SteamIdEnumerable Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public readonly ref struct ISteamFriends.SteamIdEnumerable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors SteamIdEnumerable(int, Func<int, CSteamID>) public SteamIdEnumerable(int count, Func<int, CSteamID> next) Parameters count int next Func<int, CSteamID> Methods GetEnumerator() public ISteamFriends.SteamIdEnumerator GetEnumerator() Returns ISteamFriends.SteamIdEnumerator"
  },
  "api/MarymoorStudios.Core.Steamworks.ISteamFriends.SteamIdEnumerator.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ISteamFriends.SteamIdEnumerator.html",
    "title": "Struct ISteamFriends.SteamIdEnumerator",
    "summary": "Struct ISteamFriends.SteamIdEnumerator Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public ref struct ISteamFriends.SteamIdEnumerator Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors SteamIdEnumerator(int, Func<int, CSteamID>) public SteamIdEnumerator(int count, Func<int, CSteamID> next) Parameters count int next Func<int, CSteamID> Properties Current public readonly CSteamID Current { get; } Property Value CSteamID Methods MoveNext() public bool MoveNext() Returns bool"
  },
  "api/MarymoorStudios.Core.Steamworks.ISteamFriends.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ISteamFriends.html",
    "title": "Class ISteamFriends",
    "summary": "Class ISteamFriends Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public sealed class ISteamFriends : SteamNativeObject Inheritance object SteamNativeObject ISteamFriends Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Fields INTERFACE_VERSION public const string INTERFACE_VERSION = \"SteamFriends018\" Field Value string Methods ActivateGameOverlay(string) public void ActivateGameOverlay(string dialog) Parameters dialog string ActivateGameOverlayInviteDialog(CSteamID) public void ActivateGameOverlayInviteDialog(CSteamID steamIDLobby) Parameters steamIDLobby CSteamID ActivateGameOverlayInviteDialogConnectString(string) public void ActivateGameOverlayInviteDialogConnectString(string connectString) Parameters connectString string ActivateGameOverlayRemotePlayTogetherInviteDialog(CSteamID) public void ActivateGameOverlayRemotePlayTogetherInviteDialog(CSteamID steamIDLobby) Parameters steamIDLobby CSteamID ActivateGameOverlayToStore(AppId, EOverlayToStoreFlag) public void ActivateGameOverlayToStore(AppId appId, EOverlayToStoreFlag flag) Parameters appId AppId flag EOverlayToStoreFlag ActivateGameOverlayToUser(string, CSteamID) public void ActivateGameOverlayToUser(string dialog, CSteamID steamID) Parameters dialog string steamID CSteamID ActivateGameOverlayToWebPage(string, EActivateGameOverlayToWebPageMode) public void ActivateGameOverlayToWebPage(string url, EActivateGameOverlayToWebPageMode mode) Parameters url string mode EActivateGameOverlayToWebPageMode BHasEquippedProfileItem(CSteamID, ECommunityProfileItemType) public bool BHasEquippedProfileItem(CSteamID steamID, ECommunityProfileItemType itemType) Parameters steamID CSteamID itemType ECommunityProfileItemType Returns bool ClearRichPresence() public void ClearRichPresence() CloseClanChatWindowInSteam(CSteamID) public bool CloseClanChatWindowInSteam(CSteamID steamIDClanChat) Parameters steamIDClanChat CSteamID Returns bool DownloadClanActivityCounts(ReadOnlySpan<CSteamID>) public Promise<DownloadClanActivityCountsResult> DownloadClanActivityCounts(ReadOnlySpan<CSteamID> psteamIDClans) Parameters psteamIDClans ReadOnlySpan<CSteamID> Returns Promise<DownloadClanActivityCountsResult> EnumerateFollowingList(uint) public Promise<FriendsEnumerateFollowingList> EnumerateFollowingList(uint startIndex) Parameters startIndex uint Returns Promise<FriendsEnumerateFollowingList> EnumerateFriends(EFriendFlags) Enumerates users the client knows that meet certain criteria. public ISteamFriends.SteamIdEnumerable EnumerateFriends(EFriendFlags flags = EFriendFlags.Immediate) Parameters flags EFriendFlags One or more friend flags. Returns ISteamFriends.SteamIdEnumerable An enumerator. Remarks See GetFriendCount(EFriendFlags) and GetFriendByIndex(int, EFriendFlags). GetChatMemberByIndex(CSteamID, int) public CSteamID GetChatMemberByIndex(CSteamID steamIDClan, int user) Parameters steamIDClan CSteamID user int Returns CSteamID GetClanActivityCounts(CSteamID, out int, out int, out int) public bool GetClanActivityCounts(CSteamID steamIDClan, out int online, out int inGame, out int chatting) Parameters steamIDClan CSteamID online int inGame int chatting int Returns bool GetClanByIndex(int) public CSteamID GetClanByIndex(int clan) Parameters clan int Returns CSteamID GetClanChatMemberCount(CSteamID) public int GetClanChatMemberCount(CSteamID steamIDClan) Parameters steamIDClan CSteamID Returns int GetClanChatMessage(CSteamID, int, Span<byte>, out EChatEntryType, out CSteamID) public int GetClanChatMessage(CSteamID steamIDClanChat, int message, Span<byte> prgchText, out EChatEntryType chatEntryType, out CSteamID psteamidChatter) Parameters steamIDClanChat CSteamID message int prgchText Span<byte> chatEntryType EChatEntryType psteamidChatter CSteamID Returns int GetClanCount() public int GetClanCount() Returns int GetClanName(CSteamID) public string GetClanName(CSteamID steamIDClan) Parameters steamIDClan CSteamID Returns string GetClanOfficerByIndex(CSteamID, int) public CSteamID GetClanOfficerByIndex(CSteamID steamIDClan, int officer) Parameters steamIDClan CSteamID officer int Returns CSteamID GetClanOfficerCount(CSteamID) public int GetClanOfficerCount(CSteamID steamIDClan) Parameters steamIDClan CSteamID Returns int GetClanOwner(CSteamID) public CSteamID GetClanOwner(CSteamID steamIDClan) Parameters steamIDClan CSteamID Returns CSteamID GetClanTag(CSteamID) public string GetClanTag(CSteamID steamIDClan) Parameters steamIDClan CSteamID Returns string GetCoplayFriend(int) public CSteamID GetCoplayFriend(int coplayFriend) Parameters coplayFriend int Returns CSteamID GetCoplayFriendCount() public int GetCoplayFriendCount() Returns int GetFollowerCount(CSteamID) public Promise<FriendsGetFollowerCount> GetFollowerCount(CSteamID steamID) Parameters steamID CSteamID Returns Promise<FriendsGetFollowerCount> GetFriendByIndex(int, EFriendFlags) Gets the Steam ID of the user at the given index. public CSteamID GetFriendByIndex(int friend, EFriendFlags friendFlags) Parameters friend int An index between 0 and GetFriendCount(EFriendFlags) . friendFlags EFriendFlags A combination of EFriendFlags. This must be the same value as used in the previous call to GetFriendCount(EFriendFlags) . Returns CSteamID The CSteamID of the friend. Remarks NOTE: You must call GetFriendCount before calling this. Invalid indices return Nil. GetFriendCoplayGame(CSteamID) public AppId GetFriendCoplayGame(CSteamID steamIDFriend) Parameters steamIDFriend CSteamID Returns AppId GetFriendCoplayTime(CSteamID) public int GetFriendCoplayTime(CSteamID steamIDFriend) Parameters steamIDFriend CSteamID Returns int GetFriendCount(EFriendFlags) Gets the number of users the client knows about who meet a specified criteria (friends, blocked, users on the same server, etc). public int GetFriendCount(EFriendFlags friendFlags) Parameters friendFlags EFriendFlags one or more friend flags. Returns int The number of users that meet the specified criteria, or -1 if the current user is not logged on. Remarks This can be used to iterate over all the users by calling MarymoorStudios.Core.Steamworks.ISteamFriends.GetFriendByIndex(System.Int32,System.Int32) to get the Steam IDs of each user. GetFriendCountFromSource(CSteamID) public int GetFriendCountFromSource(CSteamID steamIDSource) Parameters steamIDSource CSteamID Returns int GetFriendFromSourceByIndex(CSteamID, int) public CSteamID GetFriendFromSourceByIndex(CSteamID steamIDSource, int friend) Parameters steamIDSource CSteamID friend int Returns CSteamID GetFriendGamePlayed(CSteamID, out FriendGameInfo) public bool GetFriendGamePlayed(CSteamID steamIDFriend, out FriendGameInfo friendGameInfo) Parameters steamIDFriend CSteamID friendGameInfo FriendGameInfo Returns bool GetFriendMessage(CSteamID, int, Span<byte>, out EChatEntryType) Gets the data from a Steam friends message. public int GetFriendMessage(CSteamID steamIDFriend, int messageID, Span<byte> data, out EChatEntryType chatEntryType) Parameters steamIDFriend CSteamID The Steam ID of the friend that sent this message. messageID int The index of the message. This should be MessageID . data Span<byte> The buffer where the chat message will be copied into. Depends on type. chatEntryType EChatEntryType The type of chat entry that was received. Returns int The number of bytes copied into pvData. Returns 0 and sets chatEntryType to Invalid if the current user is chat restricted, if the provided Steam ID is not a friend, or if the index provided in messageID is invalid. Remarks This should only ever be called in response to a GameConnectedFriendChatMsg callback. GetFriendPersonaName(CSteamID) public string GetFriendPersonaName(CSteamID steamIDFriend) Parameters steamIDFriend CSteamID Returns string GetFriendPersonaNameHistory(CSteamID, int) public string GetFriendPersonaNameHistory(CSteamID steamIDFriend, int personaName) Parameters steamIDFriend CSteamID personaName int Returns string GetFriendPersonaState(CSteamID) public EPersonaState GetFriendPersonaState(CSteamID steamIDFriend) Parameters steamIDFriend CSteamID Returns EPersonaState GetFriendRelationship(CSteamID) public EFriendRelationship GetFriendRelationship(CSteamID steamIDFriend) Parameters steamIDFriend CSteamID Returns EFriendRelationship GetFriendRichPresence(CSteamID, string) public string GetFriendRichPresence(CSteamID steamIDFriend, string key) Parameters steamIDFriend CSteamID key string Returns string GetFriendRichPresenceKeyByIndex(CSteamID, int) public string GetFriendRichPresenceKeyByIndex(CSteamID steamIDFriend, int key) Parameters steamIDFriend CSteamID key int Returns string GetFriendRichPresenceKeyCount(CSteamID) public int GetFriendRichPresenceKeyCount(CSteamID steamIDFriend) Parameters steamIDFriend CSteamID Returns int GetFriendSteamLevel(CSteamID) public int GetFriendSteamLevel(CSteamID steamIDFriend) Parameters steamIDFriend CSteamID Returns int GetFriendsGroupCount() public int GetFriendsGroupCount() Returns int GetFriendsGroupIDByIndex(int) public FriendsGroupID GetFriendsGroupIDByIndex(int fG) Parameters fG int Returns FriendsGroupID GetFriendsGroupMembersCount(FriendsGroupID) public int GetFriendsGroupMembersCount(FriendsGroupID friendsGroupID) Parameters friendsGroupID FriendsGroupID Returns int GetFriendsGroupMembersList(FriendsGroupID, out CSteamID, int) public void GetFriendsGroupMembersList(FriendsGroupID friendsGroupID, out CSteamID outSteamIDMembers, int membersCount) Parameters friendsGroupID FriendsGroupID outSteamIDMembers CSteamID membersCount int GetFriendsGroupName(FriendsGroupID) public string GetFriendsGroupName(FriendsGroupID friendsGroupID) Parameters friendsGroupID FriendsGroupID Returns string GetLargeFriendAvatar(CSteamID) public int GetLargeFriendAvatar(CSteamID steamIDFriend) Parameters steamIDFriend CSteamID Returns int GetMediumFriendAvatar(CSteamID) public int GetMediumFriendAvatar(CSteamID steamIDFriend) Parameters steamIDFriend CSteamID Returns int GetNumChatsWithUnreadPriorityMessages() public int GetNumChatsWithUnreadPriorityMessages() Returns int GetPersonaName() public string GetPersonaName() Returns string GetPersonaState() public EPersonaState GetPersonaState() Returns EPersonaState GetPlayerNickname(CSteamID) public string GetPlayerNickname(CSteamID steamIDPlayer) Parameters steamIDPlayer CSteamID Returns string GetProfileItemPropertyString(CSteamID, ECommunityProfileItemType, ECommunityProfileItemProperty) public string GetProfileItemPropertyString(CSteamID steamID, ECommunityProfileItemType itemType, ECommunityProfileItemProperty prop) Parameters steamID CSteamID itemType ECommunityProfileItemType prop ECommunityProfileItemProperty Returns string GetProfileItemPropertyUint(CSteamID, ECommunityProfileItemType, ECommunityProfileItemProperty) public uint GetProfileItemPropertyUint(CSteamID steamID, ECommunityProfileItemType itemType, ECommunityProfileItemProperty prop) Parameters steamID CSteamID itemType ECommunityProfileItemType prop ECommunityProfileItemProperty Returns uint GetSmallFriendAvatar(CSteamID) public int GetSmallFriendAvatar(CSteamID steamIDFriend) Parameters steamIDFriend CSteamID Returns int HasFriend(CSteamID, int) public bool HasFriend(CSteamID steamIDFriend, int friendFlags) Parameters steamIDFriend CSteamID friendFlags int Returns bool InviteUserToGame(CSteamID, string) public bool InviteUserToGame(CSteamID steamIDFriend, string connectString) Parameters steamIDFriend CSteamID connectString string Returns bool IsClanChatAdmin(CSteamID, CSteamID) public bool IsClanChatAdmin(CSteamID steamIDClanChat, CSteamID steamIDUser) Parameters steamIDClanChat CSteamID steamIDUser CSteamID Returns bool IsClanChatWindowOpenInSteam(CSteamID) public bool IsClanChatWindowOpenInSteam(CSteamID steamIDClanChat) Parameters steamIDClanChat CSteamID Returns bool IsClanOfficialGameGroup(CSteamID) public bool IsClanOfficialGameGroup(CSteamID steamIDClan) Parameters steamIDClan CSteamID Returns bool IsClanPublic(CSteamID) public bool IsClanPublic(CSteamID steamIDClan) Parameters steamIDClan CSteamID Returns bool IsFollowing(CSteamID) public Promise<FriendsIsFollowing> IsFollowing(CSteamID steamID) Parameters steamID CSteamID Returns Promise<FriendsIsFollowing> IsUserInSource(CSteamID, CSteamID) public bool IsUserInSource(CSteamID steamIDUser, CSteamID steamIDSource) Parameters steamIDUser CSteamID steamIDSource CSteamID Returns bool JoinClanChatRoom(CSteamID) public Promise<JoinClanChatRoomCompletionResult> JoinClanChatRoom(CSteamID steamIDClan) Parameters steamIDClan CSteamID Returns Promise<JoinClanChatRoomCompletionResult> LeaveClanChatRoom(CSteamID) public bool LeaveClanChatRoom(CSteamID steamIDClan) Parameters steamIDClan CSteamID Returns bool OnAvatarImageLoaded(CallbackAction<AvatarImageLoaded>) public IDisposable OnAvatarImageLoaded(CallbackAction<AvatarImageLoaded> func) Parameters func CallbackAction<AvatarImageLoaded> Returns IDisposable OnEquippedProfileItemsChanged(CallbackAction<EquippedProfileItemsChanged>) public IDisposable OnEquippedProfileItemsChanged(CallbackAction<EquippedProfileItemsChanged> func) Parameters func CallbackAction<EquippedProfileItemsChanged> Returns IDisposable OnFriendRichPresenceUpdate(CallbackAction<FriendRichPresenceUpdate>) public IDisposable OnFriendRichPresenceUpdate(CallbackAction<FriendRichPresenceUpdate> func) Parameters func CallbackAction<FriendRichPresenceUpdate> Returns IDisposable OnGameConnectedChatJoin(CallbackAction<GameConnectedChatJoin>) public IDisposable OnGameConnectedChatJoin(CallbackAction<GameConnectedChatJoin> func) Parameters func CallbackAction<GameConnectedChatJoin> Returns IDisposable OnGameConnectedChatLeave(CallbackAction<GameConnectedChatLeave>) public IDisposable OnGameConnectedChatLeave(CallbackAction<GameConnectedChatLeave> func) Parameters func CallbackAction<GameConnectedChatLeave> Returns IDisposable OnGameConnectedClanChatMsg(CallbackAction<GameConnectedClanChatMsg>) public IDisposable OnGameConnectedClanChatMsg(CallbackAction<GameConnectedClanChatMsg> func) Parameters func CallbackAction<GameConnectedClanChatMsg> Returns IDisposable OnGameConnectedFriendChatMsg(CallbackAction<GameConnectedFriendChatMsg>) public IDisposable OnGameConnectedFriendChatMsg(CallbackAction<GameConnectedFriendChatMsg> func) Parameters func CallbackAction<GameConnectedFriendChatMsg> Returns IDisposable OnGameLobbyJoinRequested(CallbackAction<GameLobbyJoinRequested>) public IDisposable OnGameLobbyJoinRequested(CallbackAction<GameLobbyJoinRequested> func) Parameters func CallbackAction<GameLobbyJoinRequested> Returns IDisposable OnGameOverlayActivated(CallbackAction<GameOverlayActivated>) public IDisposable OnGameOverlayActivated(CallbackAction<GameOverlayActivated> func) Parameters func CallbackAction<GameOverlayActivated> Returns IDisposable OnGameRichPresenceJoinRequested(CallbackAction<GameRichPresenceJoinRequested>) public IDisposable OnGameRichPresenceJoinRequested(CallbackAction<GameRichPresenceJoinRequested> func) Parameters func CallbackAction<GameRichPresenceJoinRequested> Returns IDisposable OnGameServerChangeRequested(CallbackAction<GameServerChangeRequested>) public IDisposable OnGameServerChangeRequested(CallbackAction<GameServerChangeRequested> func) Parameters func CallbackAction<GameServerChangeRequested> Returns IDisposable OnOverlayBrowserProtocolNavigation(CallbackAction<OverlayBrowserProtocolNavigation>) public IDisposable OnOverlayBrowserProtocolNavigation(CallbackAction<OverlayBrowserProtocolNavigation> func) Parameters func CallbackAction<OverlayBrowserProtocolNavigation> Returns IDisposable OnPersonaStateChange(CallbackAction<PersonaStateChange>) public IDisposable OnPersonaStateChange(CallbackAction<PersonaStateChange> func) Parameters func CallbackAction<PersonaStateChange> Returns IDisposable OnUnreadChatMessagesChanged(CallbackAction<UnreadChatMessagesChanged>) public IDisposable OnUnreadChatMessagesChanged(CallbackAction<UnreadChatMessagesChanged> func) Parameters func CallbackAction<UnreadChatMessagesChanged> Returns IDisposable OpenClanChatWindowInSteam(CSteamID) public bool OpenClanChatWindowInSteam(CSteamID steamIDClanChat) Parameters steamIDClanChat CSteamID Returns bool RegisterProtocolInOverlayBrowser(string) public bool RegisterProtocolInOverlayBrowser(string protocol) Parameters protocol string Returns bool ReplyToFriendMessage(CSteamID, string) public bool ReplyToFriendMessage(CSteamID steamIDFriend, string msgToSend) Parameters steamIDFriend CSteamID msgToSend string Returns bool RequestClanOfficerList(CSteamID) public Promise<ClanOfficerListResponse> RequestClanOfficerList(CSteamID steamIDClan) Parameters steamIDClan CSteamID Returns Promise<ClanOfficerListResponse> RequestEquippedProfileItems(CSteamID) public Promise<EquippedProfileItems> RequestEquippedProfileItems(CSteamID steamID) Parameters steamID CSteamID Returns Promise<EquippedProfileItems> RequestFriendRichPresence(CSteamID) public void RequestFriendRichPresence(CSteamID steamIDFriend) Parameters steamIDFriend CSteamID RequestUserInformation(CSteamID, bool) public bool RequestUserInformation(CSteamID steamIDUser, bool requireNameOnly) Parameters steamIDUser CSteamID requireNameOnly bool Returns bool SendClanChatMessage(CSteamID, string) public bool SendClanChatMessage(CSteamID steamIDClanChat, string text) Parameters steamIDClanChat CSteamID text string Returns bool SetInGameVoiceSpeaking(CSteamID, bool) public void SetInGameVoiceSpeaking(CSteamID steamIDUser, bool speaking) Parameters steamIDUser CSteamID speaking bool SetListenForFriendsMessages() public IDisposable SetListenForFriendsMessages() Returns IDisposable SetPlayedWith(CSteamID) public void SetPlayedWith(CSteamID steamIDUserPlayedWith) Parameters steamIDUserPlayedWith CSteamID SetRichPresence(string, string) public bool SetRichPresence(string key, string value) Parameters key string value string Returns bool"
  },
  "api/MarymoorStudios.Core.Steamworks.ISteamGameSearch.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ISteamGameSearch.html",
    "title": "Class ISteamGameSearch",
    "summary": "Class ISteamGameSearch Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public sealed class ISteamGameSearch : SteamNativeObject Inheritance object SteamNativeObject ISteamGameSearch Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Fields INTERFACE_VERSION public const string INTERFACE_VERSION = \"SteamMatchGameSearch001\" Field Value string Methods AcceptGame() public EGameSearchErrorCode AcceptGame() Returns EGameSearchErrorCode AddGameSearchParams(string, string) public EGameSearchErrorCode AddGameSearchParams(string keyToFind, string valuesToFind) Parameters keyToFind string valuesToFind string Returns EGameSearchErrorCode CancelRequestPlayersForGame() public EGameSearchErrorCode CancelRequestPlayersForGame() Returns EGameSearchErrorCode DeclineGame() public EGameSearchErrorCode DeclineGame() Returns EGameSearchErrorCode EndGame(ulong) public EGameSearchErrorCode EndGame(ulong uniqueGameID) Parameters uniqueGameID ulong Returns EGameSearchErrorCode EndGameSearch() public EGameSearchErrorCode EndGameSearch() Returns EGameSearchErrorCode HostConfirmGameStart(ulong) public EGameSearchErrorCode HostConfirmGameStart(ulong uniqueGameID) Parameters uniqueGameID ulong Returns EGameSearchErrorCode OnEndGameResultCallback(CallbackAction<EndGameResultCallback>) public IDisposable OnEndGameResultCallback(CallbackAction<EndGameResultCallback> func) Parameters func CallbackAction<EndGameResultCallback> Returns IDisposable OnRequestPlayersForGameFinalResultCallback(CallbackAction<RequestPlayersForGameFinalResultCallback>) public IDisposable OnRequestPlayersForGameFinalResultCallback(CallbackAction<RequestPlayersForGameFinalResultCallback> func) Parameters func CallbackAction<RequestPlayersForGameFinalResultCallback> Returns IDisposable OnRequestPlayersForGameProgressCallback(CallbackAction<RequestPlayersForGameProgressCallback>) public IDisposable OnRequestPlayersForGameProgressCallback(CallbackAction<RequestPlayersForGameProgressCallback> func) Parameters func CallbackAction<RequestPlayersForGameProgressCallback> Returns IDisposable OnRequestPlayersForGameResultCallback(CallbackAction<RequestPlayersForGameResultCallback>) public IDisposable OnRequestPlayersForGameResultCallback(CallbackAction<RequestPlayersForGameResultCallback> func) Parameters func CallbackAction<RequestPlayersForGameResultCallback> Returns IDisposable OnSearchForGameProgressCallback(CallbackAction<SearchForGameProgressCallback>) public IDisposable OnSearchForGameProgressCallback(CallbackAction<SearchForGameProgressCallback> func) Parameters func CallbackAction<SearchForGameProgressCallback> Returns IDisposable OnSearchForGameResultCallback(CallbackAction<SearchForGameResultCallback>) public IDisposable OnSearchForGameResultCallback(CallbackAction<SearchForGameResultCallback> func) Parameters func CallbackAction<SearchForGameResultCallback> Returns IDisposable OnSubmitPlayerResultResultCallback(CallbackAction<SubmitPlayerResultResultCallback>) public IDisposable OnSubmitPlayerResultResultCallback(CallbackAction<SubmitPlayerResultResultCallback> func) Parameters func CallbackAction<SubmitPlayerResultResultCallback> Returns IDisposable RequestPlayersForGame(int, int, int) public EGameSearchErrorCode RequestPlayersForGame(int playerMin, int playerMax, int maxTeamSize) Parameters playerMin int playerMax int maxTeamSize int Returns EGameSearchErrorCode RetrieveConnectionDetails(CSteamID, Span<byte>) public EGameSearchErrorCode RetrieveConnectionDetails(CSteamID steamIDHost, Span<byte> connectionDetails) Parameters steamIDHost CSteamID connectionDetails Span<byte> Returns EGameSearchErrorCode SearchForGameSolo(int, int) public EGameSearchErrorCode SearchForGameSolo(int playerMin, int playerMax) Parameters playerMin int playerMax int Returns EGameSearchErrorCode SearchForGameWithLobby(CSteamID, int, int) public EGameSearchErrorCode SearchForGameWithLobby(CSteamID steamIDLobby, int playerMin, int playerMax) Parameters steamIDLobby CSteamID playerMin int playerMax int Returns EGameSearchErrorCode SetConnectionDetails(string, int) public EGameSearchErrorCode SetConnectionDetails(string connectionDetails, int connectionDetailsCount) Parameters connectionDetails string connectionDetailsCount int Returns EGameSearchErrorCode SetGameHostParams(string, string) public EGameSearchErrorCode SetGameHostParams(string key, string value) Parameters key string value string Returns EGameSearchErrorCode SubmitPlayerResult(ulong, CSteamID, EPlayerResult) public EGameSearchErrorCode SubmitPlayerResult(ulong uniqueGameID, CSteamID steamIDPlayer, EPlayerResult ePlayerResult) Parameters uniqueGameID ulong steamIDPlayer CSteamID ePlayerResult EPlayerResult Returns EGameSearchErrorCode"
  },
  "api/MarymoorStudios.Core.Steamworks.ISteamGameServer.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ISteamGameServer.html",
    "title": "Class ISteamGameServer",
    "summary": "Class ISteamGameServer Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public sealed class ISteamGameServer : SteamNativeObject Inheritance object SteamNativeObject ISteamGameServer Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Fields INTERFACE_VERSION public const string INTERFACE_VERSION = \"SteamGameServer015\" Field Value string Methods AssociateWithClan(CSteamID) public Promise<AssociateWithClanResult> AssociateWithClan(CSteamID steamIDClan) Parameters steamIDClan CSteamID Returns Promise<AssociateWithClanResult> BLoggedOn() public bool BLoggedOn() Returns bool BSecure() public bool BSecure() Returns bool BUpdateUserData(CSteamID, string, uint) public bool BUpdateUserData(CSteamID steamIDUser, string playerName, uint score) Parameters steamIDUser CSteamID playerName string score uint Returns bool BeginAuthSession(ReadOnlySpan<byte>, CSteamID) public EBeginAuthSessionResult BeginAuthSession(ReadOnlySpan<byte> authTicket, CSteamID steamID) Parameters authTicket ReadOnlySpan<byte> steamID CSteamID Returns EBeginAuthSessionResult CancelAuthTicket(HAuthTicket) public void CancelAuthTicket(HAuthTicket authTicket) Parameters authTicket HAuthTicket ClearAllKeyValues() public void ClearAllKeyValues() ComputeNewPlayerCompatibility(CSteamID) public Promise<ComputeNewPlayerCompatibilityResult> ComputeNewPlayerCompatibility(CSteamID steamIDNewPlayer) Parameters steamIDNewPlayer CSteamID Returns Promise<ComputeNewPlayerCompatibilityResult> CreateUnauthenticatedUserConnection() public CSteamID CreateUnauthenticatedUserConnection() Returns CSteamID EndAuthSession(CSteamID) public void EndAuthSession(CSteamID steamID) Parameters steamID CSteamID GetAuthSessionTicket(Span<byte>, out uint, in SteamNetworkingIdentity) public HAuthTicket GetAuthSessionTicket(Span<byte> ticket, out uint ticketCount, in SteamNetworkingIdentity snid) Parameters ticket Span<byte> ticketCount uint snid SteamNetworkingIdentity Returns HAuthTicket GetGameplayStats() public void GetGameplayStats() GetNextOutgoingPacket(Span<byte>, out uint, out ushort) public int GetNextOutgoingPacket(Span<byte> packet, out uint netAdr, out ushort port) Parameters packet Span<byte> netAdr uint port ushort Returns int GetPublicIP() public SteamIPAddress GetPublicIP() Returns SteamIPAddress GetServerReputation() public Promise<GSReputation> GetServerReputation() Returns Promise<GSReputation> GetSteamID() public CSteamID GetSteamID() Returns CSteamID HandleIncomingPacket(ReadOnlySpan<byte>, uint, ushort) public bool HandleIncomingPacket(ReadOnlySpan<byte> data, uint srcIP, ushort srcPort) Parameters data ReadOnlySpan<byte> srcIP uint srcPort ushort Returns bool LogOff() public void LogOff() LogOn(string) public void LogOn(string pszToken) Parameters pszToken string LogOnAnonymous() public void LogOnAnonymous() OnGSClientAchievementStatus(CallbackAction<GSClientAchievementStatus>) public IDisposable OnGSClientAchievementStatus(CallbackAction<GSClientAchievementStatus> func) Parameters func CallbackAction<GSClientAchievementStatus> Returns IDisposable OnGSClientApprove(CallbackAction<GSClientApprove>) public IDisposable OnGSClientApprove(CallbackAction<GSClientApprove> func) Parameters func CallbackAction<GSClientApprove> Returns IDisposable OnGSClientDeny(CallbackAction<GSClientDeny>) public IDisposable OnGSClientDeny(CallbackAction<GSClientDeny> func) Parameters func CallbackAction<GSClientDeny> Returns IDisposable OnGSClientGroupStatus(CallbackAction<GSClientGroupStatus>) public IDisposable OnGSClientGroupStatus(CallbackAction<GSClientGroupStatus> func) Parameters func CallbackAction<GSClientGroupStatus> Returns IDisposable OnGSClientKick(CallbackAction<GSClientKick>) public IDisposable OnGSClientKick(CallbackAction<GSClientKick> func) Parameters func CallbackAction<GSClientKick> Returns IDisposable OnGSGameplayStats(CallbackAction<GSGameplayStats>) public IDisposable OnGSGameplayStats(CallbackAction<GSGameplayStats> func) Parameters func CallbackAction<GSGameplayStats> Returns IDisposable OnSteamServerConnectFailure(CallbackAction<SteamServerConnectFailure>) public IDisposable OnSteamServerConnectFailure(CallbackAction<SteamServerConnectFailure> func) Parameters func CallbackAction<SteamServerConnectFailure> Returns IDisposable OnSteamServersConnected(CallbackAction<SteamServersConnected>) public IDisposable OnSteamServersConnected(CallbackAction<SteamServersConnected> func) Parameters func CallbackAction<SteamServersConnected> Returns IDisposable OnSteamServersDisconnected(CallbackAction<SteamServersDisconnected>) public IDisposable OnSteamServersDisconnected(CallbackAction<SteamServersDisconnected> func) Parameters func CallbackAction<SteamServersDisconnected> Returns IDisposable RequestUserGroupStatus(CSteamID, CSteamID) public bool RequestUserGroupStatus(CSteamID steamIDUser, CSteamID steamIDGroup) Parameters steamIDUser CSteamID steamIDGroup CSteamID Returns bool SendUserConnectAndAuthenticate(uint, ReadOnlySpan<byte>, out CSteamID) [Obsolete] public bool SendUserConnectAndAuthenticate(uint ipClient, ReadOnlySpan<byte> authBlob, out CSteamID steamIDUser) Parameters ipClient uint authBlob ReadOnlySpan<byte> steamIDUser CSteamID Returns bool SendUserDisconnect(CSteamID) [Obsolete] public void SendUserDisconnect(CSteamID steamIDUser) Parameters steamIDUser CSteamID SetAdvertiseServerActive(bool) public void SetAdvertiseServerActive(bool active) Parameters active bool SetBotPlayerCount(int) public void SetBotPlayerCount(int botplayers) Parameters botplayers int SetDedicatedServer(bool) public void SetDedicatedServer(bool dedicated) Parameters dedicated bool SetGameData(string) public void SetGameData(string gameData) Parameters gameData string SetGameDescription(string) public void SetGameDescription(string pszGameDescription) Parameters pszGameDescription string SetGameTags(string) public void SetGameTags(string gameTags) Parameters gameTags string SetKeyValue(string, string) public void SetKeyValue(string key, string value) Parameters key string value string SetMapName(string) public void SetMapName(string pszMapName) Parameters pszMapName string SetMaxPlayerCount(int) public void SetMaxPlayerCount(int playersMax) Parameters playersMax int SetModDir(string) public void SetModDir(string pszModDir) Parameters pszModDir string SetPasswordProtected(bool) public void SetPasswordProtected(bool passwordProtected) Parameters passwordProtected bool SetProduct(string) public void SetProduct(string pszProduct) Parameters pszProduct string SetRegion(string) public void SetRegion(string pszRegion) Parameters pszRegion string SetServerName(string) public void SetServerName(string pszServerName) Parameters pszServerName string SetSpectatorPort(ushort) public void SetSpectatorPort(ushort spectatorPort) Parameters spectatorPort ushort SetSpectatorServerName(string) public void SetSpectatorServerName(string pszSpectatorServerName) Parameters pszSpectatorServerName string UntilLogOn(string?, CancellationToken) Log in to a generic anonymous account. public Promise UntilLogOn(string? token = null, CancellationToken cancel = default) Parameters token string A Game Server account token. If default then log on anonymously. cancel CancellationToken The cancellation token. Returns Promise Resolves ONLY when successfully connected. Remarks This method resolves ONLY when the game server becomes successfully connected. To determine real-time status BLoggedOn() or listen for SteamServersConnected, SteamServerConnectFailure , SteamServersDisconnected callbacks. Typically, log in completes in a few seconds. Game Server account token MUST be preallocated by following the instructions at https://steamcommunity.com/dev/managegameservers. UserHasLicenseForApp(CSteamID, AppId) public EUserHasLicenseForAppResult UserHasLicenseForApp(CSteamID steamID, AppId appId) Parameters steamID CSteamID appId AppId Returns EUserHasLicenseForAppResult WasRestartRequested() public bool WasRestartRequested() Returns bool"
  },
  "api/MarymoorStudios.Core.Steamworks.ISteamGameServerStats.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ISteamGameServerStats.html",
    "title": "Class ISteamGameServerStats",
    "summary": "Class ISteamGameServerStats Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public sealed class ISteamGameServerStats : SteamNativeObject Inheritance object SteamNativeObject ISteamGameServerStats Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Fields INTERFACE_VERSION public const string INTERFACE_VERSION = \"SteamGameServerStats001\" Field Value string Methods ClearUserAchievement(CSteamID, string) public bool ClearUserAchievement(CSteamID steamIDUser, string name) Parameters steamIDUser CSteamID name string Returns bool GetUserAchievement(CSteamID, string, out bool) public bool GetUserAchievement(CSteamID steamIDUser, string name, out bool achieved) Parameters steamIDUser CSteamID name string achieved bool Returns bool GetUserStat(CSteamID, string, out int) public bool GetUserStat(CSteamID steamIDUser, string name, out int data) Parameters steamIDUser CSteamID name string data int Returns bool GetUserStat(CSteamID, string, out float) public bool GetUserStat(CSteamID steamIDUser, string name, out float data) Parameters steamIDUser CSteamID name string data float Returns bool RequestUserStats(CSteamID) public Promise<GSStatsReceived> RequestUserStats(CSteamID steamIDUser) Parameters steamIDUser CSteamID Returns Promise<GSStatsReceived> SetUserAchievement(CSteamID, string) public bool SetUserAchievement(CSteamID steamIDUser, string name) Parameters steamIDUser CSteamID name string Returns bool SetUserStat(CSteamID, string, int) public bool SetUserStat(CSteamID steamIDUser, string name, int data) Parameters steamIDUser CSteamID name string data int Returns bool SetUserStat(CSteamID, string, float) public bool SetUserStat(CSteamID steamIDUser, string name, float data) Parameters steamIDUser CSteamID name string data float Returns bool StoreUserStats(CSteamID) public Promise<GSStatsStored> StoreUserStats(CSteamID steamIDUser) Parameters steamIDUser CSteamID Returns Promise<GSStatsStored> UpdateUserAvgRateStat(CSteamID, string, float, double) public bool UpdateUserAvgRateStat(CSteamID steamIDUser, string name, float countThisSession, double sessionLength) Parameters steamIDUser CSteamID name string countThisSession float sessionLength double Returns bool"
  },
  "api/MarymoorStudios.Core.Steamworks.ISteamHTMLSurface.EHTMLKeyModifiers.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ISteamHTMLSurface.EHTMLKeyModifiers.html",
    "title": "Enum ISteamHTMLSurface.EHTMLKeyModifiers",
    "summary": "Enum ISteamHTMLSurface.EHTMLKeyModifiers Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum ISteamHTMLSurface.EHTMLKeyModifiers Fields None = 0 AltDown = 1 CtrlDown = 2 ShiftDown = 4"
  },
  "api/MarymoorStudios.Core.Steamworks.ISteamHTMLSurface.EHTMLMouseButton.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ISteamHTMLSurface.EHTMLMouseButton.html",
    "title": "Enum ISteamHTMLSurface.EHTMLMouseButton",
    "summary": "Enum ISteamHTMLSurface.EHTMLMouseButton Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum ISteamHTMLSurface.EHTMLMouseButton Fields Left = 0 Right = 1 Middle = 2"
  },
  "api/MarymoorStudios.Core.Steamworks.ISteamHTMLSurface.EHTMLMouseCursor.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ISteamHTMLSurface.EHTMLMouseCursor.html",
    "title": "Enum ISteamHTMLSurface.EHTMLMouseCursor",
    "summary": "Enum ISteamHTMLSurface.EHTMLMouseCursor Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum ISteamHTMLSurface.EHTMLMouseCursor Fields User = 0 None = 1 Arrow = 2 IBeam = 3 Hourglass = 4 WaitArrow = 5 Crosshair = 6 Up = 7 SizeNW = 8 SizeSE = 9 SizeNE = 10 SizeSW = 11 SizeW = 12 SizeE = 13 SizeN = 14 SizeS = 15 SizeWE = 16 SizeNS = 17 SizeAll = 18 No = 19 Hand = 20 Blank = 21 MiddlePan = 22 NorthPan = 23 NorthEastPan = 24 EastPan = 25 SouthEastPan = 26 SouthPan = 27 SouthWestPan = 28 WestPan = 29 NorthWestPan = 30 Alias = 31 Cell = 32 ColResize = 33 CopyCur = 34 VerticalText = 35 RowResize = 36 ZoomIn = 37 ZoomOut = 38 Help = 39 Custom = 40 SizeNWSE = 41 SizeNESW = 42 last = 43"
  },
  "api/MarymoorStudios.Core.Steamworks.ISteamHTMLSurface.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ISteamHTMLSurface.html",
    "title": "Class ISteamHTMLSurface",
    "summary": "Class ISteamHTMLSurface Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public sealed class ISteamHTMLSurface : SteamNativeObject Inheritance object SteamNativeObject ISteamHTMLSurface Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Fields INTERFACE_VERSION public const string INTERFACE_VERSION = \"STEAMHTMLSURFACE_INTERFACE_VERSION_005\" Field Value string Methods AddHeader(HHTMLBrowser, string, string) public void AddHeader(HHTMLBrowser browserHandle, string key, string value) Parameters browserHandle HHTMLBrowser key string value string AllowStartRequest(HHTMLBrowser, bool) public void AllowStartRequest(HHTMLBrowser browserHandle, bool allowed) Parameters browserHandle HHTMLBrowser allowed bool CopyToClipboard(HHTMLBrowser) public void CopyToClipboard(HHTMLBrowser browserHandle) Parameters browserHandle HHTMLBrowser CreateBrowser(string, string) public Promise<HtmlBrowserReady> CreateBrowser(string userAgent, string userCSS) Parameters userAgent string userCSS string Returns Promise<HtmlBrowserReady> ExecuteJavascript(HHTMLBrowser, string) public void ExecuteJavascript(HHTMLBrowser browserHandle, string script) Parameters browserHandle HHTMLBrowser script string FileLoadDialogResponse(HHTMLBrowser, ReadOnlyMemory<string>) public void FileLoadDialogResponse(HHTMLBrowser browserHandle, ReadOnlyMemory<string> selectedFiles) Parameters browserHandle HHTMLBrowser selectedFiles ReadOnlyMemory<string> Find(HHTMLBrowser, string, bool, bool) public void Find(HHTMLBrowser browserHandle, string searchStr, bool currentlyInFind, bool reverse) Parameters browserHandle HHTMLBrowser searchStr string currentlyInFind bool reverse bool GetLinkAtPosition(HHTMLBrowser, int, int) public void GetLinkAtPosition(HHTMLBrowser browserHandle, int x, int y) Parameters browserHandle HHTMLBrowser x int y int GoBack(HHTMLBrowser) public void GoBack(HHTMLBrowser browserHandle) Parameters browserHandle HHTMLBrowser GoForward(HHTMLBrowser) public void GoForward(HHTMLBrowser browserHandle) Parameters browserHandle HHTMLBrowser Init() public bool Init() Returns bool JSDialogResponse(HHTMLBrowser, bool) public void JSDialogResponse(HHTMLBrowser browserHandle, bool result) Parameters browserHandle HHTMLBrowser result bool KeyChar(HHTMLBrowser, uint, EHTMLKeyModifiers) public void KeyChar(HHTMLBrowser browserHandle, uint unicodeChar, ISteamHTMLSurface.EHTMLKeyModifiers htmlKeyModifiers) Parameters browserHandle HHTMLBrowser unicodeChar uint htmlKeyModifiers ISteamHTMLSurface.EHTMLKeyModifiers KeyDown(HHTMLBrowser, uint, EHTMLKeyModifiers, bool) public void KeyDown(HHTMLBrowser browserHandle, uint nativeKeyCode, ISteamHTMLSurface.EHTMLKeyModifiers htmlKeyModifiers, bool isSystemKey) Parameters browserHandle HHTMLBrowser nativeKeyCode uint htmlKeyModifiers ISteamHTMLSurface.EHTMLKeyModifiers isSystemKey bool KeyUp(HHTMLBrowser, uint, EHTMLKeyModifiers) public void KeyUp(HHTMLBrowser browserHandle, uint nativeKeyCode, ISteamHTMLSurface.EHTMLKeyModifiers htmlKeyModifiers) Parameters browserHandle HHTMLBrowser nativeKeyCode uint htmlKeyModifiers ISteamHTMLSurface.EHTMLKeyModifiers LoadURL(HHTMLBrowser, string, string) public void LoadURL(HHTMLBrowser browserHandle, string url, string postData) Parameters browserHandle HHTMLBrowser url string postData string MouseDoubleClick(HHTMLBrowser, EHTMLMouseButton) public void MouseDoubleClick(HHTMLBrowser browserHandle, ISteamHTMLSurface.EHTMLMouseButton mouseButton) Parameters browserHandle HHTMLBrowser mouseButton ISteamHTMLSurface.EHTMLMouseButton MouseDown(HHTMLBrowser, EHTMLMouseButton) public void MouseDown(HHTMLBrowser browserHandle, ISteamHTMLSurface.EHTMLMouseButton mouseButton) Parameters browserHandle HHTMLBrowser mouseButton ISteamHTMLSurface.EHTMLMouseButton MouseMove(HHTMLBrowser, int, int) public void MouseMove(HHTMLBrowser browserHandle, int x, int y) Parameters browserHandle HHTMLBrowser x int y int MouseUp(HHTMLBrowser, EHTMLMouseButton) public void MouseUp(HHTMLBrowser browserHandle, ISteamHTMLSurface.EHTMLMouseButton mouseButton) Parameters browserHandle HHTMLBrowser mouseButton ISteamHTMLSurface.EHTMLMouseButton MouseWheel(HHTMLBrowser, int) public void MouseWheel(HHTMLBrowser browserHandle, int delta) Parameters browserHandle HHTMLBrowser delta int OnHtmlBrowserRestarted(CallbackAction<HtmlBrowserRestarted>) public IDisposable OnHtmlBrowserRestarted(CallbackAction<HtmlBrowserRestarted> func) Parameters func CallbackAction<HtmlBrowserRestarted> Returns IDisposable OnHtmlCanGoBackAndForward(CallbackAction<HtmlCanGoBackAndForward>) public IDisposable OnHtmlCanGoBackAndForward(CallbackAction<HtmlCanGoBackAndForward> func) Parameters func CallbackAction<HtmlCanGoBackAndForward> Returns IDisposable OnHtmlChangedTitle(CallbackAction<HtmlChangedTitle>) public IDisposable OnHtmlChangedTitle(CallbackAction<HtmlChangedTitle> func) Parameters func CallbackAction<HtmlChangedTitle> Returns IDisposable OnHtmlCloseBrowser(CallbackAction<HtmlCloseBrowser>) public IDisposable OnHtmlCloseBrowser(CallbackAction<HtmlCloseBrowser> func) Parameters func CallbackAction<HtmlCloseBrowser> Returns IDisposable OnHtmlFileOpenDialog(CallbackAction<HtmlFileOpenDialog>) public IDisposable OnHtmlFileOpenDialog(CallbackAction<HtmlFileOpenDialog> func) Parameters func CallbackAction<HtmlFileOpenDialog> Returns IDisposable OnHtmlFinishedRequest(CallbackAction<HtmlFinishedRequest>) public IDisposable OnHtmlFinishedRequest(CallbackAction<HtmlFinishedRequest> func) Parameters func CallbackAction<HtmlFinishedRequest> Returns IDisposable OnHtmlHideToolTip(CallbackAction<HtmlHideToolTip>) public IDisposable OnHtmlHideToolTip(CallbackAction<HtmlHideToolTip> func) Parameters func CallbackAction<HtmlHideToolTip> Returns IDisposable OnHtmlHorizontalScroll(CallbackAction<HtmlHorizontalScroll>) public IDisposable OnHtmlHorizontalScroll(CallbackAction<HtmlHorizontalScroll> func) Parameters func CallbackAction<HtmlHorizontalScroll> Returns IDisposable OnHtmlJSAlert(CallbackAction<HtmlJSAlert>) public IDisposable OnHtmlJSAlert(CallbackAction<HtmlJSAlert> func) Parameters func CallbackAction<HtmlJSAlert> Returns IDisposable OnHtmlJSConfirm(CallbackAction<HtmlJSConfirm>) public IDisposable OnHtmlJSConfirm(CallbackAction<HtmlJSConfirm> func) Parameters func CallbackAction<HtmlJSConfirm> Returns IDisposable OnHtmlLinkAtPosition(CallbackAction<HtmlLinkAtPosition>) public IDisposable OnHtmlLinkAtPosition(CallbackAction<HtmlLinkAtPosition> func) Parameters func CallbackAction<HtmlLinkAtPosition> Returns IDisposable OnHtmlNeedsPaint(CallbackAction<HtmlNeedsPaint>) public IDisposable OnHtmlNeedsPaint(CallbackAction<HtmlNeedsPaint> func) Parameters func CallbackAction<HtmlNeedsPaint> Returns IDisposable OnHtmlNewWindow(CallbackAction<HtmlNewWindow>) public IDisposable OnHtmlNewWindow(CallbackAction<HtmlNewWindow> func) Parameters func CallbackAction<HtmlNewWindow> Returns IDisposable OnHtmlOpenLinkInNewTab(CallbackAction<HtmlOpenLinkInNewTab>) public IDisposable OnHtmlOpenLinkInNewTab(CallbackAction<HtmlOpenLinkInNewTab> func) Parameters func CallbackAction<HtmlOpenLinkInNewTab> Returns IDisposable OnHtmlSearchResults(CallbackAction<HtmlSearchResults>) public IDisposable OnHtmlSearchResults(CallbackAction<HtmlSearchResults> func) Parameters func CallbackAction<HtmlSearchResults> Returns IDisposable OnHtmlSetCursor(CallbackAction<HtmlSetCursor>) public IDisposable OnHtmlSetCursor(CallbackAction<HtmlSetCursor> func) Parameters func CallbackAction<HtmlSetCursor> Returns IDisposable OnHtmlShowToolTip(CallbackAction<HtmlShowToolTip>) public IDisposable OnHtmlShowToolTip(CallbackAction<HtmlShowToolTip> func) Parameters func CallbackAction<HtmlShowToolTip> Returns IDisposable OnHtmlStartRequest(CallbackAction<HtmlStartRequest>) public IDisposable OnHtmlStartRequest(CallbackAction<HtmlStartRequest> func) Parameters func CallbackAction<HtmlStartRequest> Returns IDisposable OnHtmlStatusText(CallbackAction<HtmlStatusText>) public IDisposable OnHtmlStatusText(CallbackAction<HtmlStatusText> func) Parameters func CallbackAction<HtmlStatusText> Returns IDisposable OnHtmlURLChanged(CallbackAction<HtmlURLChanged>) public IDisposable OnHtmlURLChanged(CallbackAction<HtmlURLChanged> func) Parameters func CallbackAction<HtmlURLChanged> Returns IDisposable OnHtmlUpdateToolTip(CallbackAction<HtmlUpdateToolTip>) public IDisposable OnHtmlUpdateToolTip(CallbackAction<HtmlUpdateToolTip> func) Parameters func CallbackAction<HtmlUpdateToolTip> Returns IDisposable OnHtmlVerticalScroll(CallbackAction<HtmlVerticalScroll>) public IDisposable OnHtmlVerticalScroll(CallbackAction<HtmlVerticalScroll> func) Parameters func CallbackAction<HtmlVerticalScroll> Returns IDisposable OpenDeveloperTools(HHTMLBrowser) public void OpenDeveloperTools(HHTMLBrowser browserHandle) Parameters browserHandle HHTMLBrowser PasteFromClipboard(HHTMLBrowser) public void PasteFromClipboard(HHTMLBrowser browserHandle) Parameters browserHandle HHTMLBrowser Reload(HHTMLBrowser) public void Reload(HHTMLBrowser browserHandle) Parameters browserHandle HHTMLBrowser RemoveBrowser(HHTMLBrowser) public void RemoveBrowser(HHTMLBrowser browserHandle) Parameters browserHandle HHTMLBrowser SetBackgroundMode(HHTMLBrowser, bool) public void SetBackgroundMode(HHTMLBrowser browserHandle, bool backgroundMode) Parameters browserHandle HHTMLBrowser backgroundMode bool SetCookie(string, string, string, string, RTime32, bool, bool) public void SetCookie(string hostname, string key, string value, string path, RTime32 expires, bool secure, bool httpOnly) Parameters hostname string key string value string path string expires RTime32 secure bool httpOnly bool SetDPIScalingFactor(HHTMLBrowser, float) public void SetDPIScalingFactor(HHTMLBrowser browserHandle, float dpiScaling) Parameters browserHandle HHTMLBrowser dpiScaling float SetHorizontalScroll(HHTMLBrowser, uint) public void SetHorizontalScroll(HHTMLBrowser browserHandle, uint absolutePixelScroll) Parameters browserHandle HHTMLBrowser absolutePixelScroll uint SetKeyFocus(HHTMLBrowser, bool) public void SetKeyFocus(HHTMLBrowser browserHandle, bool hasKeyFocus) Parameters browserHandle HHTMLBrowser hasKeyFocus bool SetPageScaleFactor(HHTMLBrowser, float, int, int) public void SetPageScaleFactor(HHTMLBrowser browserHandle, float zoom, int pointX, int pointY) Parameters browserHandle HHTMLBrowser zoom float pointX int pointY int SetSize(HHTMLBrowser, uint, uint) public void SetSize(HHTMLBrowser browserHandle, uint width, uint height) Parameters browserHandle HHTMLBrowser width uint height uint SetVerticalScroll(HHTMLBrowser, uint) public void SetVerticalScroll(HHTMLBrowser browserHandle, uint absolutePixelScroll) Parameters browserHandle HHTMLBrowser absolutePixelScroll uint Shutdown() public bool Shutdown() Returns bool StopFind(HHTMLBrowser) public void StopFind(HHTMLBrowser browserHandle) Parameters browserHandle HHTMLBrowser StopLoad(HHTMLBrowser) public void StopLoad(HHTMLBrowser browserHandle) Parameters browserHandle HHTMLBrowser ViewSource(HHTMLBrowser) public void ViewSource(HHTMLBrowser browserHandle) Parameters browserHandle HHTMLBrowser"
  },
  "api/MarymoorStudios.Core.Steamworks.ISteamHTTP.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ISteamHTTP.html",
    "title": "Class ISteamHTTP",
    "summary": "Class ISteamHTTP Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public sealed class ISteamHTTP : SteamNativeObject Inheritance object SteamNativeObject ISteamHTTP Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Fields INTERFACE_VERSION public const string INTERFACE_VERSION = \"STEAMHTTP_INTERFACE_VERSION003\" Field Value string Methods CreateCookieContainer(bool) public HTTPCookieContainerHandle CreateCookieContainer(bool allowResponsesToModify) Parameters allowResponsesToModify bool Returns HTTPCookieContainerHandle CreateHTTPRequest(EHTTPMethod, string) public HTTPRequestHandle CreateHTTPRequest(EHTTPMethod httpRequestMethod, string absoluteURL) Parameters httpRequestMethod EHTTPMethod absoluteURL string Returns HTTPRequestHandle DeferHTTPRequest(HTTPRequestHandle) public bool DeferHTTPRequest(HTTPRequestHandle request) Parameters request HTTPRequestHandle Returns bool GetHTTPDownloadProgressPct(HTTPRequestHandle, out float) public bool GetHTTPDownloadProgressPct(HTTPRequestHandle request, out float percentOut) Parameters request HTTPRequestHandle percentOut float Returns bool GetHTTPRequestWasTimedOut(HTTPRequestHandle, out bool) public bool GetHTTPRequestWasTimedOut(HTTPRequestHandle request, out bool wasTimedOut) Parameters request HTTPRequestHandle wasTimedOut bool Returns bool GetHTTPResponseBodyData(HTTPRequestHandle, Span<byte>) public bool GetHTTPResponseBodyData(HTTPRequestHandle request, Span<byte> bodyDataBuffer) Parameters request HTTPRequestHandle bodyDataBuffer Span<byte> Returns bool GetHTTPResponseBodySize(HTTPRequestHandle, out uint) public bool GetHTTPResponseBodySize(HTTPRequestHandle request, out uint bodySize) Parameters request HTTPRequestHandle bodySize uint Returns bool GetHTTPResponseHeaderSize(HTTPRequestHandle, string, out uint) public bool GetHTTPResponseHeaderSize(HTTPRequestHandle request, string headerName, out uint responseHeaderSize) Parameters request HTTPRequestHandle headerName string responseHeaderSize uint Returns bool GetHTTPResponseHeaderValue(HTTPRequestHandle, string, Span<byte>) public bool GetHTTPResponseHeaderValue(HTTPRequestHandle request, string headerName, Span<byte> headerValueBuffer) Parameters request HTTPRequestHandle headerName string headerValueBuffer Span<byte> Returns bool GetHTTPStreamingResponseBodyData(HTTPRequestHandle, uint, Span<byte>) public bool GetHTTPStreamingResponseBodyData(HTTPRequestHandle request, uint offset, Span<byte> bodyDataBuffer) Parameters request HTTPRequestHandle offset uint bodyDataBuffer Span<byte> Returns bool OnHTTPRequestCompleted(CallbackAction<HTTPRequestCompleted>) public IDisposable OnHTTPRequestCompleted(CallbackAction<HTTPRequestCompleted> func) Parameters func CallbackAction<HTTPRequestCompleted> Returns IDisposable OnHTTPRequestDataReceived(CallbackAction<HTTPRequestDataReceived>) public IDisposable OnHTTPRequestDataReceived(CallbackAction<HTTPRequestDataReceived> func) Parameters func CallbackAction<HTTPRequestDataReceived> Returns IDisposable OnHTTPRequestHeadersReceived(CallbackAction<HTTPRequestHeadersReceived>) public IDisposable OnHTTPRequestHeadersReceived(CallbackAction<HTTPRequestHeadersReceived> func) Parameters func CallbackAction<HTTPRequestHeadersReceived> Returns IDisposable PrioritizeHTTPRequest(HTTPRequestHandle) public bool PrioritizeHTTPRequest(HTTPRequestHandle request) Parameters request HTTPRequestHandle Returns bool ReleaseCookieContainer(HTTPCookieContainerHandle) public bool ReleaseCookieContainer(HTTPCookieContainerHandle cookieContainer) Parameters cookieContainer HTTPCookieContainerHandle Returns bool ReleaseHTTPRequest(HTTPRequestHandle) public bool ReleaseHTTPRequest(HTTPRequestHandle request) Parameters request HTTPRequestHandle Returns bool SendHTTPRequest(HTTPRequestHandle, out SteamAPICall) public bool SendHTTPRequest(HTTPRequestHandle request, out SteamAPICall callHandle) Parameters request HTTPRequestHandle callHandle SteamAPICall Returns bool SendHTTPRequestAndStreamResponse(HTTPRequestHandle, out SteamAPICall) public bool SendHTTPRequestAndStreamResponse(HTTPRequestHandle request, out SteamAPICall callHandle) Parameters request HTTPRequestHandle callHandle SteamAPICall Returns bool SetCookie(HTTPCookieContainerHandle, string, string, string) public bool SetCookie(HTTPCookieContainerHandle cookieContainer, string host, string url, string cookie) Parameters cookieContainer HTTPCookieContainerHandle host string url string cookie string Returns bool SetHTTPRequestAbsoluteTimeoutMS(HTTPRequestHandle, uint) public bool SetHTTPRequestAbsoluteTimeoutMS(HTTPRequestHandle request, uint milliseconds) Parameters request HTTPRequestHandle milliseconds uint Returns bool SetHTTPRequestContextValue(HTTPRequestHandle, ulong) public bool SetHTTPRequestContextValue(HTTPRequestHandle request, ulong contextValue) Parameters request HTTPRequestHandle contextValue ulong Returns bool SetHTTPRequestCookieContainer(HTTPRequestHandle, HTTPCookieContainerHandle) public bool SetHTTPRequestCookieContainer(HTTPRequestHandle request, HTTPCookieContainerHandle cookieContainer) Parameters request HTTPRequestHandle cookieContainer HTTPCookieContainerHandle Returns bool SetHTTPRequestGetOrPostParameter(HTTPRequestHandle, string, string) public bool SetHTTPRequestGetOrPostParameter(HTTPRequestHandle request, string paramName, string paramValue) Parameters request HTTPRequestHandle paramName string paramValue string Returns bool SetHTTPRequestHeaderValue(HTTPRequestHandle, string, string) public bool SetHTTPRequestHeaderValue(HTTPRequestHandle request, string headerName, string headerValue) Parameters request HTTPRequestHandle headerName string headerValue string Returns bool SetHTTPRequestNetworkActivityTimeout(HTTPRequestHandle, uint) public bool SetHTTPRequestNetworkActivityTimeout(HTTPRequestHandle request, uint timeoutSeconds) Parameters request HTTPRequestHandle timeoutSeconds uint Returns bool SetHTTPRequestRawPostBody(HTTPRequestHandle, string, Span<byte>) public bool SetHTTPRequestRawPostBody(HTTPRequestHandle request, string contentType, Span<byte> body) Parameters request HTTPRequestHandle contentType string body Span<byte> Returns bool SetHTTPRequestRequiresVerifiedCertificate(HTTPRequestHandle, bool) public bool SetHTTPRequestRequiresVerifiedCertificate(HTTPRequestHandle request, bool requireVerifiedCertificate) Parameters request HTTPRequestHandle requireVerifiedCertificate bool Returns bool SetHTTPRequestUserAgentInfo(HTTPRequestHandle, string) public bool SetHTTPRequestUserAgentInfo(HTTPRequestHandle request, string userAgentInfo) Parameters request HTTPRequestHandle userAgentInfo string Returns bool"
  },
  "api/MarymoorStudios.Core.Steamworks.ISteamInput.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ISteamInput.html",
    "title": "Class ISteamInput",
    "summary": "Class ISteamInput Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public sealed class ISteamInput : SteamNativeObject Inheritance object SteamNativeObject ISteamInput Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Fields INTERFACE_VERSION public const string INTERFACE_VERSION = \"SteamInput006\" Field Value string Methods ActivateActionSet(InputHandle, InputActionSetHandle) public void ActivateActionSet(InputHandle inputHandle, InputActionSetHandle actionSetHandle) Parameters inputHandle InputHandle actionSetHandle InputActionSetHandle ActivateActionSetLayer(InputHandle, InputActionSetHandle) public void ActivateActionSetLayer(InputHandle inputHandle, InputActionSetHandle actionSetLayerHandle) Parameters inputHandle InputHandle actionSetLayerHandle InputActionSetHandle BNewDataAvailable() public bool BNewDataAvailable() Returns bool BWaitForData(bool, uint) public bool BWaitForData(bool waitForever, uint timeout) Parameters waitForever bool timeout uint Returns bool DeactivateActionSetLayer(InputHandle, InputActionSetHandle) public void DeactivateActionSetLayer(InputHandle inputHandle, InputActionSetHandle actionSetLayerHandle) Parameters inputHandle InputHandle actionSetLayerHandle InputActionSetHandle DeactivateAllActionSetLayers(InputHandle) public void DeactivateAllActionSetLayers(InputHandle inputHandle) Parameters inputHandle InputHandle EnableActionEventCallbacks(SteamEventAction<SteamInputActionEvent>) public IDisposable EnableActionEventCallbacks(SteamEventAction<SteamInputActionEvent> callback) Parameters callback SteamEventAction<SteamInputActionEvent> Returns IDisposable EnableDeviceCallbacks() public void EnableDeviceCallbacks() GetActionOriginFromXboxOrigin(InputHandle, EXboxOrigin) public EInputActionOrigin GetActionOriginFromXboxOrigin(InputHandle inputHandle, EXboxOrigin origin) Parameters inputHandle InputHandle origin EXboxOrigin Returns EInputActionOrigin GetActionSetHandle(string) public InputActionSetHandle GetActionSetHandle(string pszActionSetName) Parameters pszActionSetName string Returns InputActionSetHandle GetActiveActionSetLayers(InputHandle, Span<InputActionSetHandle>) public int GetActiveActionSetLayers(InputHandle inputHandle, Span<InputActionSetHandle> handlesOut) Parameters inputHandle InputHandle handlesOut Span<InputActionSetHandle> Returns int GetAnalogActionData(InputHandle, InputAnalogActionHandle) public InputAnalogActionData GetAnalogActionData(InputHandle inputHandle, InputAnalogActionHandle analogActionHandle) Parameters inputHandle InputHandle analogActionHandle InputAnalogActionHandle Returns InputAnalogActionData GetAnalogActionHandle(string) public InputAnalogActionHandle GetAnalogActionHandle(string pszActionName) Parameters pszActionName string Returns InputAnalogActionHandle GetAnalogActionOrigins(InputHandle, InputActionSetHandle, InputAnalogActionHandle, Span<EInputActionOrigin>) public int GetAnalogActionOrigins(InputHandle inputHandle, InputActionSetHandle actionSetHandle, InputAnalogActionHandle analogActionHandle, Span<EInputActionOrigin> originsOut) Parameters inputHandle InputHandle actionSetHandle InputActionSetHandle analogActionHandle InputAnalogActionHandle originsOut Span<EInputActionOrigin> Returns int GetConnectedControllers(Span<InputHandle>) public int GetConnectedControllers(Span<InputHandle> handlesOut) Parameters handlesOut Span<InputHandle> Returns int GetControllerForGamepadIndex(int) public InputHandle GetControllerForGamepadIndex(int index) Parameters index int Returns InputHandle GetCurrentActionSet(InputHandle) public InputActionSetHandle GetCurrentActionSet(InputHandle inputHandle) Parameters inputHandle InputHandle Returns InputActionSetHandle GetDeviceBindingRevision(InputHandle, out int, out int) public bool GetDeviceBindingRevision(InputHandle inputHandle, out int major, out int minor) Parameters inputHandle InputHandle major int minor int Returns bool GetDigitalActionData(InputHandle, InputDigitalActionHandle) public InputDigitalActionData GetDigitalActionData(InputHandle inputHandle, InputDigitalActionHandle digitalActionHandle) Parameters inputHandle InputHandle digitalActionHandle InputDigitalActionHandle Returns InputDigitalActionData GetDigitalActionHandle(string) public InputDigitalActionHandle GetDigitalActionHandle(string pszActionName) Parameters pszActionName string Returns InputDigitalActionHandle GetDigitalActionOrigins(InputHandle, InputActionSetHandle, InputDigitalActionHandle, Span<EInputActionOrigin>) public int GetDigitalActionOrigins(InputHandle inputHandle, InputActionSetHandle actionSetHandle, InputDigitalActionHandle digitalActionHandle, Span<EInputActionOrigin> originsOut) Parameters inputHandle InputHandle actionSetHandle InputActionSetHandle digitalActionHandle InputDigitalActionHandle originsOut Span<EInputActionOrigin> Returns int GetGamepadIndexForController(InputHandle) public int GetGamepadIndexForController(InputHandle ulinputHandle) Parameters ulinputHandle InputHandle Returns int GetGlyphForActionOrigin_Legacy(EInputActionOrigin) public string GetGlyphForActionOrigin_Legacy(EInputActionOrigin origin) Parameters origin EInputActionOrigin Returns string GetGlyphForXboxOrigin(EXboxOrigin) public string GetGlyphForXboxOrigin(EXboxOrigin origin) Parameters origin EXboxOrigin Returns string GetGlyphPNGForActionOrigin(EInputActionOrigin, ESteamInputGlyphSize, uint) public string GetGlyphPNGForActionOrigin(EInputActionOrigin origin, ESteamInputGlyphSize size, uint flags) Parameters origin EInputActionOrigin size ESteamInputGlyphSize flags uint Returns string GetGlyphSVGForActionOrigin(EInputActionOrigin, uint) public string GetGlyphSVGForActionOrigin(EInputActionOrigin origin, uint flags) Parameters origin EInputActionOrigin flags uint Returns string GetInputTypeForHandle(InputHandle) public ESteamInputType GetInputTypeForHandle(InputHandle inputHandle) Parameters inputHandle InputHandle Returns ESteamInputType GetMotionData(InputHandle) public InputMotionData GetMotionData(InputHandle inputHandle) Parameters inputHandle InputHandle Returns InputMotionData GetRemotePlaySessionID(InputHandle) public uint GetRemotePlaySessionID(InputHandle inputHandle) Parameters inputHandle InputHandle Returns uint GetSessionInputConfigurationSettings() public ushort GetSessionInputConfigurationSettings() Returns ushort GetStringForActionOrigin(EInputActionOrigin) public string GetStringForActionOrigin(EInputActionOrigin origin) Parameters origin EInputActionOrigin Returns string GetStringForAnalogActionName(InputAnalogActionHandle) public string GetStringForAnalogActionName(InputAnalogActionHandle actionHandle) Parameters actionHandle InputAnalogActionHandle Returns string GetStringForDigitalActionName(InputDigitalActionHandle) public string GetStringForDigitalActionName(InputDigitalActionHandle actionHandle) Parameters actionHandle InputDigitalActionHandle Returns string GetStringForXboxOrigin(EXboxOrigin) public string GetStringForXboxOrigin(EXboxOrigin origin) Parameters origin EXboxOrigin Returns string Init(bool) public bool Init(bool explicitlyCallRunFrame) Parameters explicitlyCallRunFrame bool Returns bool Legacy_TriggerHapticPulse(InputHandle, ESteamControllerPad, ushort) public void Legacy_TriggerHapticPulse(InputHandle inputHandle, ESteamControllerPad targetPad, ushort durationMicroSec) Parameters inputHandle InputHandle targetPad ESteamControllerPad durationMicroSec ushort Legacy_TriggerRepeatedHapticPulse(InputHandle, ESteamControllerPad, ushort, ushort, ushort, uint) public void Legacy_TriggerRepeatedHapticPulse(InputHandle inputHandle, ESteamControllerPad targetPad, ushort durationMicroSec, ushort offMicroSec, ushort repeat, uint flags) Parameters inputHandle InputHandle targetPad ESteamControllerPad durationMicroSec ushort offMicroSec ushort repeat ushort flags uint RunFrame(bool) public void RunFrame(bool reservedValue) Parameters reservedValue bool SetDualSenseTriggerEffect(InputHandle, in ScePadTriggerEffectParam) public void SetDualSenseTriggerEffect(InputHandle inputHandle, in ScePadTriggerEffectParam param) Parameters inputHandle InputHandle param ScePadTriggerEffectParam SetInputActionManifestFilePath(string) public bool SetInputActionManifestFilePath(string inputActionManifestAbsolutePath) Parameters inputActionManifestAbsolutePath string Returns bool SetLEDColor(InputHandle, byte, byte, byte, uint) public void SetLEDColor(InputHandle inputHandle, byte colorR, byte colorG, byte colorB, uint flags) Parameters inputHandle InputHandle colorR byte colorG byte colorB byte flags uint ShowBindingPanel(InputHandle) public bool ShowBindingPanel(InputHandle inputHandle) Parameters inputHandle InputHandle Returns bool Shutdown() public bool Shutdown() Returns bool StopAnalogActionMomentum(InputHandle, InputAnalogActionHandle) public void StopAnalogActionMomentum(InputHandle inputHandle, InputAnalogActionHandle action) Parameters inputHandle InputHandle action InputAnalogActionHandle TranslateActionOrigin(ESteamInputType, EInputActionOrigin) public EInputActionOrigin TranslateActionOrigin(ESteamInputType destinationInputType, EInputActionOrigin sourceOrigin) Parameters destinationInputType ESteamInputType sourceOrigin EInputActionOrigin Returns EInputActionOrigin TriggerSimpleHapticEvent(InputHandle, EControllerHapticLocation, byte, sbyte, byte, sbyte) public void TriggerSimpleHapticEvent(InputHandle inputHandle, EControllerHapticLocation hapticLocation, byte intensity, sbyte gainDB, byte otherIntensity, sbyte otherGainDB) Parameters inputHandle InputHandle hapticLocation EControllerHapticLocation intensity byte gainDB sbyte otherIntensity byte otherGainDB sbyte TriggerVibration(InputHandle, ushort, ushort) public void TriggerVibration(InputHandle inputHandle, ushort leftSpeed, ushort rightSpeed) Parameters inputHandle InputHandle leftSpeed ushort rightSpeed ushort TriggerVibrationExtended(InputHandle, ushort, ushort, ushort, ushort) public void TriggerVibrationExtended(InputHandle inputHandle, ushort leftSpeed, ushort rightSpeed, ushort leftTriggerSpeed, ushort rightTriggerSpeed) Parameters inputHandle InputHandle leftSpeed ushort rightSpeed ushort leftTriggerSpeed ushort rightTriggerSpeed ushort"
  },
  "api/MarymoorStudios.Core.Steamworks.ISteamInventory.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ISteamInventory.html",
    "title": "Class ISteamInventory",
    "summary": "Class ISteamInventory Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public sealed class ISteamInventory : SteamNativeObject Inheritance object SteamNativeObject ISteamInventory Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Fields INTERFACE_VERSION public const string INTERFACE_VERSION = \"STEAMINVENTORY_INTERFACE_V003\" Field Value string Methods AddPromoItem(out SteamInventoryResult, SteamItemDef) public bool AddPromoItem(out SteamInventoryResult resultHandle, SteamItemDef itemDef) Parameters resultHandle SteamInventoryResult itemDef SteamItemDef Returns bool AddPromoItems(out SteamInventoryResult, ReadOnlySpan<SteamItemDef>) public bool AddPromoItems(out SteamInventoryResult resultHandle, ReadOnlySpan<SteamItemDef> arrayItemDefs) Parameters resultHandle SteamInventoryResult arrayItemDefs ReadOnlySpan<SteamItemDef> Returns bool CheckResultSteamID(SteamInventoryResult, CSteamID) public bool CheckResultSteamID(SteamInventoryResult resultHandle, CSteamID steamIDExpected) Parameters resultHandle SteamInventoryResult steamIDExpected CSteamID Returns bool ConsumeItem(out SteamInventoryResult, SteamItemInstanceID, uint) public bool ConsumeItem(out SteamInventoryResult resultHandle, SteamItemInstanceID itemConsume, uint quantity) Parameters resultHandle SteamInventoryResult itemConsume SteamItemInstanceID quantity uint Returns bool DeserializeResult(out SteamInventoryResult, ReadOnlySpan<byte>, bool) public bool DeserializeResult(out SteamInventoryResult outResultHandle, ReadOnlySpan<byte> buffer, bool rESERVED_MUST_BE_FALSE) Parameters outResultHandle SteamInventoryResult buffer ReadOnlySpan<byte> rESERVED_MUST_BE_FALSE bool Returns bool DestroyResult(SteamInventoryResult) public void DestroyResult(SteamInventoryResult resultHandle) Parameters resultHandle SteamInventoryResult ExchangeItems(out SteamInventoryResult, ReadOnlySpan<SteamItemDef>, ReadOnlySpan<uint>, ReadOnlySpan<SteamItemInstanceID>, ReadOnlySpan<uint>) public bool ExchangeItems(out SteamInventoryResult resultHandle, ReadOnlySpan<SteamItemDef> arrayGenerate, ReadOnlySpan<uint> arrayGenerateQuantity, ReadOnlySpan<SteamItemInstanceID> arrayDestroy, ReadOnlySpan<uint> arrayDestroyQuantity) Parameters resultHandle SteamInventoryResult arrayGenerate ReadOnlySpan<SteamItemDef> arrayGenerateQuantity ReadOnlySpan<uint> arrayDestroy ReadOnlySpan<SteamItemInstanceID> arrayDestroyQuantity ReadOnlySpan<uint> Returns bool GenerateItems(out SteamInventoryResult, ReadOnlySpan<SteamItemDef>, ReadOnlySpan<uint>) public bool GenerateItems(out SteamInventoryResult resultHandle, ReadOnlySpan<SteamItemDef> arrayItemDefs, ReadOnlySpan<uint> arrayQuantity) Parameters resultHandle SteamInventoryResult arrayItemDefs ReadOnlySpan<SteamItemDef> arrayQuantity ReadOnlySpan<uint> Returns bool GetAllItems(out SteamInventoryResult) public bool GetAllItems(out SteamInventoryResult resultHandle) Parameters resultHandle SteamInventoryResult Returns bool GetEligiblePromoItemDefinitionIDs(CSteamID, Span<SteamItemDef>, out uint) public bool GetEligiblePromoItemDefinitionIDs(CSteamID steamID, Span<SteamItemDef> itemDefIDs, out uint itemDefIDsArraySize) Parameters steamID CSteamID itemDefIDs Span<SteamItemDef> itemDefIDsArraySize uint Returns bool GetItemDefinitionIDs(Span<SteamItemDef>, out uint) public bool GetItemDefinitionIDs(Span<SteamItemDef> itemDefIDs, out uint itemDefIDsArraySize) Parameters itemDefIDs Span<SteamItemDef> itemDefIDsArraySize uint Returns bool GetItemDefinitionProperty(SteamItemDef, string, Span<byte>, out uint) public bool GetItemDefinitionProperty(SteamItemDef definition, string propertyName, Span<byte> valueBuffer, out uint valueBufferSizeOut) Parameters definition SteamItemDef propertyName string valueBuffer Span<byte> valueBufferSizeOut uint Returns bool GetItemPrice(SteamItemDef, out ulong, out ulong) public bool GetItemPrice(SteamItemDef definition, out ulong currentPrice, out ulong basePrice) Parameters definition SteamItemDef currentPrice ulong basePrice ulong Returns bool GetItemsByID(out SteamInventoryResult, ReadOnlySpan<SteamItemInstanceID>) public bool GetItemsByID(out SteamInventoryResult resultHandle, ReadOnlySpan<SteamItemInstanceID> instanceIDs) Parameters resultHandle SteamInventoryResult instanceIDs ReadOnlySpan<SteamItemInstanceID> Returns bool GetItemsWithPrices(Span<SteamItemDef>, Span<ulong>, Span<ulong>) public bool GetItemsWithPrices(Span<SteamItemDef> arrayItemDefs, Span<ulong> currentPrices, Span<ulong> basePrices) Parameters arrayItemDefs Span<SteamItemDef> currentPrices Span<ulong> basePrices Span<ulong> Returns bool GetNumItemsWithPrices() public uint GetNumItemsWithPrices() Returns uint GetResultItemProperty(SteamInventoryResult, uint, string, Span<byte>, out uint) public bool GetResultItemProperty(SteamInventoryResult resultHandle, uint itemIndex, string propertyName, Span<byte> valueBuffer, out uint valueBufferSizeOut) Parameters resultHandle SteamInventoryResult itemIndex uint propertyName string valueBuffer Span<byte> valueBufferSizeOut uint Returns bool GetResultItems(SteamInventoryResult, Span<SteamItemDetails>, out uint) public bool GetResultItems(SteamInventoryResult resultHandle, Span<SteamItemDetails> outItemsArray, out uint outItemsArraySize) Parameters resultHandle SteamInventoryResult outItemsArray Span<SteamItemDetails> outItemsArraySize uint Returns bool GetResultStatus(SteamInventoryResult) public EResult GetResultStatus(SteamInventoryResult resultHandle) Parameters resultHandle SteamInventoryResult Returns EResult GetResultTimestamp(SteamInventoryResult) public uint GetResultTimestamp(SteamInventoryResult resultHandle) Parameters resultHandle SteamInventoryResult Returns uint GrantPromoItems(out SteamInventoryResult) public bool GrantPromoItems(out SteamInventoryResult resultHandle) Parameters resultHandle SteamInventoryResult Returns bool InspectItem(out SteamInventoryResult, string) public bool InspectItem(out SteamInventoryResult resultHandle, string itemToken) Parameters resultHandle SteamInventoryResult itemToken string Returns bool LoadItemDefinitions() public bool LoadItemDefinitions() Returns bool OnSteamInventoryDefinitionUpdate(CallbackAction<SteamInventoryDefinitionUpdate>) public IDisposable OnSteamInventoryDefinitionUpdate(CallbackAction<SteamInventoryDefinitionUpdate> func) Parameters func CallbackAction<SteamInventoryDefinitionUpdate> Returns IDisposable OnSteamInventoryFullUpdate(CallbackAction<SteamInventoryFullUpdate>) public IDisposable OnSteamInventoryFullUpdate(CallbackAction<SteamInventoryFullUpdate> func) Parameters func CallbackAction<SteamInventoryFullUpdate> Returns IDisposable OnSteamInventoryResultReady(CallbackAction<SteamInventoryResultReady>) public IDisposable OnSteamInventoryResultReady(CallbackAction<SteamInventoryResultReady> func) Parameters func CallbackAction<SteamInventoryResultReady> Returns IDisposable RemoveProperty(SteamInventoryUpdateHandle, SteamItemInstanceID, string) public bool RemoveProperty(SteamInventoryUpdateHandle handle, SteamItemInstanceID itemID, string propertyName) Parameters handle SteamInventoryUpdateHandle itemID SteamItemInstanceID propertyName string Returns bool RequestEligiblePromoItemDefinitionsIDs(CSteamID) public Promise<SteamInventoryEligiblePromoItemDefIDs> RequestEligiblePromoItemDefinitionsIDs(CSteamID steamID) Parameters steamID CSteamID Returns Promise<SteamInventoryEligiblePromoItemDefIDs> RequestPrices() public Promise<SteamInventoryRequestPricesResult> RequestPrices() Returns Promise<SteamInventoryRequestPricesResult> SendItemDropHeartbeat() public void SendItemDropHeartbeat() SerializeResult(SteamInventoryResult, Span<byte>, out uint) public bool SerializeResult(SteamInventoryResult resultHandle, Span<byte> outBuffer, out uint outBufferSize) Parameters resultHandle SteamInventoryResult outBuffer Span<byte> outBufferSize uint Returns bool SetProperty(SteamInventoryUpdateHandle, SteamItemInstanceID, string, bool) public bool SetProperty(SteamInventoryUpdateHandle handle, SteamItemInstanceID itemID, string propertyName, bool value) Parameters handle SteamInventoryUpdateHandle itemID SteamItemInstanceID propertyName string value bool Returns bool SetProperty(SteamInventoryUpdateHandle, SteamItemInstanceID, string, long) public bool SetProperty(SteamInventoryUpdateHandle handle, SteamItemInstanceID itemID, string propertyName, long value) Parameters handle SteamInventoryUpdateHandle itemID SteamItemInstanceID propertyName string value long Returns bool SetProperty(SteamInventoryUpdateHandle, SteamItemInstanceID, string, float) public bool SetProperty(SteamInventoryUpdateHandle handle, SteamItemInstanceID itemID, string propertyName, float value) Parameters handle SteamInventoryUpdateHandle itemID SteamItemInstanceID propertyName string value float Returns bool SetProperty(SteamInventoryUpdateHandle, SteamItemInstanceID, string, string) public bool SetProperty(SteamInventoryUpdateHandle handle, SteamItemInstanceID itemID, string propertyName, string propertyValue) Parameters handle SteamInventoryUpdateHandle itemID SteamItemInstanceID propertyName string propertyValue string Returns bool StartPurchase(ReadOnlySpan<SteamItemDef>, ReadOnlySpan<uint>) public Promise<SteamInventoryStartPurchaseResult> StartPurchase(ReadOnlySpan<SteamItemDef> arrayItemDefs, ReadOnlySpan<uint> arrayQuantity) Parameters arrayItemDefs ReadOnlySpan<SteamItemDef> arrayQuantity ReadOnlySpan<uint> Returns Promise<SteamInventoryStartPurchaseResult> StartUpdateProperties() public SteamInventoryUpdateHandle StartUpdateProperties() Returns SteamInventoryUpdateHandle SubmitUpdateProperties(SteamInventoryUpdateHandle, out SteamInventoryResult) public bool SubmitUpdateProperties(SteamInventoryUpdateHandle handle, out SteamInventoryResult resultHandle) Parameters handle SteamInventoryUpdateHandle resultHandle SteamInventoryResult Returns bool TradeItems(out SteamInventoryResult, CSteamID, ReadOnlySpan<SteamItemInstanceID>, ReadOnlySpan<uint>, ReadOnlySpan<SteamItemInstanceID>, ReadOnlySpan<uint>) public bool TradeItems(out SteamInventoryResult resultHandle, CSteamID steamIDTradePartner, ReadOnlySpan<SteamItemInstanceID> arrayGive, ReadOnlySpan<uint> arrayGiveQuantity, ReadOnlySpan<SteamItemInstanceID> arrayGet, ReadOnlySpan<uint> arrayGetQuantity) Parameters resultHandle SteamInventoryResult steamIDTradePartner CSteamID arrayGive ReadOnlySpan<SteamItemInstanceID> arrayGiveQuantity ReadOnlySpan<uint> arrayGet ReadOnlySpan<SteamItemInstanceID> arrayGetQuantity ReadOnlySpan<uint> Returns bool TransferItemQuantity(out SteamInventoryResult, SteamItemInstanceID, uint, SteamItemInstanceID) public bool TransferItemQuantity(out SteamInventoryResult resultHandle, SteamItemInstanceID itemIdSource, uint quantity, SteamItemInstanceID itemIdDest) Parameters resultHandle SteamInventoryResult itemIdSource SteamItemInstanceID quantity uint itemIdDest SteamItemInstanceID Returns bool TriggerItemDrop(out SteamInventoryResult, SteamItemDef) public bool TriggerItemDrop(out SteamInventoryResult resultHandle, SteamItemDef dropListDefinition) Parameters resultHandle SteamInventoryResult dropListDefinition SteamItemDef Returns bool"
  },
  "api/MarymoorStudios.Core.Steamworks.ISteamMatchmaking.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ISteamMatchmaking.html",
    "title": "Class ISteamMatchmaking",
    "summary": "Class ISteamMatchmaking Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public sealed class ISteamMatchmaking : SteamNativeObject Inheritance object SteamNativeObject ISteamMatchmaking Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Fields INTERFACE_VERSION public const string INTERFACE_VERSION = \"SteamMatchMaking009\" Field Value string Methods AddFavoriteGame(AppId, uint, ushort, ushort, uint, uint) public int AddFavoriteGame(AppId appId, uint ip, ushort connPort, ushort queryPort, uint flags, uint rTime32LastPlayedOnServer) Parameters appId AppId ip uint connPort ushort queryPort ushort flags uint rTime32LastPlayedOnServer uint Returns int AddRequestLobbyListCompatibleMembersFilter(CSteamID) public void AddRequestLobbyListCompatibleMembersFilter(CSteamID steamIDLobby) Parameters steamIDLobby CSteamID AddRequestLobbyListDistanceFilter(ELobbyDistanceFilter) public void AddRequestLobbyListDistanceFilter(ELobbyDistanceFilter lobbyDistanceFilter) Parameters lobbyDistanceFilter ELobbyDistanceFilter AddRequestLobbyListFilterSlotsAvailable(int) public void AddRequestLobbyListFilterSlotsAvailable(int slotsAvailable) Parameters slotsAvailable int AddRequestLobbyListNearValueFilter(string, int) public void AddRequestLobbyListNearValueFilter(string keyToMatch, int valueToBeCloseTo) Parameters keyToMatch string valueToBeCloseTo int AddRequestLobbyListNumericalFilter(string, int, ELobbyComparison) public void AddRequestLobbyListNumericalFilter(string keyToMatch, int valueToMatch, ELobbyComparison comparisonType) Parameters keyToMatch string valueToMatch int comparisonType ELobbyComparison AddRequestLobbyListResultCountFilter(int) public void AddRequestLobbyListResultCountFilter(int maxResults) Parameters maxResults int AddRequestLobbyListStringFilter(string, string, ELobbyComparison) public void AddRequestLobbyListStringFilter(string keyToMatch, string valueToMatch, ELobbyComparison comparisonType) Parameters keyToMatch string valueToMatch string comparisonType ELobbyComparison CreateLobby(ELobbyType, int) public Promise<LobbyCreated> CreateLobby(ELobbyType lobbyType, int maxMembers) Parameters lobbyType ELobbyType maxMembers int Returns Promise<LobbyCreated> DeleteLobbyData(CSteamID, string) public bool DeleteLobbyData(CSteamID steamIDLobby, string key) Parameters steamIDLobby CSteamID key string Returns bool GetFavoriteGame(int, out AppId, out uint, out ushort, out ushort, out uint, out uint) public bool GetFavoriteGame(int game, out AppId appId, out uint ip, out ushort connPort, out ushort queryPort, out uint flags, out uint rTime32LastPlayedOnServer) Parameters game int appId AppId ip uint connPort ushort queryPort ushort flags uint rTime32LastPlayedOnServer uint Returns bool GetFavoriteGameCount() public int GetFavoriteGameCount() Returns int GetLobbyByIndex(int) public CSteamID GetLobbyByIndex(int lobby) Parameters lobby int Returns CSteamID GetLobbyChatEntry(CSteamID, int, out CSteamID, Span<byte>, out EChatEntryType) public int GetLobbyChatEntry(CSteamID steamIDLobby, int chatID, out CSteamID steamIDUser, Span<byte> data, out EChatEntryType chatEntryType) Parameters steamIDLobby CSteamID chatID int steamIDUser CSteamID data Span<byte> chatEntryType EChatEntryType Returns int GetLobbyChatEntry(CSteamID, int, out CSteamID, out string, out EChatEntryType) public bool GetLobbyChatEntry(CSteamID steamIDLobby, int iChatID, out CSteamID pSteamIDUser, out string pvData, out EChatEntryType peChatEntryType) Parameters steamIDLobby CSteamID iChatID int pSteamIDUser CSteamID pvData string peChatEntryType EChatEntryType Returns bool GetLobbyData(CSteamID, string) public string GetLobbyData(CSteamID steamIDLobby, string key) Parameters steamIDLobby CSteamID key string Returns string GetLobbyDataByIndex(CSteamID, int, Span<byte>, Span<byte>) public bool GetLobbyDataByIndex(CSteamID steamIDLobby, int lobbyData, Span<byte> key, Span<byte> value) Parameters steamIDLobby CSteamID lobbyData int key Span<byte> value Span<byte> Returns bool GetLobbyDataCount(CSteamID) public int GetLobbyDataCount(CSteamID steamIDLobby) Parameters steamIDLobby CSteamID Returns int GetLobbyGameServer(CSteamID, out uint, out ushort, out CSteamID) public bool GetLobbyGameServer(CSteamID steamIDLobby, out uint gameServerIP, out ushort gameServerPort, out CSteamID psteamIDGameServer) Parameters steamIDLobby CSteamID gameServerIP uint gameServerPort ushort psteamIDGameServer CSteamID Returns bool GetLobbyMemberByIndex(CSteamID, int) public CSteamID GetLobbyMemberByIndex(CSteamID steamIDLobby, int member) Parameters steamIDLobby CSteamID member int Returns CSteamID GetLobbyMemberData(CSteamID, CSteamID, string) public string? GetLobbyMemberData(CSteamID steamIDLobby, CSteamID steamIDUser, string key) Parameters steamIDLobby CSteamID steamIDUser CSteamID key string Returns string GetLobbyMemberLimit(CSteamID) public int GetLobbyMemberLimit(CSteamID steamIDLobby) Parameters steamIDLobby CSteamID Returns int GetLobbyOwner(CSteamID) public CSteamID GetLobbyOwner(CSteamID steamIDLobby) Parameters steamIDLobby CSteamID Returns CSteamID GetNumLobbyMembers(CSteamID) public int GetNumLobbyMembers(CSteamID steamIDLobby) Parameters steamIDLobby CSteamID Returns int InviteUserToLobby(CSteamID, CSteamID) public bool InviteUserToLobby(CSteamID steamIDLobby, CSteamID steamIDInvitee) Parameters steamIDLobby CSteamID steamIDInvitee CSteamID Returns bool JoinLobby(CSteamID) public Promise<LobbyEnter> JoinLobby(CSteamID steamIDLobby) Parameters steamIDLobby CSteamID Returns Promise<LobbyEnter> LeaveLobby(CSteamID) public void LeaveLobby(CSteamID steamIDLobby) Parameters steamIDLobby CSteamID OnFavoritesListAccountsUpdated(CallbackAction<FavoritesListAccountsUpdated>) public IDisposable OnFavoritesListAccountsUpdated(CallbackAction<FavoritesListAccountsUpdated> func) Parameters func CallbackAction<FavoritesListAccountsUpdated> Returns IDisposable OnFavoritesListChanged(CallbackAction<FavoritesListChanged>) public IDisposable OnFavoritesListChanged(CallbackAction<FavoritesListChanged> func) Parameters func CallbackAction<FavoritesListChanged> Returns IDisposable OnLobbyChatMsg(CallbackAction<LobbyChatMsg>) public IDisposable OnLobbyChatMsg(CallbackAction<LobbyChatMsg> func) Parameters func CallbackAction<LobbyChatMsg> Returns IDisposable OnLobbyChatUpdate(CallbackAction<LobbyChatUpdate>) public IDisposable OnLobbyChatUpdate(CallbackAction<LobbyChatUpdate> func) Parameters func CallbackAction<LobbyChatUpdate> Returns IDisposable OnLobbyDataUpdate(CallbackAction<LobbyDataUpdate>) public IDisposable OnLobbyDataUpdate(CallbackAction<LobbyDataUpdate> func) Parameters func CallbackAction<LobbyDataUpdate> Returns IDisposable OnLobbyGameCreated(CallbackAction<LobbyGameCreated>) public IDisposable OnLobbyGameCreated(CallbackAction<LobbyGameCreated> func) Parameters func CallbackAction<LobbyGameCreated> Returns IDisposable OnLobbyInvite(CallbackAction<LobbyInvite>) public IDisposable OnLobbyInvite(CallbackAction<LobbyInvite> func) Parameters func CallbackAction<LobbyInvite> Returns IDisposable OnLobbyKicked(CallbackAction<LobbyKicked>) public IDisposable OnLobbyKicked(CallbackAction<LobbyKicked> func) Parameters func CallbackAction<LobbyKicked> Returns IDisposable RemoveFavoriteGame(AppId, uint, ushort, ushort, uint) public bool RemoveFavoriteGame(AppId appId, uint ip, ushort connPort, ushort queryPort, uint flags) Parameters appId AppId ip uint connPort ushort queryPort ushort flags uint Returns bool RequestLobbyData(CSteamID) public bool RequestLobbyData(CSteamID steamIDLobby) Parameters steamIDLobby CSteamID Returns bool RequestLobbyList() public Promise<LobbyMatchList> RequestLobbyList() Returns Promise<LobbyMatchList> SendLobbyChatMsg(CSteamID, ReadOnlySpan<byte>) public bool SendLobbyChatMsg(CSteamID steamIDLobby, ReadOnlySpan<byte> msgBody) Parameters steamIDLobby CSteamID msgBody ReadOnlySpan<byte> Returns bool SendLobbyChatMsg(CSteamID, string) public bool SendLobbyChatMsg(CSteamID steamIDLobby, string pvMsgBody) Parameters steamIDLobby CSteamID pvMsgBody string Returns bool SetLinkedLobby(CSteamID, CSteamID) public bool SetLinkedLobby(CSteamID steamIDLobby, CSteamID steamIDLobbyDependent) Parameters steamIDLobby CSteamID steamIDLobbyDependent CSteamID Returns bool SetLobbyData(CSteamID, string, string) public bool SetLobbyData(CSteamID steamIDLobby, string key, string value) Parameters steamIDLobby CSteamID key string value string Returns bool SetLobbyGameServer(CSteamID, uint, ushort, CSteamID) public void SetLobbyGameServer(CSteamID steamIDLobby, uint gameServerIP, ushort gameServerPort, CSteamID steamIDGameServer) Parameters steamIDLobby CSteamID gameServerIP uint gameServerPort ushort steamIDGameServer CSteamID SetLobbyJoinable(CSteamID, bool) public bool SetLobbyJoinable(CSteamID steamIDLobby, bool lobbyJoinable) Parameters steamIDLobby CSteamID lobbyJoinable bool Returns bool SetLobbyMemberData(CSteamID, string, string) public void SetLobbyMemberData(CSteamID steamIDLobby, string key, string value) Parameters steamIDLobby CSteamID key string value string SetLobbyMemberLimit(CSteamID, int) public bool SetLobbyMemberLimit(CSteamID steamIDLobby, int maxMembers) Parameters steamIDLobby CSteamID maxMembers int Returns bool SetLobbyOwner(CSteamID, CSteamID) public bool SetLobbyOwner(CSteamID steamIDLobby, CSteamID steamIDNewOwner) Parameters steamIDLobby CSteamID steamIDNewOwner CSteamID Returns bool SetLobbyType(CSteamID, ELobbyType) public bool SetLobbyType(CSteamID steamIDLobby, ELobbyType lobbyType) Parameters steamIDLobby CSteamID lobbyType ELobbyType Returns bool"
  },
  "api/MarymoorStudios.Core.Steamworks.ISteamMatchmakingPingResponse.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ISteamMatchmakingPingResponse.html",
    "title": "Class ISteamMatchmakingPingResponse",
    "summary": "Class ISteamMatchmakingPingResponse Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public sealed class ISteamMatchmakingPingResponse : SteamNativeObject Inheritance object SteamNativeObject ISteamMatchmakingPingResponse Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods ServerFailedToRespond() public void ServerFailedToRespond() ServerResponded(ref gameserveritem) public void ServerResponded(ref gameserveritem server) Parameters server gameserveritem"
  },
  "api/MarymoorStudios.Core.Steamworks.ISteamMatchmakingPlayersResponse.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ISteamMatchmakingPlayersResponse.html",
    "title": "Class ISteamMatchmakingPlayersResponse",
    "summary": "Class ISteamMatchmakingPlayersResponse Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public sealed class ISteamMatchmakingPlayersResponse : SteamNativeObject Inheritance object SteamNativeObject ISteamMatchmakingPlayersResponse Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods AddPlayerToList(string, int, float) public void AddPlayerToList(string pchName, int nScore, float flTimePlayed) Parameters pchName string nScore int flTimePlayed float PlayersFailedToRespond() public void PlayersFailedToRespond() PlayersRefreshComplete() public void PlayersRefreshComplete()"
  },
  "api/MarymoorStudios.Core.Steamworks.ISteamMatchmakingRulesResponse.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ISteamMatchmakingRulesResponse.html",
    "title": "Class ISteamMatchmakingRulesResponse",
    "summary": "Class ISteamMatchmakingRulesResponse Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public sealed class ISteamMatchmakingRulesResponse : SteamNativeObject Inheritance object SteamNativeObject ISteamMatchmakingRulesResponse Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods RulesFailedToRespond() public void RulesFailedToRespond() RulesRefreshComplete() public void RulesRefreshComplete() RulesResponded(string, string) public void RulesResponded(string pchRule, string pchValue) Parameters pchRule string pchValue string"
  },
  "api/MarymoorStudios.Core.Steamworks.ISteamMatchmakingServerListResponse.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ISteamMatchmakingServerListResponse.html",
    "title": "Class ISteamMatchmakingServerListResponse",
    "summary": "Class ISteamMatchmakingServerListResponse Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public sealed class ISteamMatchmakingServerListResponse : SteamNativeObject Inheritance object SteamNativeObject ISteamMatchmakingServerListResponse Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods RefreshComplete(HServerListRequest, EMatchMakingServerResponse) public void RefreshComplete(HServerListRequest hRequest, EMatchMakingServerResponse response) Parameters hRequest HServerListRequest response EMatchMakingServerResponse ServerFailedToRespond(HServerListRequest, int) public void ServerFailedToRespond(HServerListRequest hRequest, int iServer) Parameters hRequest HServerListRequest iServer int ServerResponded(HServerListRequest, int) public void ServerResponded(HServerListRequest hRequest, int iServer) Parameters hRequest HServerListRequest iServer int"
  },
  "api/MarymoorStudios.Core.Steamworks.ISteamMatchmakingServers.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ISteamMatchmakingServers.html",
    "title": "Class ISteamMatchmakingServers",
    "summary": "Class ISteamMatchmakingServers Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public sealed class ISteamMatchmakingServers : SteamNativeObject Inheritance object SteamNativeObject ISteamMatchmakingServers Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Fields INTERFACE_VERSION public const string INTERFACE_VERSION = \"SteamMatchMakingServers002\" Field Value string Methods CancelQuery(HServerListRequest) public void CancelQuery(HServerListRequest request) Parameters request HServerListRequest CancelServerQuery(HServerQuery) public void CancelServerQuery(HServerQuery serverQuery) Parameters serverQuery HServerQuery GetServerCount(HServerListRequest) public int GetServerCount(HServerListRequest request) Parameters request HServerListRequest Returns int GetServerDetails(HServerListRequest, int) public ref readonly gameserveritem GetServerDetails(HServerListRequest request, int server) Parameters request HServerListRequest server int Returns gameserveritem IsRefreshing(HServerListRequest) public bool IsRefreshing(HServerListRequest request) Parameters request HServerListRequest Returns bool PingServer(uint, ushort, ISteamMatchmakingPingResponse) public HServerQuery PingServer(uint ip, ushort port, ISteamMatchmakingPingResponse requestServersResponse) Parameters ip uint port ushort requestServersResponse ISteamMatchmakingPingResponse Returns HServerQuery PlayerDetails(uint, ushort, ISteamMatchmakingPlayersResponse) public HServerQuery PlayerDetails(uint ip, ushort port, ISteamMatchmakingPlayersResponse requestServersResponse) Parameters ip uint port ushort requestServersResponse ISteamMatchmakingPlayersResponse Returns HServerQuery RefreshQuery(HServerListRequest) public void RefreshQuery(HServerListRequest request) Parameters request HServerListRequest RefreshServer(HServerListRequest, int) public void RefreshServer(HServerListRequest request, int server) Parameters request HServerListRequest server int ReleaseRequest(HServerListRequest) public void ReleaseRequest(HServerListRequest serverListRequest) Parameters serverListRequest HServerListRequest RequestFavoritesServerList(AppId, MatchMakingKeyValuePairList, ISteamMatchmakingServerListResponse) public HServerListRequest RequestFavoritesServerList(AppId app, MatchMakingKeyValuePairList ppchFilters, ISteamMatchmakingServerListResponse requestServersResponse) Parameters app AppId ppchFilters MatchMakingKeyValuePairList requestServersResponse ISteamMatchmakingServerListResponse Returns HServerListRequest RequestFriendsServerList(AppId, MatchMakingKeyValuePairList, ISteamMatchmakingServerListResponse) public HServerListRequest RequestFriendsServerList(AppId app, MatchMakingKeyValuePairList ppchFilters, ISteamMatchmakingServerListResponse requestServersResponse) Parameters app AppId ppchFilters MatchMakingKeyValuePairList requestServersResponse ISteamMatchmakingServerListResponse Returns HServerListRequest RequestHistoryServerList(AppId, MatchMakingKeyValuePairList, ISteamMatchmakingServerListResponse) public HServerListRequest RequestHistoryServerList(AppId app, MatchMakingKeyValuePairList ppchFilters, ISteamMatchmakingServerListResponse requestServersResponse) Parameters app AppId ppchFilters MatchMakingKeyValuePairList requestServersResponse ISteamMatchmakingServerListResponse Returns HServerListRequest RequestInternetServerList(AppId, MatchMakingKeyValuePairList, ISteamMatchmakingServerListResponse) public HServerListRequest RequestInternetServerList(AppId app, MatchMakingKeyValuePairList ppchFilters, ISteamMatchmakingServerListResponse requestServersResponse) Parameters app AppId ppchFilters MatchMakingKeyValuePairList requestServersResponse ISteamMatchmakingServerListResponse Returns HServerListRequest RequestLANServerList(AppId, ISteamMatchmakingServerListResponse) public HServerListRequest RequestLANServerList(AppId app, ISteamMatchmakingServerListResponse requestServersResponse) Parameters app AppId requestServersResponse ISteamMatchmakingServerListResponse Returns HServerListRequest RequestSpectatorServerList(AppId, MatchMakingKeyValuePairList, ISteamMatchmakingServerListResponse) public HServerListRequest RequestSpectatorServerList(AppId app, MatchMakingKeyValuePairList ppchFilters, ISteamMatchmakingServerListResponse requestServersResponse) Parameters app AppId ppchFilters MatchMakingKeyValuePairList requestServersResponse ISteamMatchmakingServerListResponse Returns HServerListRequest ServerRules(uint, ushort, ISteamMatchmakingRulesResponse) public HServerQuery ServerRules(uint ip, ushort port, ISteamMatchmakingRulesResponse requestServersResponse) Parameters ip uint port ushort requestServersResponse ISteamMatchmakingRulesResponse Returns HServerQuery"
  },
  "api/MarymoorStudios.Core.Steamworks.ISteamMusic.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ISteamMusic.html",
    "title": "Class ISteamMusic",
    "summary": "Class ISteamMusic Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public sealed class ISteamMusic : SteamNativeObject Inheritance object SteamNativeObject ISteamMusic Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Fields INTERFACE_VERSION public const string INTERFACE_VERSION = \"STEAMMUSIC_INTERFACE_VERSION001\" Field Value string Methods BIsEnabled() public bool BIsEnabled() Returns bool BIsPlaying() public bool BIsPlaying() Returns bool GetPlaybackStatus() public AudioPlayback_Status GetPlaybackStatus() Returns AudioPlayback_Status GetVolume() public float GetVolume() Returns float OnMusicPlayerSelectsPlaylistEntry(CallbackAction<MusicPlayerSelectsPlaylistEntry>) public IDisposable OnMusicPlayerSelectsPlaylistEntry(CallbackAction<MusicPlayerSelectsPlaylistEntry> func) Parameters func CallbackAction<MusicPlayerSelectsPlaylistEntry> Returns IDisposable OnMusicPlayerSelectsQueueEntry(CallbackAction<MusicPlayerSelectsQueueEntry>) public IDisposable OnMusicPlayerSelectsQueueEntry(CallbackAction<MusicPlayerSelectsQueueEntry> func) Parameters func CallbackAction<MusicPlayerSelectsQueueEntry> Returns IDisposable OnMusicPlayerWantsVolume(CallbackAction<MusicPlayerWantsVolume>) public IDisposable OnMusicPlayerWantsVolume(CallbackAction<MusicPlayerWantsVolume> func) Parameters func CallbackAction<MusicPlayerWantsVolume> Returns IDisposable OnPlaybackStatusHasChanged(CallbackAction<PlaybackStatusHasChanged>) public IDisposable OnPlaybackStatusHasChanged(CallbackAction<PlaybackStatusHasChanged> func) Parameters func CallbackAction<PlaybackStatusHasChanged> Returns IDisposable OnVolumeHasChanged(CallbackAction<VolumeHasChanged>) public IDisposable OnVolumeHasChanged(CallbackAction<VolumeHasChanged> func) Parameters func CallbackAction<VolumeHasChanged> Returns IDisposable Pause() public void Pause() Play() public void Play() PlayNext() public void PlayNext() PlayPrevious() public void PlayPrevious() SetVolume(float) public void SetVolume(float volume) Parameters volume float"
  },
  "api/MarymoorStudios.Core.Steamworks.ISteamMusicRemote.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ISteamMusicRemote.html",
    "title": "Class ISteamMusicRemote",
    "summary": "Class ISteamMusicRemote Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public sealed class ISteamMusicRemote : SteamNativeObject Inheritance object SteamNativeObject ISteamMusicRemote Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Fields INTERFACE_VERSION public const string INTERFACE_VERSION = \"STEAMMUSICREMOTE_INTERFACE_VERSION001\" Field Value string Methods BActivationSuccess(bool) public bool BActivationSuccess(bool value) Parameters value bool Returns bool BIsCurrentMusicRemote() public bool BIsCurrentMusicRemote() Returns bool CurrentEntryDidChange() public bool CurrentEntryDidChange() Returns bool CurrentEntryIsAvailable(bool) public bool CurrentEntryIsAvailable(bool available) Parameters available bool Returns bool CurrentEntryWillChange() public bool CurrentEntryWillChange() Returns bool DeregisterSteamMusicRemote() public bool DeregisterSteamMusicRemote() Returns bool EnableLooped(bool) public bool EnableLooped(bool value) Parameters value bool Returns bool EnablePlayNext(bool) public bool EnablePlayNext(bool value) Parameters value bool Returns bool EnablePlayPrevious(bool) public bool EnablePlayPrevious(bool value) Parameters value bool Returns bool EnablePlaylists(bool) public bool EnablePlaylists(bool value) Parameters value bool Returns bool EnableQueue(bool) public bool EnableQueue(bool value) Parameters value bool Returns bool EnableShuffled(bool) public bool EnableShuffled(bool value) Parameters value bool Returns bool OnMusicPlayerRemoteToFront(CallbackAction<MusicPlayerRemoteToFront>) public IDisposable OnMusicPlayerRemoteToFront(CallbackAction<MusicPlayerRemoteToFront> func) Parameters func CallbackAction<MusicPlayerRemoteToFront> Returns IDisposable OnMusicPlayerRemoteWillActivate(CallbackAction<MusicPlayerRemoteWillActivate>) public IDisposable OnMusicPlayerRemoteWillActivate(CallbackAction<MusicPlayerRemoteWillActivate> func) Parameters func CallbackAction<MusicPlayerRemoteWillActivate> Returns IDisposable OnMusicPlayerRemoteWillDeactivate(CallbackAction<MusicPlayerRemoteWillDeactivate>) public IDisposable OnMusicPlayerRemoteWillDeactivate(CallbackAction<MusicPlayerRemoteWillDeactivate> func) Parameters func CallbackAction<MusicPlayerRemoteWillDeactivate> Returns IDisposable OnMusicPlayerWantsLooped(CallbackAction<MusicPlayerWantsLooped>) public IDisposable OnMusicPlayerWantsLooped(CallbackAction<MusicPlayerWantsLooped> func) Parameters func CallbackAction<MusicPlayerWantsLooped> Returns IDisposable OnMusicPlayerWantsPause(CallbackAction<MusicPlayerWantsPause>) public IDisposable OnMusicPlayerWantsPause(CallbackAction<MusicPlayerWantsPause> func) Parameters func CallbackAction<MusicPlayerWantsPause> Returns IDisposable OnMusicPlayerWantsPlay(CallbackAction<MusicPlayerWantsPlay>) public IDisposable OnMusicPlayerWantsPlay(CallbackAction<MusicPlayerWantsPlay> func) Parameters func CallbackAction<MusicPlayerWantsPlay> Returns IDisposable OnMusicPlayerWantsPlayNext(CallbackAction<MusicPlayerWantsPlayNext>) public IDisposable OnMusicPlayerWantsPlayNext(CallbackAction<MusicPlayerWantsPlayNext> func) Parameters func CallbackAction<MusicPlayerWantsPlayNext> Returns IDisposable OnMusicPlayerWantsPlayPrevious(CallbackAction<MusicPlayerWantsPlayPrevious>) public IDisposable OnMusicPlayerWantsPlayPrevious(CallbackAction<MusicPlayerWantsPlayPrevious> func) Parameters func CallbackAction<MusicPlayerWantsPlayPrevious> Returns IDisposable OnMusicPlayerWantsPlayingRepeatStatus(CallbackAction<MusicPlayerWantsPlayingRepeatStatus>) public IDisposable OnMusicPlayerWantsPlayingRepeatStatus(CallbackAction<MusicPlayerWantsPlayingRepeatStatus> func) Parameters func CallbackAction<MusicPlayerWantsPlayingRepeatStatus> Returns IDisposable OnMusicPlayerWantsShuffled(CallbackAction<MusicPlayerWantsShuffled>) public IDisposable OnMusicPlayerWantsShuffled(CallbackAction<MusicPlayerWantsShuffled> func) Parameters func CallbackAction<MusicPlayerWantsShuffled> Returns IDisposable OnMusicPlayerWillQuit(CallbackAction<MusicPlayerWillQuit>) public IDisposable OnMusicPlayerWillQuit(CallbackAction<MusicPlayerWillQuit> func) Parameters func CallbackAction<MusicPlayerWillQuit> Returns IDisposable PlaylistDidChange() public bool PlaylistDidChange() Returns bool PlaylistWillChange() public bool PlaylistWillChange() Returns bool QueueDidChange() public bool QueueDidChange() Returns bool QueueWillChange() public bool QueueWillChange() Returns bool RegisterSteamMusicRemote(string) public bool RegisterSteamMusicRemote(string name) Parameters name string Returns bool ResetPlaylistEntries() public bool ResetPlaylistEntries() Returns bool ResetQueueEntries() public bool ResetQueueEntries() Returns bool SetCurrentPlaylistEntry(int) public bool SetCurrentPlaylistEntry(int iD) Parameters iD int Returns bool SetCurrentQueueEntry(int) public bool SetCurrentQueueEntry(int iD) Parameters iD int Returns bool SetDisplayName(string) public bool SetDisplayName(string displayName) Parameters displayName string Returns bool SetPNGIcon_64x64(Span<byte>) public bool SetPNGIcon_64x64(Span<byte> buffer) Parameters buffer Span<byte> Returns bool SetPlaylistEntry(int, int, string) public bool SetPlaylistEntry(int iD, int position, string entryText) Parameters iD int position int entryText string Returns bool SetQueueEntry(int, int, string) public bool SetQueueEntry(int iD, int position, string entryText) Parameters iD int position int entryText string Returns bool UpdateCurrentEntryCoverArt(Span<byte>) public bool UpdateCurrentEntryCoverArt(Span<byte> buffer) Parameters buffer Span<byte> Returns bool UpdateCurrentEntryElapsedSeconds(int) public bool UpdateCurrentEntryElapsedSeconds(int value) Parameters value int Returns bool UpdateCurrentEntryText(string) public bool UpdateCurrentEntryText(string text) Parameters text string Returns bool UpdateLooped(bool) public bool UpdateLooped(bool value) Parameters value bool Returns bool UpdatePlaybackStatus(AudioPlayback_Status) public bool UpdatePlaybackStatus(AudioPlayback_Status status) Parameters status AudioPlayback_Status Returns bool UpdateShuffled(bool) public bool UpdateShuffled(bool value) Parameters value bool Returns bool UpdateVolume(float) public bool UpdateVolume(float value) Parameters value float Returns bool"
  },
  "api/MarymoorStudios.Core.Steamworks.ISteamNetworking.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ISteamNetworking.html",
    "title": "Class ISteamNetworking",
    "summary": "Class ISteamNetworking Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public sealed class ISteamNetworking : SteamNativeObject Inheritance object SteamNativeObject ISteamNetworking Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Fields INTERFACE_VERSION public const string INTERFACE_VERSION = \"SteamNetworking006\" Field Value string Methods AcceptP2PSessionWithUser(CSteamID) public bool AcceptP2PSessionWithUser(CSteamID steamIDRemote) Parameters steamIDRemote CSteamID Returns bool AllowP2PPacketRelay(bool) public bool AllowP2PPacketRelay(bool allow) Parameters allow bool Returns bool CloseP2PChannelWithUser(CSteamID, int) public bool CloseP2PChannelWithUser(CSteamID steamIDRemote, int channel) Parameters steamIDRemote CSteamID channel int Returns bool CloseP2PSessionWithUser(CSteamID) public bool CloseP2PSessionWithUser(CSteamID steamIDRemote) Parameters steamIDRemote CSteamID Returns bool CreateConnectionSocket(SteamIPAddress, ushort, int) public SNetSocket CreateConnectionSocket(SteamIPAddress ip, ushort port, int timeoutSec) Parameters ip SteamIPAddress port ushort timeoutSec int Returns SNetSocket CreateListenSocket(int, SteamIPAddress, ushort, bool) public SNetListenSocket CreateListenSocket(int virtualP2PPort, SteamIPAddress ip, ushort port, bool allowUseOfPacketRelay) Parameters virtualP2PPort int ip SteamIPAddress port ushort allowUseOfPacketRelay bool Returns SNetListenSocket CreateP2PConnectionSocket(CSteamID, int, int, bool) public SNetSocket CreateP2PConnectionSocket(CSteamID steamIDTarget, int virtualPort, int timeoutSec, bool allowUseOfPacketRelay) Parameters steamIDTarget CSteamID virtualPort int timeoutSec int allowUseOfPacketRelay bool Returns SNetSocket DestroyListenSocket(SNetListenSocket, bool) public bool DestroyListenSocket(SNetListenSocket socket, bool notifyRemoteEnd) Parameters socket SNetListenSocket notifyRemoteEnd bool Returns bool DestroySocket(SNetSocket, bool) public bool DestroySocket(SNetSocket socket, bool notifyRemoteEnd) Parameters socket SNetSocket notifyRemoteEnd bool Returns bool GetListenSocketInfo(SNetListenSocket, out SteamIPAddress, out ushort) public bool GetListenSocketInfo(SNetListenSocket listenSocket, out SteamIPAddress ip, out ushort port) Parameters listenSocket SNetListenSocket ip SteamIPAddress port ushort Returns bool GetMaxPacketSize(SNetSocket) public int GetMaxPacketSize(SNetSocket socket) Parameters socket SNetSocket Returns int GetP2PSessionState(CSteamID, out P2PSessionState) public bool GetP2PSessionState(CSteamID steamIDRemote, out P2PSessionState connectionState) Parameters steamIDRemote CSteamID connectionState P2PSessionState Returns bool GetSocketConnectionType(SNetSocket) public ESNetSocketConnectionType GetSocketConnectionType(SNetSocket socket) Parameters socket SNetSocket Returns ESNetSocketConnectionType GetSocketInfo(SNetSocket, out CSteamID, out int, out SteamIPAddress, out ushort) public bool GetSocketInfo(SNetSocket socket, out CSteamID steamIDRemote, out int socketStatus, out SteamIPAddress ipRemote, out ushort portRemote) Parameters socket SNetSocket steamIDRemote CSteamID socketStatus int ipRemote SteamIPAddress portRemote ushort Returns bool IsDataAvailable(SNetListenSocket, out uint, out SNetSocket) public bool IsDataAvailable(SNetListenSocket listenSocket, out uint msgSize, out SNetSocket hSocket) Parameters listenSocket SNetListenSocket msgSize uint hSocket SNetSocket Returns bool IsDataAvailableOnSocket(SNetSocket, out uint) public bool IsDataAvailableOnSocket(SNetSocket socket, out uint msgSize) Parameters socket SNetSocket msgSize uint Returns bool IsP2PPacketAvailable(out uint, int) public bool IsP2PPacketAvailable(out uint msgSize, int channel) Parameters msgSize uint channel int Returns bool OnP2PSessionConnectFail(CallbackAction<P2PSessionConnectFail>) public IDisposable OnP2PSessionConnectFail(CallbackAction<P2PSessionConnectFail> func) Parameters func CallbackAction<P2PSessionConnectFail> Returns IDisposable OnP2PSessionRequest(CallbackAction<P2PSessionRequest>) public IDisposable OnP2PSessionRequest(CallbackAction<P2PSessionRequest> func) Parameters func CallbackAction<P2PSessionRequest> Returns IDisposable OnSocketStatusCallback(CallbackAction<SocketStatusCallback>) public IDisposable OnSocketStatusCallback(CallbackAction<SocketStatusCallback> func) Parameters func CallbackAction<SocketStatusCallback> Returns IDisposable ReadP2PPacket(Span<byte>, out uint, out CSteamID, int) public bool ReadP2PPacket(Span<byte> dest, out uint msgSize, out CSteamID psteamIDRemote, int channel) Parameters dest Span<byte> msgSize uint psteamIDRemote CSteamID channel int Returns bool RetrieveData(SNetListenSocket, Span<byte>, out uint, out SNetSocket) public bool RetrieveData(SNetListenSocket listenSocket, Span<byte> dest, out uint msgSize, out SNetSocket hSocket) Parameters listenSocket SNetListenSocket dest Span<byte> msgSize uint hSocket SNetSocket Returns bool RetrieveDataFromSocket(SNetSocket, Span<byte>, out uint) public bool RetrieveDataFromSocket(SNetSocket socket, Span<byte> dest, out uint msgSize) Parameters socket SNetSocket dest Span<byte> msgSize uint Returns bool SendDataOnSocket(SNetSocket, Span<byte>, bool) public bool SendDataOnSocket(SNetSocket socket, Span<byte> data, bool reliable) Parameters socket SNetSocket data Span<byte> reliable bool Returns bool SendP2PPacket(CSteamID, ReadOnlySpan<byte>, EP2PSend, int) public bool SendP2PPacket(CSteamID steamIDRemote, ReadOnlySpan<byte> data, EP2PSend p2pSendType, int channel) Parameters steamIDRemote CSteamID data ReadOnlySpan<byte> p2pSendType EP2PSend channel int Returns bool"
  },
  "api/MarymoorStudios.Core.Steamworks.ISteamNetworkingConnectionSignaling.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ISteamNetworkingConnectionSignaling.html",
    "title": "Struct ISteamNetworkingConnectionSignaling",
    "summary": "Struct ISteamNetworkingConnectionSignaling Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct ISteamNetworkingConnectionSignaling Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object)"
  },
  "api/MarymoorStudios.Core.Steamworks.ISteamNetworkingFakeUDPPort.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ISteamNetworkingFakeUDPPort.html",
    "title": "Class ISteamNetworkingFakeUDPPort",
    "summary": "Class ISteamNetworkingFakeUDPPort Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public sealed class ISteamNetworkingFakeUDPPort : SteamNativeObject Inheritance object SteamNativeObject ISteamNetworkingFakeUDPPort Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods DestroyFakeUDPPort() public void DestroyFakeUDPPort() ReceiveMessages(Span<SteamNetworkingMessagePtr>) public int ReceiveMessages(Span<SteamNetworkingMessagePtr> ppOutMessages) Parameters ppOutMessages Span<SteamNetworkingMessagePtr> Returns int ScheduleCleanup(in SteamNetworkingIPAddr) public void ScheduleCleanup(in SteamNetworkingIPAddr remoteAddress) Parameters remoteAddress SteamNetworkingIPAddr SendMessageToFakeIP(in SteamNetworkingIPAddr, ReadOnlySpan<byte>, int) public EResult SendMessageToFakeIP(in SteamNetworkingIPAddr remoteAddress, ReadOnlySpan<byte> data, int sendFlags) Parameters remoteAddress SteamNetworkingIPAddr data ReadOnlySpan<byte> sendFlags int Returns EResult"
  },
  "api/MarymoorStudios.Core.Steamworks.ISteamNetworkingMessages.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ISteamNetworkingMessages.html",
    "title": "Class ISteamNetworkingMessages",
    "summary": "Class ISteamNetworkingMessages Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public sealed class ISteamNetworkingMessages : SteamNativeObject Inheritance object SteamNativeObject ISteamNetworkingMessages Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Fields INTERFACE_VERSION public const string INTERFACE_VERSION = \"SteamNetworkingMessages002\" Field Value string Methods AcceptSessionWithUser(in SteamNetworkingIdentity) public bool AcceptSessionWithUser(in SteamNetworkingIdentity identityRemote) Parameters identityRemote SteamNetworkingIdentity Returns bool CloseChannelWithUser(in SteamNetworkingIdentity, int) public bool CloseChannelWithUser(in SteamNetworkingIdentity identityRemote, int localChannel) Parameters identityRemote SteamNetworkingIdentity localChannel int Returns bool CloseSessionWithUser(in SteamNetworkingIdentity) public bool CloseSessionWithUser(in SteamNetworkingIdentity identityRemote) Parameters identityRemote SteamNetworkingIdentity Returns bool GetSessionConnectionInfo(in SteamNetworkingIdentity, out SteamNetConnectionInfo, out SteamNetConnectionRealTimeStatus) public ESteamNetworkingConnectionState GetSessionConnectionInfo(in SteamNetworkingIdentity identityRemote, out SteamNetConnectionInfo connectionInfo, out SteamNetConnectionRealTimeStatus quickStatus) Parameters identityRemote SteamNetworkingIdentity connectionInfo SteamNetConnectionInfo quickStatus SteamNetConnectionRealTimeStatus Returns ESteamNetworkingConnectionState OnSteamNetworkingMessagesSessionFailed(CallbackAction<SteamNetworkingMessagesSessionFailed>) public IDisposable OnSteamNetworkingMessagesSessionFailed(CallbackAction<SteamNetworkingMessagesSessionFailed> func) Parameters func CallbackAction<SteamNetworkingMessagesSessionFailed> Returns IDisposable OnSteamNetworkingMessagesSessionRequest(CallbackAction<SteamNetworkingMessagesSessionRequest>) public IDisposable OnSteamNetworkingMessagesSessionRequest(CallbackAction<SteamNetworkingMessagesSessionRequest> func) Parameters func CallbackAction<SteamNetworkingMessagesSessionRequest> Returns IDisposable ReceiveMessagesOnChannel(int, Span<SteamNetworkingMessagePtr>) public int ReceiveMessagesOnChannel(int localChannel, Span<SteamNetworkingMessagePtr> ppOutMessages) Parameters localChannel int ppOutMessages Span<SteamNetworkingMessagePtr> Returns int SendMessageToUser(in SteamNetworkingIdentity, ReadOnlySpan<byte>, int, int) public EResult SendMessageToUser(in SteamNetworkingIdentity identityRemote, ReadOnlySpan<byte> data, int sendFlags, int remoteChannel) Parameters identityRemote SteamNetworkingIdentity data ReadOnlySpan<byte> sendFlags int remoteChannel int Returns EResult"
  },
  "api/MarymoorStudios.Core.Steamworks.ISteamNetworkingSignalingRecvContext.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ISteamNetworkingSignalingRecvContext.html",
    "title": "Struct ISteamNetworkingSignalingRecvContext",
    "summary": "Struct ISteamNetworkingSignalingRecvContext Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct ISteamNetworkingSignalingRecvContext Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object)"
  },
  "api/MarymoorStudios.Core.Steamworks.ISteamNetworkingSockets.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ISteamNetworkingSockets.html",
    "title": "Class ISteamNetworkingSockets",
    "summary": "Class ISteamNetworkingSockets Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public sealed class ISteamNetworkingSockets : SteamNativeObject Inheritance object SteamNativeObject ISteamNetworkingSockets Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Fields INTERFACE_VERSION public const string INTERFACE_VERSION = \"SteamNetworkingSockets012\" Field Value string Methods AcceptConnection(HSteamNetConnection) public EResult AcceptConnection(HSteamNetConnection conn) Parameters conn HSteamNetConnection Returns EResult BeginAsyncRequestFakeIP(int) public bool BeginAsyncRequestFakeIP(int numPorts) Parameters numPorts int Returns bool CloseConnection(HSteamNetConnection, int, string?, bool) public bool CloseConnection(HSteamNetConnection peer, int reason = 0, string? pszDebug = null, bool enableLinger = false) Parameters peer HSteamNetConnection reason int pszDebug string enableLinger bool Returns bool CloseListenSocket(HSteamListenSocket) public bool CloseListenSocket(HSteamListenSocket socket) Parameters socket HSteamListenSocket Returns bool ConfigureConnectionLanes(HSteamNetConnection, ReadOnlySpan<int>, ReadOnlySpan<ushort>) public EResult ConfigureConnectionLanes(HSteamNetConnection conn, ReadOnlySpan<int> lanePriorities, ReadOnlySpan<ushort> laneWeights) Parameters conn HSteamNetConnection lanePriorities ReadOnlySpan<int> laneWeights ReadOnlySpan<ushort> Returns EResult ConnectByIPAddress(in SteamNetworkingIPAddr, ReadOnlySpan<SteamNetworkingConfigValue>) public HSteamNetConnection ConnectByIPAddress(in SteamNetworkingIPAddr address, ReadOnlySpan<SteamNetworkingConfigValue> options) Parameters address SteamNetworkingIPAddr options ReadOnlySpan<SteamNetworkingConfigValue> Returns HSteamNetConnection ConnectP2P(in SteamNetworkingIdentity, int, ReadOnlySpan<SteamNetworkingConfigValue>) Connecting to a peer by id (instead of IP address). public HSteamNetConnection ConnectP2P(in SteamNetworkingIdentity identityRemote, int remoteVirtualPort, ReadOnlySpan<SteamNetworkingConfigValue> options) Parameters identityRemote SteamNetworkingIdentity The identity of the peer to connect to. remoteVirtualPort int The port to connect on (usually 0). options ReadOnlySpan<SteamNetworkingConfigValue> Connection options. Returns HSteamNetConnection The connection handle if successful, otherwise Invalid. Remarks Begin connecting to a peer that is identified using a platform-specific identifier. This uses the default rendezvous service, which depends on the platform and library configuration. (E.g. on Steam, it goes through the steam backend.) The traffic is relayed over the Steam Datagram Relay network. If you use this, you probably want to call InitRelayNetworkAccess() when your app initializes. If you need to set any initial config options, pass them here. See SteamNetworkingConfigValue for more about why this is preferable to setting the options \"immediately\" after creation. ConnectP2PCustomSignaling(ref ISteamNetworkingConnectionSignaling, in SteamNetworkingIdentity, int, ReadOnlySpan<SteamNetworkingConfigValue>) public HSteamNetConnection ConnectP2PCustomSignaling(ref ISteamNetworkingConnectionSignaling signaling, in SteamNetworkingIdentity peerIdentity, int remoteVirtualPort, ReadOnlySpan<SteamNetworkingConfigValue> options) Parameters signaling ISteamNetworkingConnectionSignaling peerIdentity SteamNetworkingIdentity remoteVirtualPort int options ReadOnlySpan<SteamNetworkingConfigValue> Returns HSteamNetConnection ConnectToHostedDedicatedServer(in SteamNetworkingIdentity, int, ReadOnlySpan<SteamNetworkingConfigValue>) public HSteamNetConnection ConnectToHostedDedicatedServer(in SteamNetworkingIdentity identityTarget, int remoteVirtualPort, ReadOnlySpan<SteamNetworkingConfigValue> options) Parameters identityTarget SteamNetworkingIdentity remoteVirtualPort int options ReadOnlySpan<SteamNetworkingConfigValue> Returns HSteamNetConnection CreateFakeUDPPort(int) public ISteamNetworkingFakeUDPPort CreateFakeUDPPort(int idxFakeServerPort) Parameters idxFakeServerPort int Returns ISteamNetworkingFakeUDPPort CreateHostedDedicatedServerListenSocket(int, ReadOnlySpan<SteamNetworkingConfigValue>) public HSteamListenSocket CreateHostedDedicatedServerListenSocket(int localVirtualPort, ReadOnlySpan<SteamNetworkingConfigValue> options) Parameters localVirtualPort int options ReadOnlySpan<SteamNetworkingConfigValue> Returns HSteamListenSocket CreateListenSocketIP(in SteamNetworkingIPAddr, ReadOnlySpan<SteamNetworkingConfigValue>) public HSteamListenSocket CreateListenSocketIP(in SteamNetworkingIPAddr localAddress, ReadOnlySpan<SteamNetworkingConfigValue> options) Parameters localAddress SteamNetworkingIPAddr options ReadOnlySpan<SteamNetworkingConfigValue> Returns HSteamListenSocket CreateListenSocketP2P(int, ReadOnlySpan<SteamNetworkingConfigValue>) Listen for connection by CSteamID through the Valve network. public HSteamListenSocket CreateListenSocketP2P(int localVirtualPort, ReadOnlySpan<SteamNetworkingConfigValue> options) Parameters localVirtualPort int The port to use in ConnectP2P(in SteamNetworkingIdentity, int, ReadOnlySpan<SteamNetworkingConfigValue>) . options ReadOnlySpan<SteamNetworkingConfigValue> Socket options. Returns HSteamListenSocket The socket handle if successful, otherwise Invalid. Remarks Like CreateListenSocketIP(in SteamNetworkingIPAddr, ReadOnlySpan<SteamNetworkingConfigValue>) , but clients will connect using ConnectP2P(in SteamNetworkingIdentity, int, ReadOnlySpan<SteamNetworkingConfigValue>) . The connection will be relayed through the Valve network. localVirtualPort specifies how clients can connect to this socket using ConnectP2P(in SteamNetworkingIdentity, int, ReadOnlySpan<SteamNetworkingConfigValue>) . It's very common for applications to only have one listening socket; in that case, use zero. If you need to open multiple listen sockets and have clients be able to connect to one or the other, then localVirtualPort should be a small integer (<1000) unique to each listen socket you create. If you are listening on a dedicated servers in known data center, then you can listen using this function instead of CreateHostedDedicatedServerListenSocket(int, ReadOnlySpan<SteamNetworkingConfigValue>) , to allow clients to connect without a ticket. Any user that owns the app and is signed in to Steam will be able to attempt to connect to your server. Also, a connection attempt may require the client to be connected to Steam, which is one more moving part that may fail. When tickets are used, then once a ticket is obtained, a client can connect to your server even if they got disconnected from Steam or Steam is offline. If you use this, you probably want to call InitRelayNetworkAccess() when your app initializes. If you need to set any initial config options, pass them here. See SteamNetworkingConfigValue for more about why this is preferable to setting the options \"immediately\" after creation. CreateListenSocketP2PFakeIP(int, ReadOnlySpan<SteamNetworkingConfigValue>) public HSteamListenSocket CreateListenSocketP2PFakeIP(int idxFakePort, ReadOnlySpan<SteamNetworkingConfigValue> options) Parameters idxFakePort int options ReadOnlySpan<SteamNetworkingConfigValue> Returns HSteamListenSocket CreatePollGroup() public HSteamNetPollGroup CreatePollGroup() Returns HSteamNetPollGroup CreateSocketPair(out HSteamNetConnection, out HSteamNetConnection, bool, in SteamNetworkingIdentity, in SteamNetworkingIdentity) public bool CreateSocketPair(out HSteamNetConnection outConnection1, out HSteamNetConnection outConnection2, bool useNetworkLoopback, in SteamNetworkingIdentity identity1, in SteamNetworkingIdentity identity2) Parameters outConnection1 HSteamNetConnection outConnection2 HSteamNetConnection useNetworkLoopback bool identity1 SteamNetworkingIdentity identity2 SteamNetworkingIdentity Returns bool DestroyPollGroup(HSteamNetPollGroup) public bool DestroyPollGroup(HSteamNetPollGroup pollGroup) Parameters pollGroup HSteamNetPollGroup Returns bool FindRelayAuthTicketForServer(in SteamNetworkingIdentity, int, out SteamDatagramRelayAuthTicket) public int FindRelayAuthTicketForServer(in SteamNetworkingIdentity identityGameServer, int remoteVirtualPort, out SteamDatagramRelayAuthTicket outParsedTicket) Parameters identityGameServer SteamNetworkingIdentity remoteVirtualPort int outParsedTicket SteamDatagramRelayAuthTicket Returns int FlushMessagesOnConnection(HSteamNetConnection) public EResult FlushMessagesOnConnection(HSteamNetConnection conn) Parameters conn HSteamNetConnection Returns EResult GetAuthenticationStatus(out SteamNetAuthenticationStatus) public ESteamNetworkingAvailability GetAuthenticationStatus(out SteamNetAuthenticationStatus details) Parameters details SteamNetAuthenticationStatus Returns ESteamNetworkingAvailability GetCertificateRequest(out int, Span<byte>, out string) public bool GetCertificateRequest(out int blobCount, Span<byte> blob, out string errMsg) Parameters blobCount int blob Span<byte> errMsg string Returns bool GetConnectionInfo(HSteamNetConnection, out SteamNetConnectionInfo) public bool GetConnectionInfo(HSteamNetConnection conn, out SteamNetConnectionInfo info) Parameters conn HSteamNetConnection info SteamNetConnectionInfo Returns bool GetConnectionName(HSteamNetConnection, Span<byte>) public bool GetConnectionName(HSteamNetConnection peer, Span<byte> pszName) Parameters peer HSteamNetConnection pszName Span<byte> Returns bool GetConnectionRealTimeStatus(HSteamNetConnection, out SteamNetConnectionRealTimeStatus, Span<SteamNetConnectionRealTimeLaneStatus>) public EResult GetConnectionRealTimeStatus(HSteamNetConnection conn, out SteamNetConnectionRealTimeStatus status, Span<SteamNetConnectionRealTimeLaneStatus> lanes) Parameters conn HSteamNetConnection status SteamNetConnectionRealTimeStatus lanes Span<SteamNetConnectionRealTimeLaneStatus> Returns EResult GetConnectionUserData(HSteamNetConnection) public long GetConnectionUserData(HSteamNetConnection peer) Parameters peer HSteamNetConnection Returns long GetDetailedConnectionStatus(HSteamNetConnection, Span<byte>) public int GetDetailedConnectionStatus(HSteamNetConnection conn, Span<byte> pszBuf) Parameters conn HSteamNetConnection pszBuf Span<byte> Returns int GetFakeIP(int, out SteamNetworkingFakeIPResult) public void GetFakeIP(int idxFirstPort, out SteamNetworkingFakeIPResult info) Parameters idxFirstPort int info SteamNetworkingFakeIPResult GetGameCoordinatorServerLogin(ref SteamDatagramGameCoordinatorServerLogin, out int, Span<byte>) public EResult GetGameCoordinatorServerLogin(ref SteamDatagramGameCoordinatorServerLogin loginInfo, out int signedBlobCount, Span<byte> blob) Parameters loginInfo SteamDatagramGameCoordinatorServerLogin signedBlobCount int blob Span<byte> Returns EResult GetHostedDedicatedServerAddress(out SteamDatagramHostedAddress) public EResult GetHostedDedicatedServerAddress(out SteamDatagramHostedAddress routing) Parameters routing SteamDatagramHostedAddress Returns EResult GetHostedDedicatedServerPOPID() public SteamNetworkingPOPID GetHostedDedicatedServerPOPID() Returns SteamNetworkingPOPID GetHostedDedicatedServerPort() public ushort GetHostedDedicatedServerPort() Returns ushort GetIdentity(out SteamNetworkingIdentity) public bool GetIdentity(out SteamNetworkingIdentity identity) Parameters identity SteamNetworkingIdentity Returns bool GetListenSocketAddress(HSteamListenSocket, out SteamNetworkingIPAddr) public bool GetListenSocketAddress(HSteamListenSocket socket, out SteamNetworkingIPAddr address) Parameters socket HSteamListenSocket address SteamNetworkingIPAddr Returns bool GetRemoteFakeIPForConnection(HSteamNetConnection, out SteamNetworkingIPAddr) public EResult GetRemoteFakeIPForConnection(HSteamNetConnection conn, out SteamNetworkingIPAddr outAddr) Parameters conn HSteamNetConnection outAddr SteamNetworkingIPAddr Returns EResult InitAuthentication() public ESteamNetworkingAvailability InitAuthentication() Returns ESteamNetworkingAvailability OnSteamNetAuthenticationStatus(CallbackAction<SteamNetAuthenticationStatus>) public IDisposable OnSteamNetAuthenticationStatus(CallbackAction<SteamNetAuthenticationStatus> func) Parameters func CallbackAction<SteamNetAuthenticationStatus> Returns IDisposable OnSteamNetConnectionStatusChangedCallback(CallbackAction<SteamNetConnectionStatusChangedCallback>) public IDisposable OnSteamNetConnectionStatusChangedCallback(CallbackAction<SteamNetConnectionStatusChangedCallback> func) Parameters func CallbackAction<SteamNetConnectionStatusChangedCallback> Returns IDisposable OnSteamNetworkingFakeIPResult(CallbackAction<SteamNetworkingFakeIPResult>) public IDisposable OnSteamNetworkingFakeIPResult(CallbackAction<SteamNetworkingFakeIPResult> func) Parameters func CallbackAction<SteamNetworkingFakeIPResult> Returns IDisposable ReceiveMessagesOnConnection(HSteamNetConnection, Span<SteamNetworkingMessagePtr>) public int ReceiveMessagesOnConnection(HSteamNetConnection conn, Span<SteamNetworkingMessagePtr> ppOutMessages) Parameters conn HSteamNetConnection ppOutMessages Span<SteamNetworkingMessagePtr> Returns int ReceiveMessagesOnPollGroup(HSteamNetPollGroup, Span<SteamNetworkingMessagePtr>) public int ReceiveMessagesOnPollGroup(HSteamNetPollGroup pollGroup, Span<SteamNetworkingMessagePtr> ppOutMessages) Parameters pollGroup HSteamNetPollGroup ppOutMessages Span<SteamNetworkingMessagePtr> Returns int ReceivedP2PCustomSignal(ReadOnlySpan<byte>, ref ISteamNetworkingSignalingRecvContext) public bool ReceivedP2PCustomSignal(ReadOnlySpan<byte> msg, ref ISteamNetworkingSignalingRecvContext context) Parameters msg ReadOnlySpan<byte> context ISteamNetworkingSignalingRecvContext Returns bool ReceivedRelayAuthTicket(ReadOnlySpan<byte>, out SteamDatagramRelayAuthTicket) public bool ReceivedRelayAuthTicket(ReadOnlySpan<byte> ticket, out SteamDatagramRelayAuthTicket outParsedTicket) Parameters ticket ReadOnlySpan<byte> outParsedTicket SteamDatagramRelayAuthTicket Returns bool ResetIdentity(in SteamNetworkingIdentity) public void ResetIdentity(in SteamNetworkingIdentity identity) Parameters identity SteamNetworkingIdentity RunCallbacks() public void RunCallbacks() SendMessageToConnection(HSteamNetConnection, ReadOnlySpan<byte>, int, out long) public EResult SendMessageToConnection(HSteamNetConnection conn, ReadOnlySpan<byte> data, int sendFlags, out long outMessageNumber) Parameters conn HSteamNetConnection data ReadOnlySpan<byte> sendFlags int outMessageNumber long Returns EResult SendMessages(ReadOnlySpan<SteamNetworkingMessagePtr>, Span<long>) public void SendMessages(ReadOnlySpan<SteamNetworkingMessagePtr> messages, Span<long> outMessageNumberOrResult) Parameters messages ReadOnlySpan<SteamNetworkingMessagePtr> outMessageNumberOrResult Span<long> SetCertificate(ReadOnlySpan<byte>, out string) public bool SetCertificate(ReadOnlySpan<byte> certificate, out string errMsg) Parameters certificate ReadOnlySpan<byte> errMsg string Returns bool SetConnectionName(HSteamNetConnection, string) public void SetConnectionName(HSteamNetConnection peer, string pszName) Parameters peer HSteamNetConnection pszName string SetConnectionPollGroup(HSteamNetConnection, HSteamNetPollGroup) public bool SetConnectionPollGroup(HSteamNetConnection conn, HSteamNetPollGroup pollGroup) Parameters conn HSteamNetConnection pollGroup HSteamNetPollGroup Returns bool SetConnectionUserData(HSteamNetConnection, long) public bool SetConnectionUserData(HSteamNetConnection peer, long userData) Parameters peer HSteamNetConnection userData long Returns bool UntilAuthentication(CancellationToken) Initializes authentication and waits until it is ready. public Promise UntilAuthentication(CancellationToken cancel = default) Parameters cancel CancellationToken Returns Promise Resolves ONLY when authentication has been successful. Remarks Indicate our desire to be ready participate in authenticated communications. If we are currently not ready, then steps will be taken to obtain the necessary certificates. (This includes a certificate for us, as well as any CA certificates needed to authenticate peers.) You can call this at program init time if you know that you are going to be making authenticated connections, so that we will be ready immediately when those connections are attempted. (Note that essentially all connections require authentication, with the exception of ordinary UDP connections with authentication disabled using k_ESteamNetworkingConfig_IP_AllowWithoutAuth.) If you don't call this function, we will wait until a feature is utilized that that necessitates these resources. You can also call this function to force a retry, if failure has occurred. Once we make an attempt and fail, we will not automatically retry. In this respect, the behavior of the system after trying and failing is the same as before the first attempt: attempting authenticated communication or calling this function will call the system to attempt to acquire the necessary resources. You can use GetAuthenticationStatus(out SteamNetAuthenticationStatus) or listen for SteamNetAuthenticationStatus to monitor the status."
  },
  "api/MarymoorStudios.Core.Steamworks.ISteamNetworkingUtils.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ISteamNetworkingUtils.html",
    "title": "Class ISteamNetworkingUtils",
    "summary": "Class ISteamNetworkingUtils Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public sealed class ISteamNetworkingUtils : SteamNativeObject Inheritance object SteamNativeObject ISteamNetworkingUtils Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Fields INTERFACE_VERSION public const string INTERFACE_VERSION = \"SteamNetworkingUtils004\" Field Value string Methods AllocateMessage(int) public SteamNetworkingMessagePtr AllocateMessage(int allocateBufferCount) Parameters allocateBufferCount int Returns SteamNetworkingMessagePtr CheckPingDataUpToDate(float) public bool CheckPingDataUpToDate(float maxAgeSeconds) Parameters maxAgeSeconds float Returns bool ConvertPingLocationToString(in SteamNetworkPingLocation, Span<byte>) public void ConvertPingLocationToString(in SteamNetworkPingLocation location, Span<byte> pszBuf) Parameters location SteamNetworkPingLocation pszBuf Span<byte> EstimatePingTimeBetweenTwoLocations(in SteamNetworkPingLocation, in SteamNetworkPingLocation) public int EstimatePingTimeBetweenTwoLocations(in SteamNetworkPingLocation location1, in SteamNetworkPingLocation location2) Parameters location1 SteamNetworkPingLocation location2 SteamNetworkPingLocation Returns int EstimatePingTimeFromLocalHost(in SteamNetworkPingLocation) public int EstimatePingTimeFromLocalHost(in SteamNetworkPingLocation remoteLocation) Parameters remoteLocation SteamNetworkPingLocation Returns int GetConfigValue(ESteamNetworkingConfigValue, ESteamNetworkingConfigScope, nint, out ESteamNetworkingConfigDataType, Span<byte>, out long) public ESteamNetworkingGetConfigValueResult GetConfigValue(ESteamNetworkingConfigValue value, ESteamNetworkingConfigScope scopeType, nint scopeObj, out ESteamNetworkingConfigDataType outDataType, Span<byte> result, out long resultCount) Parameters value ESteamNetworkingConfigValue scopeType ESteamNetworkingConfigScope scopeObj nint outDataType ESteamNetworkingConfigDataType result Span<byte> resultCount long Returns ESteamNetworkingGetConfigValueResult GetConfigValueInfo(ESteamNetworkingConfigValue, out ESteamNetworkingConfigDataType, out ESteamNetworkingConfigScope) public string? GetConfigValueInfo(ESteamNetworkingConfigValue value, out ESteamNetworkingConfigDataType outDataType, out ESteamNetworkingConfigScope outScope) Parameters value ESteamNetworkingConfigValue outDataType ESteamNetworkingConfigDataType outScope ESteamNetworkingConfigScope Returns string GetDirectPingToPOP(SteamNetworkingPOPID) public int GetDirectPingToPOP(SteamNetworkingPOPID popID) Parameters popID SteamNetworkingPOPID Returns int GetIPv4FakeIPType(uint) public ESteamNetworkingFakeIPType GetIPv4FakeIPType(uint ipv4) Parameters ipv4 uint Returns ESteamNetworkingFakeIPType GetLocalPingLocation(ref SteamNetworkPingLocation) public float GetLocalPingLocation(ref SteamNetworkPingLocation result) Parameters result SteamNetworkPingLocation Returns float GetLocalTimestamp() public SteamNetworkingMicroseconds GetLocalTimestamp() Returns SteamNetworkingMicroseconds GetPOPCount() public int GetPOPCount() Returns int GetPOPList(Span<SteamNetworkingPOPID>) public int GetPOPList(Span<SteamNetworkingPOPID> list) Parameters list Span<SteamNetworkingPOPID> Returns int GetPingToDataCenter(SteamNetworkingPOPID, out SteamNetworkingPOPID) public int GetPingToDataCenter(SteamNetworkingPOPID popID, out SteamNetworkingPOPID viaRelayPoP) Parameters popID SteamNetworkingPOPID viaRelayPoP SteamNetworkingPOPID Returns int GetRealIdentityForFakeIP(in SteamNetworkingIPAddr, out SteamNetworkingIdentity) public EResult GetRealIdentityForFakeIP(in SteamNetworkingIPAddr fakeIP, out SteamNetworkingIdentity outRealIdentity) Parameters fakeIP SteamNetworkingIPAddr outRealIdentity SteamNetworkingIdentity Returns EResult GetRelayNetworkStatus(out SteamRelayNetworkStatus) Fetch current status of the relay network. public ESteamNetworkingAvailability GetRelayNetworkStatus(out SteamRelayNetworkStatus details) Parameters details SteamRelayNetworkStatus Detailed information about the current relay status. Returns ESteamNetworkingAvailability The current value of Avail. Remarks SteamRelayNetworkStatus is also a callback. It will be triggered on both the user and gameserver interfaces any time the status changes, or ping measurement starts or stops. If you want more details, see details. InitRelayNetworkAccess() Initiates (asynchronous) initialization of the Steam Datagram Relay (SDR) Network. public void InitRelayNetworkAccess() Remarks If you know that you are going to be using the relay network (for example, because you anticipate making P2P connections), call this to initialize the relay network. If you do not call this, the initialization will be delayed until the first time you use a feature that requires access to the relay network, which will delay that first access. You can also call this to force a retry if the previous attempt has failed. Performing any action that requires access to the relay network will also trigger a retry, and so calling this function is never strictly necessary, but it can be useful to call it at program launch time, if access to the relay network is anticipated. Use GetRelayNetworkStatus(out SteamRelayNetworkStatus) or listen for SteamRelayNetworkStatus callbacks to know when initialization has completed. Typically, initialization completes in a few seconds. Note: dedicated servers hosted in known data centers do *not* need to call this, since they do not make routing decisions. However, if the dedicated server will be using P2P functionality, it will act as a client and this should be called. IsFakeIPv4(uint) public bool IsFakeIPv4(uint ipv4) Parameters ipv4 uint Returns bool IterateGenericEditableConfigValues(ESteamNetworkingConfigValue, bool) public ESteamNetworkingConfigValue IterateGenericEditableConfigValues(ESteamNetworkingConfigValue current, bool enumerateDevVars) Parameters current ESteamNetworkingConfigValue enumerateDevVars bool Returns ESteamNetworkingConfigValue OnSteamRelayNetworkStatus(CallbackAction<SteamRelayNetworkStatus>) public IDisposable OnSteamRelayNetworkStatus(CallbackAction<SteamRelayNetworkStatus> func) Parameters func CallbackAction<SteamRelayNetworkStatus> Returns IDisposable ParsePingLocationString(string, ref SteamNetworkPingLocation) public bool ParsePingLocationString(string pszString, ref SteamNetworkPingLocation result) Parameters pszString string result SteamNetworkPingLocation Returns bool SetConfigValue(ESteamNetworkingConfigValue, ESteamNetworkingConfigScope, nint, ESteamNetworkingConfigDataType, ReadOnlySpan<byte>) public bool SetConfigValue(ESteamNetworkingConfigValue value, ESteamNetworkingConfigScope scopeType, nint scopeObj, ESteamNetworkingConfigDataType dataType, ReadOnlySpan<byte> arg) Parameters value ESteamNetworkingConfigValue scopeType ESteamNetworkingConfigScope scopeObj nint dataType ESteamNetworkingConfigDataType arg ReadOnlySpan<byte> Returns bool SetConfigValueStruct(in SteamNetworkingConfigValue, ESteamNetworkingConfigScope, nint) public bool SetConfigValueStruct(in SteamNetworkingConfigValue opt, ESteamNetworkingConfigScope scopeType, nint scopeObj) Parameters opt SteamNetworkingConfigValue scopeType ESteamNetworkingConfigScope scopeObj nint Returns bool SetConnectionConfigValueFloat(HSteamNetConnection, ESteamNetworkingConfigValue, float) public bool SetConnectionConfigValueFloat(HSteamNetConnection conn, ESteamNetworkingConfigValue value, float val) Parameters conn HSteamNetConnection value ESteamNetworkingConfigValue val float Returns bool SetConnectionConfigValueInt32(HSteamNetConnection, ESteamNetworkingConfigValue, int) public bool SetConnectionConfigValueInt32(HSteamNetConnection conn, ESteamNetworkingConfigValue value, int val) Parameters conn HSteamNetConnection value ESteamNetworkingConfigValue val int Returns bool SetConnectionConfigValueString(HSteamNetConnection, ESteamNetworkingConfigValue, string) public bool SetConnectionConfigValueString(HSteamNetConnection conn, ESteamNetworkingConfigValue value, string val) Parameters conn HSteamNetConnection value ESteamNetworkingConfigValue val string Returns bool SetDebugOutputFunction(ESteamNetworkingSocketsDebugOutputType, Action<ESteamNetworkingSocketsDebugOutputType, string>) public IDisposable SetDebugOutputFunction(ESteamNetworkingSocketsDebugOutputType detailLevel, Action<ESteamNetworkingSocketsDebugOutputType, string> function) Parameters detailLevel ESteamNetworkingSocketsDebugOutputType function Action<ESteamNetworkingSocketsDebugOutputType, string> Returns IDisposable SetGlobalCallback_FakeIPResult(SteamEventAction<SteamNetworkingFakeIPResult>) public IDisposable SetGlobalCallback_FakeIPResult(SteamEventAction<SteamNetworkingFakeIPResult> callback) Parameters callback SteamEventAction<SteamNetworkingFakeIPResult> Returns IDisposable SetGlobalCallback_MessagesSessionFailed(SteamEventAction<SteamNetworkingMessagesSessionFailed>) public IDisposable SetGlobalCallback_MessagesSessionFailed(SteamEventAction<SteamNetworkingMessagesSessionFailed> callback) Parameters callback SteamEventAction<SteamNetworkingMessagesSessionFailed> Returns IDisposable SetGlobalCallback_MessagesSessionRequest(SteamEventAction<SteamNetworkingMessagesSessionRequest>) public IDisposable SetGlobalCallback_MessagesSessionRequest(SteamEventAction<SteamNetworkingMessagesSessionRequest> callback) Parameters callback SteamEventAction<SteamNetworkingMessagesSessionRequest> Returns IDisposable SetGlobalCallback_SteamNetAuthenticationStatusChanged(SteamEventAction<SteamNetAuthenticationStatus>) public IDisposable SetGlobalCallback_SteamNetAuthenticationStatusChanged(SteamEventAction<SteamNetAuthenticationStatus> callback) Parameters callback SteamEventAction<SteamNetAuthenticationStatus> Returns IDisposable SetGlobalCallback_SteamNetConnectionStatusChanged(SteamEventAction<SteamNetConnectionStatusChangedCallback>) public IDisposable SetGlobalCallback_SteamNetConnectionStatusChanged(SteamEventAction<SteamNetConnectionStatusChangedCallback> callback) Parameters callback SteamEventAction<SteamNetConnectionStatusChangedCallback> Returns IDisposable SetGlobalCallback_SteamRelayNetworkStatusChanged(SteamEventAction<SteamRelayNetworkStatus>) public IDisposable SetGlobalCallback_SteamRelayNetworkStatusChanged(SteamEventAction<SteamRelayNetworkStatus> callback) Parameters callback SteamEventAction<SteamRelayNetworkStatus> Returns IDisposable SetGlobalConfigValueFloat(ESteamNetworkingConfigValue, float) public bool SetGlobalConfigValueFloat(ESteamNetworkingConfigValue value, float val) Parameters value ESteamNetworkingConfigValue val float Returns bool SetGlobalConfigValueInt32(ESteamNetworkingConfigValue, int) public bool SetGlobalConfigValueInt32(ESteamNetworkingConfigValue value, int val) Parameters value ESteamNetworkingConfigValue val int Returns bool SetGlobalConfigValuePtr(ESteamNetworkingConfigValue, Span<byte>) public bool SetGlobalConfigValuePtr(ESteamNetworkingConfigValue value, Span<byte> val) Parameters value ESteamNetworkingConfigValue val Span<byte> Returns bool SetGlobalConfigValueString(ESteamNetworkingConfigValue, string) public bool SetGlobalConfigValueString(ESteamNetworkingConfigValue value, string val) Parameters value ESteamNetworkingConfigValue val string Returns bool SteamNetworkingIPAddr_GetFakeIPType(in SteamNetworkingIPAddr) public ESteamNetworkingFakeIPType SteamNetworkingIPAddr_GetFakeIPType(in SteamNetworkingIPAddr addr) Parameters addr SteamNetworkingIPAddr Returns ESteamNetworkingFakeIPType SteamNetworkingIPAddr_ParseString(out SteamNetworkingIPAddr, string) public bool SteamNetworkingIPAddr_ParseString(out SteamNetworkingIPAddr addr, string pszStr) Parameters addr SteamNetworkingIPAddr pszStr string Returns bool SteamNetworkingIPAddr_ToString(in SteamNetworkingIPAddr, Span<byte>, bool) public void SteamNetworkingIPAddr_ToString(in SteamNetworkingIPAddr addr, Span<byte> buf, bool withPort) Parameters addr SteamNetworkingIPAddr buf Span<byte> withPort bool SteamNetworkingIdentity_ParseString(out SteamNetworkingIdentity, string) public bool SteamNetworkingIdentity_ParseString(out SteamNetworkingIdentity identity, string pszStr) Parameters identity SteamNetworkingIdentity pszStr string Returns bool SteamNetworkingIdentity_ToString(in SteamNetworkingIdentity, Span<byte>) public void SteamNetworkingIdentity_ToString(in SteamNetworkingIdentity identity, Span<byte> buf) Parameters identity SteamNetworkingIdentity buf Span<byte> UntilRelayNetworkAccess(CancellationToken) Initializes the Steam Datagram Relay (SDR) Network and waits until it is ready. public Promise UntilRelayNetworkAccess(CancellationToken cancel = default) Parameters cancel CancellationToken Returns Promise Resolves ONLY when the relay network has successfully connected. Remarks If you know that you are going to be using the relay network (for example, because you anticipate making P2P connections), call this to initialize the relay network. If you do not call this, the initialization will be delayed until the first time you use a feature that requires access to the relay network, which will delay that first access. You can also call this to force a retry if the previous attempt has failed. Performing any action that requires access to the relay network will also trigger a retry, and so calling this function is never strictly necessary, but it can be useful to call it at program launch time, if access to the relay network is anticipated. This method resolves ONLY when the relay network has successfully initialized. To determine more detailed status of an initialization in progress use GetRelayNetworkStatus(out SteamRelayNetworkStatus) or listen for SteamRelayNetworkStatus callbacks. Typically, initialization completes in a few seconds. Note: dedicated servers hosted in known data centers do *not* need to call this, since they do not make routing decisions. However, if the dedicated server will be using P2P functionality, it will act as a client and this should be called."
  },
  "api/MarymoorStudios.Core.Steamworks.ISteamParentalSettings.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ISteamParentalSettings.html",
    "title": "Class ISteamParentalSettings",
    "summary": "Class ISteamParentalSettings Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public sealed class ISteamParentalSettings : SteamNativeObject Inheritance object SteamNativeObject ISteamParentalSettings Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Fields INTERFACE_VERSION public const string INTERFACE_VERSION = \"STEAMPARENTALSETTINGS_INTERFACE_VERSION001\" Field Value string Methods BIsAppBlocked(AppId) public bool BIsAppBlocked(AppId appId) Parameters appId AppId Returns bool BIsAppInBlockList(AppId) public bool BIsAppInBlockList(AppId appId) Parameters appId AppId Returns bool BIsFeatureBlocked(EParentalFeature) public bool BIsFeatureBlocked(EParentalFeature feature) Parameters feature EParentalFeature Returns bool BIsFeatureInBlockList(EParentalFeature) public bool BIsFeatureInBlockList(EParentalFeature feature) Parameters feature EParentalFeature Returns bool BIsParentalLockEnabled() public bool BIsParentalLockEnabled() Returns bool BIsParentalLockLocked() public bool BIsParentalLockLocked() Returns bool OnSteamParentalSettingsChanged(CallbackAction<SteamParentalSettingsChanged>) public IDisposable OnSteamParentalSettingsChanged(CallbackAction<SteamParentalSettingsChanged> func) Parameters func CallbackAction<SteamParentalSettingsChanged> Returns IDisposable"
  },
  "api/MarymoorStudios.Core.Steamworks.ISteamParties.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ISteamParties.html",
    "title": "Class ISteamParties",
    "summary": "Class ISteamParties Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public sealed class ISteamParties : SteamNativeObject Inheritance object SteamNativeObject ISteamParties Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Fields INTERFACE_VERSION public const string INTERFACE_VERSION = \"SteamParties002\" Field Value string Methods CancelReservation(PartyBeaconID, CSteamID) public void CancelReservation(PartyBeaconID beacon, CSteamID steamIDUser) Parameters beacon PartyBeaconID steamIDUser CSteamID ChangeNumOpenSlots(PartyBeaconID, uint) public Promise<ChangeNumOpenSlotsCallback> ChangeNumOpenSlots(PartyBeaconID beacon, uint openSlots) Parameters beacon PartyBeaconID openSlots uint Returns Promise<ChangeNumOpenSlotsCallback> CreateBeacon(uint, out SteamPartyBeaconLocation, string, string) public Promise<CreateBeaconCallback> CreateBeacon(uint openSlots, out SteamPartyBeaconLocation beaconLocation, string connectString, string metadata) Parameters openSlots uint beaconLocation SteamPartyBeaconLocation connectString string metadata string Returns Promise<CreateBeaconCallback> DestroyBeacon(PartyBeaconID) public bool DestroyBeacon(PartyBeaconID beacon) Parameters beacon PartyBeaconID Returns bool GetAvailableBeaconLocations(out SteamPartyBeaconLocation, uint) public bool GetAvailableBeaconLocations(out SteamPartyBeaconLocation locationList, uint maxNumLocations) Parameters locationList SteamPartyBeaconLocation maxNumLocations uint Returns bool GetBeaconByIndex(uint) public PartyBeaconID GetBeaconByIndex(uint index) Parameters index uint Returns PartyBeaconID GetBeaconDetails(PartyBeaconID, out CSteamID, out SteamPartyBeaconLocation, Span<byte>) public bool GetBeaconDetails(PartyBeaconID beaconID, out CSteamID steamIDBeaconOwner, out SteamPartyBeaconLocation location, Span<byte> metadata) Parameters beaconID PartyBeaconID steamIDBeaconOwner CSteamID location SteamPartyBeaconLocation metadata Span<byte> Returns bool GetBeaconLocationData(SteamPartyBeaconLocation, ESteamPartyBeaconLocationData, Span<byte>) public bool GetBeaconLocationData(SteamPartyBeaconLocation beaconLocation, ESteamPartyBeaconLocationData data, Span<byte> dataStringOut) Parameters beaconLocation SteamPartyBeaconLocation data ESteamPartyBeaconLocationData dataStringOut Span<byte> Returns bool GetNumActiveBeacons() public uint GetNumActiveBeacons() Returns uint GetNumAvailableBeaconLocations(out uint) public bool GetNumAvailableBeaconLocations(out uint puNumLocations) Parameters puNumLocations uint Returns bool JoinParty(PartyBeaconID) public Promise<JoinPartyCallback> JoinParty(PartyBeaconID beaconID) Parameters beaconID PartyBeaconID Returns Promise<JoinPartyCallback> OnActiveBeaconsUpdated(CallbackAction<ActiveBeaconsUpdated>) public IDisposable OnActiveBeaconsUpdated(CallbackAction<ActiveBeaconsUpdated> func) Parameters func CallbackAction<ActiveBeaconsUpdated> Returns IDisposable OnAvailableBeaconLocationsUpdated(CallbackAction<AvailableBeaconLocationsUpdated>) public IDisposable OnAvailableBeaconLocationsUpdated(CallbackAction<AvailableBeaconLocationsUpdated> func) Parameters func CallbackAction<AvailableBeaconLocationsUpdated> Returns IDisposable OnReservationCompleted(PartyBeaconID, CSteamID) public void OnReservationCompleted(PartyBeaconID beacon, CSteamID steamIDUser) Parameters beacon PartyBeaconID steamIDUser CSteamID OnReservationNotificationCallback(CallbackAction<ReservationNotificationCallback>) public IDisposable OnReservationNotificationCallback(CallbackAction<ReservationNotificationCallback> func) Parameters func CallbackAction<ReservationNotificationCallback> Returns IDisposable"
  },
  "api/MarymoorStudios.Core.Steamworks.ISteamRemotePlay.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ISteamRemotePlay.html",
    "title": "Class ISteamRemotePlay",
    "summary": "Class ISteamRemotePlay Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public sealed class ISteamRemotePlay : SteamNativeObject Inheritance object SteamNativeObject ISteamRemotePlay Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Fields INTERFACE_VERSION public const string INTERFACE_VERSION = \"STEAMREMOTEPLAY_INTERFACE_VERSION003\" Field Value string Methods BEnableRemotePlayTogetherDirectInput() public bool BEnableRemotePlayTogetherDirectInput() Returns bool BGetSessionClientResolution(RemotePlaySessionID, out int, out int) public bool BGetSessionClientResolution(RemotePlaySessionID sessionID, out int resolutionX, out int resolutionY) Parameters sessionID RemotePlaySessionID resolutionX int resolutionY int Returns bool BSendRemotePlayTogetherInvite(CSteamID) public bool BSendRemotePlayTogetherInvite(CSteamID steamIDFriend) Parameters steamIDFriend CSteamID Returns bool CreateMouseCursor(int, int, int, int, ReadOnlySpan<byte>, int) public RemotePlayCursorID CreateMouseCursor(int width, int height, int hotX, int hotY, ReadOnlySpan<byte> bGRA, int pitch) Parameters width int height int hotX int hotY int bGRA ReadOnlySpan<byte> pitch int Returns RemotePlayCursorID DisableRemotePlayTogetherDirectInput() public void DisableRemotePlayTogetherDirectInput() GetInput(out RemotePlayInput, uint) public uint GetInput(out RemotePlayInput input, uint maxEvents) Parameters input RemotePlayInput maxEvents uint Returns uint GetSessionClientFormFactor(RemotePlaySessionID) public ESteamDeviceFormFactor GetSessionClientFormFactor(RemotePlaySessionID sessionID) Parameters sessionID RemotePlaySessionID Returns ESteamDeviceFormFactor GetSessionClientName(RemotePlaySessionID) public string GetSessionClientName(RemotePlaySessionID sessionID) Parameters sessionID RemotePlaySessionID Returns string GetSessionCount() public uint GetSessionCount() Returns uint GetSessionID(int) public RemotePlaySessionID GetSessionID(int sessionIndex) Parameters sessionIndex int Returns RemotePlaySessionID GetSessionSteamID(RemotePlaySessionID) public CSteamID GetSessionSteamID(RemotePlaySessionID sessionID) Parameters sessionID RemotePlaySessionID Returns CSteamID OnSteamRemotePlaySessionConnected(CallbackAction<SteamRemotePlaySessionConnected>) public IDisposable OnSteamRemotePlaySessionConnected(CallbackAction<SteamRemotePlaySessionConnected> func) Parameters func CallbackAction<SteamRemotePlaySessionConnected> Returns IDisposable OnSteamRemotePlaySessionDisconnected(CallbackAction<SteamRemotePlaySessionDisconnected>) public IDisposable OnSteamRemotePlaySessionDisconnected(CallbackAction<SteamRemotePlaySessionDisconnected> func) Parameters func CallbackAction<SteamRemotePlaySessionDisconnected> Returns IDisposable OnSteamRemotePlayTogetherGuestInvite(CallbackAction<SteamRemotePlayTogetherGuestInvite>) public IDisposable OnSteamRemotePlayTogetherGuestInvite(CallbackAction<SteamRemotePlayTogetherGuestInvite> func) Parameters func CallbackAction<SteamRemotePlayTogetherGuestInvite> Returns IDisposable SetMouseCursor(RemotePlaySessionID, RemotePlayCursorID) public void SetMouseCursor(RemotePlaySessionID sessionID, RemotePlayCursorID cursorID) Parameters sessionID RemotePlaySessionID cursorID RemotePlayCursorID SetMousePosition(RemotePlaySessionID, float, float) public void SetMousePosition(RemotePlaySessionID sessionID, float normalizedX, float normalizedY) Parameters sessionID RemotePlaySessionID normalizedX float normalizedY float SetMouseVisibility(RemotePlaySessionID, bool) public void SetMouseVisibility(RemotePlaySessionID sessionID, bool visible) Parameters sessionID RemotePlaySessionID visible bool ShowRemotePlayTogetherUI() public bool ShowRemotePlayTogetherUI() Returns bool"
  },
  "api/MarymoorStudios.Core.Steamworks.ISteamRemoteStorage.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ISteamRemoteStorage.html",
    "title": "Class ISteamRemoteStorage",
    "summary": "Class ISteamRemoteStorage Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public sealed class ISteamRemoteStorage : SteamNativeObject Inheritance object SteamNativeObject ISteamRemoteStorage Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Fields INTERFACE_VERSION public const string INTERFACE_VERSION = \"STEAMREMOTESTORAGE_INTERFACE_VERSION016\" Field Value string Methods BeginFileWriteBatch() public bool BeginFileWriteBatch() Returns bool CommitPublishedFileUpdate(PublishedFileUpdateHandle) public Promise<RemoteStorageUpdatePublishedFileResult> CommitPublishedFileUpdate(PublishedFileUpdateHandle updateHandle) Parameters updateHandle PublishedFileUpdateHandle Returns Promise<RemoteStorageUpdatePublishedFileResult> CreatePublishedFileUpdateRequest(PublishedFileId) public PublishedFileUpdateHandle CreatePublishedFileUpdateRequest(PublishedFileId publishedFileId) Parameters publishedFileId PublishedFileId Returns PublishedFileUpdateHandle DeletePublishedFile(PublishedFileId) public Promise<RemoteStorageDeletePublishedFileResult> DeletePublishedFile(PublishedFileId publishedFileId) Parameters publishedFileId PublishedFileId Returns Promise<RemoteStorageDeletePublishedFileResult> EndFileWriteBatch() public bool EndFileWriteBatch() Returns bool EnumeratePublishedFilesByUserAction(EWorkshopFileAction, uint) public Promise<RemoteStorageEnumeratePublishedFilesByUserActionResult> EnumeratePublishedFilesByUserAction(EWorkshopFileAction action, uint startIndex) Parameters action EWorkshopFileAction startIndex uint Returns Promise<RemoteStorageEnumeratePublishedFilesByUserActionResult> EnumeratePublishedWorkshopFiles(EWorkshopEnumerationType, uint, uint, uint, in SteamParamStringArray, in SteamParamStringArray) public Promise<RemoteStorageEnumerateWorkshopFilesResult> EnumeratePublishedWorkshopFiles(EWorkshopEnumerationType enumerationType, uint startIndex, uint count, uint days, in SteamParamStringArray tags, in SteamParamStringArray userTags) Parameters enumerationType EWorkshopEnumerationType startIndex uint count uint days uint tags SteamParamStringArray userTags SteamParamStringArray Returns Promise<RemoteStorageEnumerateWorkshopFilesResult> EnumerateUserPublishedFiles(uint) public Promise<RemoteStorageEnumerateUserPublishedFilesResult> EnumerateUserPublishedFiles(uint startIndex) Parameters startIndex uint Returns Promise<RemoteStorageEnumerateUserPublishedFilesResult> EnumerateUserSharedWorkshopFiles(CSteamID, uint, in SteamParamStringArray, in SteamParamStringArray) public Promise<RemoteStorageEnumerateUserPublishedFilesResult> EnumerateUserSharedWorkshopFiles(CSteamID steamId, uint startIndex, in SteamParamStringArray requiredTags, in SteamParamStringArray excludedTags) Parameters steamId CSteamID startIndex uint requiredTags SteamParamStringArray excludedTags SteamParamStringArray Returns Promise<RemoteStorageEnumerateUserPublishedFilesResult> EnumerateUserSubscribedFiles(uint) public Promise<RemoteStorageEnumerateUserSubscribedFilesResult> EnumerateUserSubscribedFiles(uint startIndex) Parameters startIndex uint Returns Promise<RemoteStorageEnumerateUserSubscribedFilesResult> FileDelete(string) public bool FileDelete(string file) Parameters file string Returns bool FileExists(string) public bool FileExists(string file) Parameters file string Returns bool FileForget(string) public bool FileForget(string file) Parameters file string Returns bool FilePersisted(string) public bool FilePersisted(string file) Parameters file string Returns bool FileRead(string, Span<byte>) public int FileRead(string file, Span<byte> data) Parameters file string data Span<byte> Returns int FileReadAsync(string, uint, uint) public Promise<RemoteStorageFileReadAsyncComplete> FileReadAsync(string file, uint offset, uint toReadCount) Parameters file string offset uint toReadCount uint Returns Promise<RemoteStorageFileReadAsyncComplete> FileReadAsyncComplete(SteamAPICall, Span<byte>) public bool FileReadAsyncComplete(SteamAPICall readCall, Span<byte> buffer) Parameters readCall SteamAPICall buffer Span<byte> Returns bool FileShare(string) public Promise<RemoteStorageFileShareResult> FileShare(string file) Parameters file string Returns Promise<RemoteStorageFileShareResult> FileWrite(string, ReadOnlySpan<byte>) public bool FileWrite(string file, ReadOnlySpan<byte> data) Parameters file string data ReadOnlySpan<byte> Returns bool FileWriteAsync(string, ReadOnlySpan<byte>) public Promise<RemoteStorageFileWriteAsyncComplete> FileWriteAsync(string file, ReadOnlySpan<byte> data) Parameters file string data ReadOnlySpan<byte> Returns Promise<RemoteStorageFileWriteAsyncComplete> FileWriteStreamCancel(UGCFileWriteStreamHandle) public bool FileWriteStreamCancel(UGCFileWriteStreamHandle writeHandle) Parameters writeHandle UGCFileWriteStreamHandle Returns bool FileWriteStreamClose(UGCFileWriteStreamHandle) public bool FileWriteStreamClose(UGCFileWriteStreamHandle writeHandle) Parameters writeHandle UGCFileWriteStreamHandle Returns bool FileWriteStreamOpen(string) public UGCFileWriteStreamHandle FileWriteStreamOpen(string file) Parameters file string Returns UGCFileWriteStreamHandle FileWriteStreamWriteChunk(UGCFileWriteStreamHandle, ReadOnlySpan<byte>) public bool FileWriteStreamWriteChunk(UGCFileWriteStreamHandle writeHandle, ReadOnlySpan<byte> data) Parameters writeHandle UGCFileWriteStreamHandle data ReadOnlySpan<byte> Returns bool GetCachedUGCCount() public int GetCachedUGCCount() Returns int GetCachedUGCHandle(int) public UGCHandle GetCachedUGCHandle(int cachedContent) Parameters cachedContent int Returns UGCHandle GetFileCount() public int GetFileCount() Returns int GetFileNameAndSize(int, out int) public string GetFileNameAndSize(int file, out int fileSizeInBytes) Parameters file int fileSizeInBytes int Returns string GetFileSize(string) public int GetFileSize(string file) Parameters file string Returns int GetFileTimestamp(string) public long GetFileTimestamp(string file) Parameters file string Returns long GetLocalFileChange(int, out ERemoteStorageLocalFileChange, out ERemoteStorageFilePathType) public string GetLocalFileChange(int file, out ERemoteStorageLocalFileChange eChangeType, out ERemoteStorageFilePathType eFilePathType) Parameters file int eChangeType ERemoteStorageLocalFileChange eFilePathType ERemoteStorageFilePathType Returns string GetLocalFileChangeCount() public int GetLocalFileChangeCount() Returns int GetPublishedFileDetails(PublishedFileId, uint) public Promise<RemoteStorageGetPublishedFileDetailsResult> GetPublishedFileDetails(PublishedFileId publishedFileId, uint maxSecondsOld) Parameters publishedFileId PublishedFileId maxSecondsOld uint Returns Promise<RemoteStorageGetPublishedFileDetailsResult> GetPublishedItemVoteDetails(PublishedFileId) public Promise<RemoteStorageGetPublishedItemVoteDetailsResult> GetPublishedItemVoteDetails(PublishedFileId publishedFileId) Parameters publishedFileId PublishedFileId Returns Promise<RemoteStorageGetPublishedItemVoteDetailsResult> GetQuota(out ulong, out ulong) public bool GetQuota(out ulong totalBytes, out ulong puAvailableBytes) Parameters totalBytes ulong puAvailableBytes ulong Returns bool GetSyncPlatforms(string) public ERemoteStoragePlatform GetSyncPlatforms(string file) Parameters file string Returns ERemoteStoragePlatform GetUGCDetails(UGCHandle, out AppId, out string, out int, out CSteamID) public bool GetUGCDetails(UGCHandle content, out AppId appId, out string ppchName, out int fileSizeInBytes, out CSteamID steamIDOwner) Parameters content UGCHandle appId AppId ppchName string fileSizeInBytes int steamIDOwner CSteamID Returns bool GetUGCDownloadProgress(UGCHandle, out int, out int) public bool GetUGCDownloadProgress(UGCHandle content, out int bytesDownloaded, out int bytesExpected) Parameters content UGCHandle bytesDownloaded int bytesExpected int Returns bool GetUserPublishedItemVoteDetails(PublishedFileId) public Promise<RemoteStorageGetPublishedItemVoteDetailsResult> GetUserPublishedItemVoteDetails(PublishedFileId publishedFileId) Parameters publishedFileId PublishedFileId Returns Promise<RemoteStorageGetPublishedItemVoteDetailsResult> IsCloudEnabledForAccount() public bool IsCloudEnabledForAccount() Returns bool IsCloudEnabledForApp() public bool IsCloudEnabledForApp() Returns bool OnRemoteStorageEnumerateUserSharedWorkshopFilesResult(CallbackAction<RemoteStorageEnumerateUserSharedWorkshopFilesResult>) public IDisposable OnRemoteStorageEnumerateUserSharedWorkshopFilesResult(CallbackAction<RemoteStorageEnumerateUserSharedWorkshopFilesResult> func) Parameters func CallbackAction<RemoteStorageEnumerateUserSharedWorkshopFilesResult> Returns IDisposable OnRemoteStorageLocalFileChange(CallbackAction<RemoteStorageLocalFileChange>) public IDisposable OnRemoteStorageLocalFileChange(CallbackAction<RemoteStorageLocalFileChange> func) Parameters func CallbackAction<RemoteStorageLocalFileChange> Returns IDisposable OnRemoteStoragePublishFileResult(CallbackAction<RemoteStoragePublishFileResult>) public IDisposable OnRemoteStoragePublishFileResult(CallbackAction<RemoteStoragePublishFileResult> func) Parameters func CallbackAction<RemoteStoragePublishFileResult> Returns IDisposable OnRemoteStoragePublishedFileDeleted(CallbackAction<RemoteStoragePublishedFileDeleted>) public IDisposable OnRemoteStoragePublishedFileDeleted(CallbackAction<RemoteStoragePublishedFileDeleted> func) Parameters func CallbackAction<RemoteStoragePublishedFileDeleted> Returns IDisposable OnRemoteStoragePublishedFileSubscribed(CallbackAction<RemoteStoragePublishedFileSubscribed>) public IDisposable OnRemoteStoragePublishedFileSubscribed(CallbackAction<RemoteStoragePublishedFileSubscribed> func) Parameters func CallbackAction<RemoteStoragePublishedFileSubscribed> Returns IDisposable OnRemoteStoragePublishedFileUnsubscribed(CallbackAction<RemoteStoragePublishedFileUnsubscribed>) public IDisposable OnRemoteStoragePublishedFileUnsubscribed(CallbackAction<RemoteStoragePublishedFileUnsubscribed> func) Parameters func CallbackAction<RemoteStoragePublishedFileUnsubscribed> Returns IDisposable OnRemoteStoragePublishedFileUpdated(CallbackAction<RemoteStoragePublishedFileUpdated>) public IDisposable OnRemoteStoragePublishedFileUpdated(CallbackAction<RemoteStoragePublishedFileUpdated> func) Parameters func CallbackAction<RemoteStoragePublishedFileUpdated> Returns IDisposable OnRemoteStorageUserVoteDetails(CallbackAction<RemoteStorageUserVoteDetails>) public IDisposable OnRemoteStorageUserVoteDetails(CallbackAction<RemoteStorageUserVoteDetails> func) Parameters func CallbackAction<RemoteStorageUserVoteDetails> Returns IDisposable PublishVideo(EWorkshopVideoProvider, string, string, string, AppId, string, string, ERemoteStoragePublishedFileVisibility, in SteamParamStringArray) public Promise<RemoteStoragePublishFileProgress> PublishVideo(EWorkshopVideoProvider videoProvider, string videoAccount, string videoIdentifier, string previewFile, AppId consumerAppId, string title, string description, ERemoteStoragePublishedFileVisibility visibility, in SteamParamStringArray tags) Parameters videoProvider EWorkshopVideoProvider videoAccount string videoIdentifier string previewFile string consumerAppId AppId title string description string visibility ERemoteStoragePublishedFileVisibility tags SteamParamStringArray Returns Promise<RemoteStoragePublishFileProgress> PublishWorkshopFile(string, string, AppId, string, string, ERemoteStoragePublishedFileVisibility, in SteamParamStringArray, EWorkshopFileType) public Promise<RemoteStoragePublishFileProgress> PublishWorkshopFile(string file, string previewFile, AppId consumerAppId, string title, string description, ERemoteStoragePublishedFileVisibility visibility, in SteamParamStringArray tags, EWorkshopFileType workshopFileType) Parameters file string previewFile string consumerAppId AppId title string description string visibility ERemoteStoragePublishedFileVisibility tags SteamParamStringArray workshopFileType EWorkshopFileType Returns Promise<RemoteStoragePublishFileProgress> SetCloudEnabledForApp(bool) public void SetCloudEnabledForApp(bool enabled) Parameters enabled bool SetSyncPlatforms(string, ERemoteStoragePlatform) public bool SetSyncPlatforms(string file, ERemoteStoragePlatform remoteStoragePlatform) Parameters file string remoteStoragePlatform ERemoteStoragePlatform Returns bool SetUserPublishedFileAction(PublishedFileId, EWorkshopFileAction) public Promise<RemoteStorageSetUserPublishedFileActionResult> SetUserPublishedFileAction(PublishedFileId publishedFileId, EWorkshopFileAction action) Parameters publishedFileId PublishedFileId action EWorkshopFileAction Returns Promise<RemoteStorageSetUserPublishedFileActionResult> SubscribePublishedFile(PublishedFileId) public Promise<RemoteStorageSubscribePublishedFileResult> SubscribePublishedFile(PublishedFileId publishedFileId) Parameters publishedFileId PublishedFileId Returns Promise<RemoteStorageSubscribePublishedFileResult> UGCDownload(UGCHandle, uint) public Promise<RemoteStorageDownloadUGCResult> UGCDownload(UGCHandle content, uint priority) Parameters content UGCHandle priority uint Returns Promise<RemoteStorageDownloadUGCResult> UGCDownloadToLocation(UGCHandle, string, uint) public Promise<RemoteStorageDownloadUGCResult> UGCDownloadToLocation(UGCHandle content, string location, uint priority) Parameters content UGCHandle location string priority uint Returns Promise<RemoteStorageDownloadUGCResult> UGCRead(UGCHandle, Span<byte>, uint, EUGCReadAction) public int UGCRead(UGCHandle content, Span<byte> data, uint offset, EUGCReadAction action) Parameters content UGCHandle data Span<byte> offset uint action EUGCReadAction Returns int UnsubscribePublishedFile(PublishedFileId) public Promise<RemoteStorageUnsubscribePublishedFileResult> UnsubscribePublishedFile(PublishedFileId publishedFileId) Parameters publishedFileId PublishedFileId Returns Promise<RemoteStorageUnsubscribePublishedFileResult> UpdatePublishedFileDescription(PublishedFileUpdateHandle, string) public bool UpdatePublishedFileDescription(PublishedFileUpdateHandle updateHandle, string description) Parameters updateHandle PublishedFileUpdateHandle description string Returns bool UpdatePublishedFileFile(PublishedFileUpdateHandle, string) public bool UpdatePublishedFileFile(PublishedFileUpdateHandle updateHandle, string file) Parameters updateHandle PublishedFileUpdateHandle file string Returns bool UpdatePublishedFilePreviewFile(PublishedFileUpdateHandle, string) public bool UpdatePublishedFilePreviewFile(PublishedFileUpdateHandle updateHandle, string previewFile) Parameters updateHandle PublishedFileUpdateHandle previewFile string Returns bool UpdatePublishedFileSetChangeDescription(PublishedFileUpdateHandle, string) public bool UpdatePublishedFileSetChangeDescription(PublishedFileUpdateHandle updateHandle, string changeDescription) Parameters updateHandle PublishedFileUpdateHandle changeDescription string Returns bool UpdatePublishedFileTags(PublishedFileUpdateHandle, in SteamParamStringArray) public bool UpdatePublishedFileTags(PublishedFileUpdateHandle updateHandle, in SteamParamStringArray tags) Parameters updateHandle PublishedFileUpdateHandle tags SteamParamStringArray Returns bool UpdatePublishedFileTitle(PublishedFileUpdateHandle, string) public bool UpdatePublishedFileTitle(PublishedFileUpdateHandle updateHandle, string title) Parameters updateHandle PublishedFileUpdateHandle title string Returns bool UpdatePublishedFileVisibility(PublishedFileUpdateHandle, ERemoteStoragePublishedFileVisibility) public bool UpdatePublishedFileVisibility(PublishedFileUpdateHandle updateHandle, ERemoteStoragePublishedFileVisibility visibility) Parameters updateHandle PublishedFileUpdateHandle visibility ERemoteStoragePublishedFileVisibility Returns bool UpdateUserPublishedItemVote(PublishedFileId, bool) public Promise<RemoteStorageUpdateUserPublishedItemVoteResult> UpdateUserPublishedItemVote(PublishedFileId publishedFileId, bool voteUp) Parameters publishedFileId PublishedFileId voteUp bool Returns Promise<RemoteStorageUpdateUserPublishedItemVoteResult>"
  },
  "api/MarymoorStudios.Core.Steamworks.ISteamScreenshots.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ISteamScreenshots.html",
    "title": "Class ISteamScreenshots",
    "summary": "Class ISteamScreenshots Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public sealed class ISteamScreenshots : SteamNativeObject Inheritance object SteamNativeObject ISteamScreenshots Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Fields INTERFACE_VERSION public const string INTERFACE_VERSION = \"STEAMSCREENSHOTS_INTERFACE_VERSION003\" Field Value string Methods AddScreenshotToLibrary(string, string, int, int) public ScreenshotHandle AddScreenshotToLibrary(string filename, string thumbnailFilename, int width, int height) Parameters filename string thumbnailFilename string width int height int Returns ScreenshotHandle AddVRScreenshotToLibrary(EVRScreenshotType, string, string) public ScreenshotHandle AddVRScreenshotToLibrary(EVRScreenshotType type, string filename, string vrFilename) Parameters type EVRScreenshotType filename string vrFilename string Returns ScreenshotHandle HookScreenshots(bool) public void HookScreenshots(bool hook) Parameters hook bool IsScreenshotsHooked() public bool IsScreenshotsHooked() Returns bool OnScreenshotReady(CallbackAction<ScreenshotReady>) public IDisposable OnScreenshotReady(CallbackAction<ScreenshotReady> func) Parameters func CallbackAction<ScreenshotReady> Returns IDisposable OnScreenshotRequested(CallbackAction<ScreenshotRequested>) public IDisposable OnScreenshotRequested(CallbackAction<ScreenshotRequested> func) Parameters func CallbackAction<ScreenshotRequested> Returns IDisposable SetLocation(ScreenshotHandle, string) public bool SetLocation(ScreenshotHandle screenshot, string location) Parameters screenshot ScreenshotHandle location string Returns bool TagPublishedFile(ScreenshotHandle, PublishedFileId) public bool TagPublishedFile(ScreenshotHandle screenshot, PublishedFileId publishedFileID) Parameters screenshot ScreenshotHandle publishedFileID PublishedFileId Returns bool TagUser(ScreenshotHandle, CSteamID) public bool TagUser(ScreenshotHandle screenshot, CSteamID steamID) Parameters screenshot ScreenshotHandle steamID CSteamID Returns bool TriggerScreenshot() public void TriggerScreenshot() WriteScreenshot(Span<byte>, int, int) public ScreenshotHandle WriteScreenshot(Span<byte> rgb, int width, int height) Parameters rgb Span<byte> width int height int Returns ScreenshotHandle"
  },
  "api/MarymoorStudios.Core.Steamworks.ISteamTimeline.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ISteamTimeline.html",
    "title": "Class ISteamTimeline",
    "summary": "Class ISteamTimeline Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public sealed class ISteamTimeline : SteamNativeObject Inheritance object SteamNativeObject ISteamTimeline Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Fields INTERFACE_VERSION public const string INTERFACE_VERSION = \"STEAMTIMELINE_INTERFACE_V004\" Field Value string Methods AddGamePhaseTag(string, string, string, uint) public void AddGamePhaseTag(string tagName, string tagIcon, string tagGroup, uint priority) Parameters tagName string tagIcon string tagGroup string priority uint AddInstantaneousTimelineEvent(string, string, string, uint, float, ETimelineEventClipPriority) public TimelineEventHandle AddInstantaneousTimelineEvent(string title, string description, string icon, uint iconPriority, float startOffsetSeconds, ETimelineEventClipPriority possibleClip) Parameters title string description string icon string iconPriority uint startOffsetSeconds float possibleClip ETimelineEventClipPriority Returns TimelineEventHandle AddRangeTimelineEvent(string, string, string, uint, float, float, ETimelineEventClipPriority) public TimelineEventHandle AddRangeTimelineEvent(string title, string description, string icon, uint iconPriority, float startOffsetSeconds, float duration, ETimelineEventClipPriority possibleClip) Parameters title string description string icon string iconPriority uint startOffsetSeconds float duration float possibleClip ETimelineEventClipPriority Returns TimelineEventHandle ClearTimelineTooltip(float) public void ClearTimelineTooltip(float timeDelta) Parameters timeDelta float DoesEventRecordingExist(TimelineEventHandle) public Promise<SteamTimelineEventRecordingExists> DoesEventRecordingExist(TimelineEventHandle @event) Parameters event TimelineEventHandle Returns Promise<SteamTimelineEventRecordingExists> DoesGamePhaseRecordingExist(string) public Promise<SteamTimelineGamePhaseRecordingExists> DoesGamePhaseRecordingExist(string phaseID) Parameters phaseID string Returns Promise<SteamTimelineGamePhaseRecordingExists> EndGamePhase() public void EndGamePhase() EndRangeTimelineEvent(TimelineEventHandle, float) public void EndRangeTimelineEvent(TimelineEventHandle @event, float endOffsetSeconds) Parameters event TimelineEventHandle endOffsetSeconds float OpenOverlayToGamePhase(string) public void OpenOverlayToGamePhase(string phaseID) Parameters phaseID string OpenOverlayToTimelineEvent(TimelineEventHandle) public void OpenOverlayToTimelineEvent(TimelineEventHandle @event) Parameters event TimelineEventHandle RemoveTimelineEvent(TimelineEventHandle) public void RemoveTimelineEvent(TimelineEventHandle @event) Parameters event TimelineEventHandle SetGamePhaseAttribute(string, string, uint) public void SetGamePhaseAttribute(string attributeGroup, string attributeValue, uint priority) Parameters attributeGroup string attributeValue string priority uint SetGamePhaseID(string) public void SetGamePhaseID(string phaseID) Parameters phaseID string SetTimelineGameMode(ETimelineGameMode) public void SetTimelineGameMode(ETimelineGameMode mode) Parameters mode ETimelineGameMode SetTimelineTooltip(string, float) public void SetTimelineTooltip(string description, float timeDelta) Parameters description string timeDelta float StartGamePhase() public void StartGamePhase() StartRangeTimelineEvent(string, string, string, uint, float, ETimelineEventClipPriority) public TimelineEventHandle StartRangeTimelineEvent(string title, string description, string icon, uint priority, float startOffsetSeconds, ETimelineEventClipPriority possibleClip) Parameters title string description string icon string priority uint startOffsetSeconds float possibleClip ETimelineEventClipPriority Returns TimelineEventHandle UpdateRangeTimelineEvent(TimelineEventHandle, string, string, string, uint, ETimelineEventClipPriority) public void UpdateRangeTimelineEvent(TimelineEventHandle @event, string title, string description, string icon, uint priority, ETimelineEventClipPriority possibleClip) Parameters event TimelineEventHandle title string description string icon string priority uint possibleClip ETimelineEventClipPriority"
  },
  "api/MarymoorStudios.Core.Steamworks.ISteamUGC.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ISteamUGC.html",
    "title": "Class ISteamUGC",
    "summary": "Class ISteamUGC Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public sealed class ISteamUGC : SteamNativeObject Inheritance object SteamNativeObject ISteamUGC Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Fields INTERFACE_VERSION public const string INTERFACE_VERSION = \"STEAMUGC_INTERFACE_VERSION021\" Field Value string Methods AddAppDependency(PublishedFileId, AppId) public Promise<AddAppDependencyResult> AddAppDependency(PublishedFileId publishedFileID, AppId appId) Parameters publishedFileID PublishedFileId appId AppId Returns Promise<AddAppDependencyResult> AddContentDescriptor(UGCUpdateHandle, EUGCContentDescriptorID) public bool AddContentDescriptor(UGCUpdateHandle handle, EUGCContentDescriptorID descid) Parameters handle UGCUpdateHandle descid EUGCContentDescriptorID Returns bool AddDependency(PublishedFileId, PublishedFileId) public Promise<AddUGCDependencyResult> AddDependency(PublishedFileId parentPublishedFileID, PublishedFileId childPublishedFileID) Parameters parentPublishedFileID PublishedFileId childPublishedFileID PublishedFileId Returns Promise<AddUGCDependencyResult> AddExcludedTag(UGCQueryHandle, string) public bool AddExcludedTag(UGCQueryHandle handle, string tagName) Parameters handle UGCQueryHandle tagName string Returns bool AddItemKeyValueTag(UGCUpdateHandle, string, string) public bool AddItemKeyValueTag(UGCUpdateHandle handle, string key, string value) Parameters handle UGCUpdateHandle key string value string Returns bool AddItemPreviewFile(UGCUpdateHandle, string, EItemPreviewType) public bool AddItemPreviewFile(UGCUpdateHandle handle, string pszPreviewFile, EItemPreviewType type) Parameters handle UGCUpdateHandle pszPreviewFile string type EItemPreviewType Returns bool AddItemPreviewVideo(UGCUpdateHandle, string) public bool AddItemPreviewVideo(UGCUpdateHandle handle, string pszVideoID) Parameters handle UGCUpdateHandle pszVideoID string Returns bool AddItemToFavorites(AppId, PublishedFileId) public Promise<UserFavoriteItemsListChanged> AddItemToFavorites(AppId appId, PublishedFileId publishedFileID) Parameters appId AppId publishedFileID PublishedFileId Returns Promise<UserFavoriteItemsListChanged> AddRequiredKeyValueTag(UGCQueryHandle, string, string) public bool AddRequiredKeyValueTag(UGCQueryHandle handle, string key, string value) Parameters handle UGCQueryHandle key string value string Returns bool AddRequiredTag(UGCQueryHandle, string) public bool AddRequiredTag(UGCQueryHandle handle, string tagName) Parameters handle UGCQueryHandle tagName string Returns bool AddRequiredTagGroup(UGCQueryHandle, in SteamParamStringArray) public bool AddRequiredTagGroup(UGCQueryHandle handle, in SteamParamStringArray tagGroups) Parameters handle UGCQueryHandle tagGroups SteamParamStringArray Returns bool BInitWorkshopForGameServer(DepotId, string) public bool BInitWorkshopForGameServer(DepotId workshopDepotID, string pszFolder) Parameters workshopDepotID DepotId pszFolder string Returns bool CreateItem(AppId, EWorkshopFileType) public Promise<CreateItemResult> CreateItem(AppId consumerAppId, EWorkshopFileType fileType) Parameters consumerAppId AppId fileType EWorkshopFileType Returns Promise<CreateItemResult> CreateQueryAllUGCRequest(EUGCQuery, EUGCMatchingUGCType, AppId, AppId, string) public UGCQueryHandle CreateQueryAllUGCRequest(EUGCQuery queryType, EUGCMatchingUGCType matchingeMatchingUGCTypeFileType, AppId creatorAppID, AppId consumerAppID, string cursor) Parameters queryType EUGCQuery matchingeMatchingUGCTypeFileType EUGCMatchingUGCType creatorAppID AppId consumerAppID AppId cursor string Returns UGCQueryHandle CreateQueryAllUGCRequest(EUGCQuery, EUGCMatchingUGCType, AppId, AppId, uint) public UGCQueryHandle CreateQueryAllUGCRequest(EUGCQuery queryType, EUGCMatchingUGCType matchingeMatchingUGCTypeFileType, AppId creatorAppID, AppId consumerAppID, uint page) Parameters queryType EUGCQuery matchingeMatchingUGCTypeFileType EUGCMatchingUGCType creatorAppID AppId consumerAppID AppId page uint Returns UGCQueryHandle CreateQueryUGCDetailsRequest(out PublishedFileId, uint) public UGCQueryHandle CreateQueryUGCDetailsRequest(out PublishedFileId publishedFileID, uint numPublishedFileIDs) Parameters publishedFileID PublishedFileId numPublishedFileIDs uint Returns UGCQueryHandle CreateQueryUserUGCRequest(AccountID, EUserUGCList, EUGCMatchingUGCType, EUserUGCListSortOrder, AppId, AppId, uint) public UGCQueryHandle CreateQueryUserUGCRequest(AccountID accountID, EUserUGCList listType, EUGCMatchingUGCType matchingUGCType, EUserUGCListSortOrder sortOrder, AppId creatorAppID, AppId consumerAppID, uint page) Parameters accountID AccountID listType EUserUGCList matchingUGCType EUGCMatchingUGCType sortOrder EUserUGCListSortOrder creatorAppID AppId consumerAppID AppId page uint Returns UGCQueryHandle DeleteItem(PublishedFileId) public Promise<DeleteItemResult> DeleteItem(PublishedFileId publishedFileID) Parameters publishedFileID PublishedFileId Returns Promise<DeleteItemResult> DownloadItem(PublishedFileId, bool) public bool DownloadItem(PublishedFileId publishedFileID, bool highPriority) Parameters publishedFileID PublishedFileId highPriority bool Returns bool GetAppDependencies(PublishedFileId) public Promise<GetAppDependenciesResult> GetAppDependencies(PublishedFileId publishedFileID) Parameters publishedFileID PublishedFileId Returns Promise<GetAppDependenciesResult> GetItemDownloadInfo(PublishedFileId, out ulong, out ulong) public bool GetItemDownloadInfo(PublishedFileId publishedFileID, out ulong bytesDownloaded, out ulong bytesTotal) Parameters publishedFileID PublishedFileId bytesDownloaded ulong bytesTotal ulong Returns bool GetItemInstallInfo(PublishedFileId, out ulong, Span<byte>, out uint) public bool GetItemInstallInfo(PublishedFileId publishedFileID, out ulong sizeOnDisk, Span<byte> folder, out uint timeStamp) Parameters publishedFileID PublishedFileId sizeOnDisk ulong folder Span<byte> timeStamp uint Returns bool GetItemState(PublishedFileId) public uint GetItemState(PublishedFileId publishedFileID) Parameters publishedFileID PublishedFileId Returns uint GetItemUpdateProgress(UGCUpdateHandle, out ulong, out ulong) public EItemUpdateStatus GetItemUpdateProgress(UGCUpdateHandle handle, out ulong bytesProcessed, out ulong bytesTotal) Parameters handle UGCUpdateHandle bytesProcessed ulong bytesTotal ulong Returns EItemUpdateStatus GetNumSubscribedItems(bool) public uint GetNumSubscribedItems(bool includeLocallyDisabled) Parameters includeLocallyDisabled bool Returns uint GetNumSupportedGameVersions(UGCQueryHandle, uint) public uint GetNumSupportedGameVersions(UGCQueryHandle handle, uint index) Parameters handle UGCQueryHandle index uint Returns uint GetQueryUGCAdditionalPreview(UGCQueryHandle, uint, uint, Span<byte>, Span<byte>, out EItemPreviewType) public bool GetQueryUGCAdditionalPreview(UGCQueryHandle handle, uint index, uint previewIndex, Span<byte> urlOrVideoID, Span<byte> originalFileName, out EItemPreviewType previewType) Parameters handle UGCQueryHandle index uint previewIndex uint urlOrVideoID Span<byte> originalFileName Span<byte> previewType EItemPreviewType Returns bool GetQueryUGCChildren(UGCQueryHandle, uint, out PublishedFileId, uint) public bool GetQueryUGCChildren(UGCQueryHandle handle, uint index, out PublishedFileId publishedFileID, uint maxEntries) Parameters handle UGCQueryHandle index uint publishedFileID PublishedFileId maxEntries uint Returns bool GetQueryUGCContentDescriptors(UGCQueryHandle, uint, out EUGCContentDescriptorID, uint) public uint GetQueryUGCContentDescriptors(UGCQueryHandle handle, uint index, out EUGCContentDescriptorID descriptors, uint maxEntries) Parameters handle UGCQueryHandle index uint descriptors EUGCContentDescriptorID maxEntries uint Returns uint GetQueryUGCKeyValueTag(UGCQueryHandle, uint, string, Span<byte>) public bool GetQueryUGCKeyValueTag(UGCQueryHandle handle, uint index, string key, Span<byte> value) Parameters handle UGCQueryHandle index uint key string value Span<byte> Returns bool GetQueryUGCKeyValueTag(UGCQueryHandle, uint, uint, Span<byte>, Span<byte>) public bool GetQueryUGCKeyValueTag(UGCQueryHandle handle, uint index, uint keyValueTagIndex, Span<byte> key, Span<byte> value) Parameters handle UGCQueryHandle index uint keyValueTagIndex uint key Span<byte> value Span<byte> Returns bool GetQueryUGCMetadata(UGCQueryHandle, uint, Span<byte>) public bool GetQueryUGCMetadata(UGCQueryHandle handle, uint index, Span<byte> metadata) Parameters handle UGCQueryHandle index uint metadata Span<byte> Returns bool GetQueryUGCNumAdditionalPreviews(UGCQueryHandle, uint) public uint GetQueryUGCNumAdditionalPreviews(UGCQueryHandle handle, uint index) Parameters handle UGCQueryHandle index uint Returns uint GetQueryUGCNumKeyValueTags(UGCQueryHandle, uint) public uint GetQueryUGCNumKeyValueTags(UGCQueryHandle handle, uint index) Parameters handle UGCQueryHandle index uint Returns uint GetQueryUGCNumTags(UGCQueryHandle, uint) public uint GetQueryUGCNumTags(UGCQueryHandle handle, uint index) Parameters handle UGCQueryHandle index uint Returns uint GetQueryUGCPreviewURL(UGCQueryHandle, uint, Span<byte>) public bool GetQueryUGCPreviewURL(UGCQueryHandle handle, uint index, Span<byte> url) Parameters handle UGCQueryHandle index uint url Span<byte> Returns bool GetQueryUGCResult(UGCQueryHandle, uint, out SteamUGCDetails) public bool GetQueryUGCResult(UGCQueryHandle handle, uint index, out SteamUGCDetails details) Parameters handle UGCQueryHandle index uint details SteamUGCDetails Returns bool GetQueryUGCStatistic(UGCQueryHandle, uint, EItemStatistic, out ulong) public bool GetQueryUGCStatistic(UGCQueryHandle handle, uint index, EItemStatistic statType, out ulong statValue) Parameters handle UGCQueryHandle index uint statType EItemStatistic statValue ulong Returns bool GetQueryUGCTag(UGCQueryHandle, uint, uint, Span<byte>) public bool GetQueryUGCTag(UGCQueryHandle handle, uint index, uint indexTag, Span<byte> value) Parameters handle UGCQueryHandle index uint indexTag uint value Span<byte> Returns bool GetQueryUGCTagDisplayName(UGCQueryHandle, uint, uint, Span<byte>) public bool GetQueryUGCTagDisplayName(UGCQueryHandle handle, uint index, uint indexTag, Span<byte> value) Parameters handle UGCQueryHandle index uint indexTag uint value Span<byte> Returns bool GetSubscribedItems(out PublishedFileId, uint, bool) public uint GetSubscribedItems(out PublishedFileId publishedFileID, uint maxEntries, bool includeLocallyDisabled) Parameters publishedFileID PublishedFileId maxEntries uint includeLocallyDisabled bool Returns uint GetSupportedGameVersionData(UGCQueryHandle, uint, uint, Span<byte>, Span<byte>) public bool GetSupportedGameVersionData(UGCQueryHandle handle, uint index, uint versionIndex, Span<byte> gameBranchMin, Span<byte> gameBranchMax) Parameters handle UGCQueryHandle index uint versionIndex uint gameBranchMin Span<byte> gameBranchMax Span<byte> Returns bool GetUserContentDescriptorPreferences(out EUGCContentDescriptorID, uint) public uint GetUserContentDescriptorPreferences(out EUGCContentDescriptorID descriptors, uint maxEntries) Parameters descriptors EUGCContentDescriptorID maxEntries uint Returns uint GetUserItemVote(PublishedFileId) public Promise<GetUserItemVoteResult> GetUserItemVote(PublishedFileId publishedFileID) Parameters publishedFileID PublishedFileId Returns Promise<GetUserItemVoteResult> GetWorkshopEULAStatus() public Promise<WorkshopEULAStatus> GetWorkshopEULAStatus() Returns Promise<WorkshopEULAStatus> OnDownloadItemResult(CallbackAction<DownloadItemResult>) public IDisposable OnDownloadItemResult(CallbackAction<DownloadItemResult> func) Parameters func CallbackAction<DownloadItemResult> Returns IDisposable OnItemInstalled(CallbackAction<ItemInstalled>) public IDisposable OnItemInstalled(CallbackAction<ItemInstalled> func) Parameters func CallbackAction<ItemInstalled> Returns IDisposable OnUserSubscribedItemsListChanged(CallbackAction<UserSubscribedItemsListChanged>) public IDisposable OnUserSubscribedItemsListChanged(CallbackAction<UserSubscribedItemsListChanged> func) Parameters func CallbackAction<UserSubscribedItemsListChanged> Returns IDisposable ReleaseQueryUGCRequest(UGCQueryHandle) public bool ReleaseQueryUGCRequest(UGCQueryHandle handle) Parameters handle UGCQueryHandle Returns bool RemoveAllItemKeyValueTags(UGCUpdateHandle) public bool RemoveAllItemKeyValueTags(UGCUpdateHandle handle) Parameters handle UGCUpdateHandle Returns bool RemoveAppDependency(PublishedFileId, AppId) public Promise<RemoveAppDependencyResult> RemoveAppDependency(PublishedFileId publishedFileID, AppId appId) Parameters publishedFileID PublishedFileId appId AppId Returns Promise<RemoveAppDependencyResult> RemoveContentDescriptor(UGCUpdateHandle, EUGCContentDescriptorID) public bool RemoveContentDescriptor(UGCUpdateHandle handle, EUGCContentDescriptorID descid) Parameters handle UGCUpdateHandle descid EUGCContentDescriptorID Returns bool RemoveDependency(PublishedFileId, PublishedFileId) public Promise<RemoveUGCDependencyResult> RemoveDependency(PublishedFileId parentPublishedFileID, PublishedFileId childPublishedFileID) Parameters parentPublishedFileID PublishedFileId childPublishedFileID PublishedFileId Returns Promise<RemoveUGCDependencyResult> RemoveItemFromFavorites(AppId, PublishedFileId) public Promise<UserFavoriteItemsListChanged> RemoveItemFromFavorites(AppId appId, PublishedFileId publishedFileID) Parameters appId AppId publishedFileID PublishedFileId Returns Promise<UserFavoriteItemsListChanged> RemoveItemKeyValueTags(UGCUpdateHandle, string) public bool RemoveItemKeyValueTags(UGCUpdateHandle handle, string key) Parameters handle UGCUpdateHandle key string Returns bool RemoveItemPreview(UGCUpdateHandle, uint) public bool RemoveItemPreview(UGCUpdateHandle handle, uint index) Parameters handle UGCUpdateHandle index uint Returns bool RequestUGCDetails(PublishedFileId, uint) public Promise<SteamUGCRequestUGCDetailsResult> RequestUGCDetails(PublishedFileId publishedFileID, uint maxAgeSeconds) Parameters publishedFileID PublishedFileId maxAgeSeconds uint Returns Promise<SteamUGCRequestUGCDetailsResult> SendQueryUGCRequest(UGCQueryHandle) public Promise<SteamUGCQueryCompleted> SendQueryUGCRequest(UGCQueryHandle handle) Parameters handle UGCQueryHandle Returns Promise<SteamUGCQueryCompleted> SetAdminQuery(UGCUpdateHandle, bool) public bool SetAdminQuery(UGCUpdateHandle handle, bool adminQuery) Parameters handle UGCUpdateHandle adminQuery bool Returns bool SetAllowCachedResponse(UGCQueryHandle, uint) public bool SetAllowCachedResponse(UGCQueryHandle handle, uint maxAgeSeconds) Parameters handle UGCQueryHandle maxAgeSeconds uint Returns bool SetAllowLegacyUpload(UGCUpdateHandle, bool) public bool SetAllowLegacyUpload(UGCUpdateHandle handle, bool allowLegacyUpload) Parameters handle UGCUpdateHandle allowLegacyUpload bool Returns bool SetCloudFileNameFilter(UGCQueryHandle, string) public bool SetCloudFileNameFilter(UGCQueryHandle handle, string matchCloudFileName) Parameters handle UGCQueryHandle matchCloudFileName string Returns bool SetItemContent(UGCUpdateHandle, string) public bool SetItemContent(UGCUpdateHandle handle, string pszContentFolder) Parameters handle UGCUpdateHandle pszContentFolder string Returns bool SetItemDescription(UGCUpdateHandle, string) public bool SetItemDescription(UGCUpdateHandle handle, string description) Parameters handle UGCUpdateHandle description string Returns bool SetItemMetadata(UGCUpdateHandle, string) public bool SetItemMetadata(UGCUpdateHandle handle, string metaData) Parameters handle UGCUpdateHandle metaData string Returns bool SetItemPreview(UGCUpdateHandle, string) public bool SetItemPreview(UGCUpdateHandle handle, string pszPreviewFile) Parameters handle UGCUpdateHandle pszPreviewFile string Returns bool SetItemTags(UGCUpdateHandle, in SteamParamStringArray, bool) public bool SetItemTags(UGCUpdateHandle updateHandle, in SteamParamStringArray tags, bool allowAdminTags) Parameters updateHandle UGCUpdateHandle tags SteamParamStringArray allowAdminTags bool Returns bool SetItemTitle(UGCUpdateHandle, string) public bool SetItemTitle(UGCUpdateHandle handle, string title) Parameters handle UGCUpdateHandle title string Returns bool SetItemUpdateLanguage(UGCUpdateHandle, string) public bool SetItemUpdateLanguage(UGCUpdateHandle handle, string language) Parameters handle UGCUpdateHandle language string Returns bool SetItemVisibility(UGCUpdateHandle, ERemoteStoragePublishedFileVisibility) public bool SetItemVisibility(UGCUpdateHandle handle, ERemoteStoragePublishedFileVisibility visibility) Parameters handle UGCUpdateHandle visibility ERemoteStoragePublishedFileVisibility Returns bool SetItemsDisabledLocally(out PublishedFileId, uint, bool) public bool SetItemsDisabledLocally(out PublishedFileId publishedFileIDs, uint numPublishedFileIDs, bool disabledLocally) Parameters publishedFileIDs PublishedFileId numPublishedFileIDs uint disabledLocally bool Returns bool SetLanguage(UGCQueryHandle, string) public bool SetLanguage(UGCQueryHandle handle, string language) Parameters handle UGCQueryHandle language string Returns bool SetMatchAnyTag(UGCQueryHandle, bool) public bool SetMatchAnyTag(UGCQueryHandle handle, bool matchAnyTag) Parameters handle UGCQueryHandle matchAnyTag bool Returns bool SetRankedByTrendDays(UGCQueryHandle, uint) public bool SetRankedByTrendDays(UGCQueryHandle handle, uint days) Parameters handle UGCQueryHandle days uint Returns bool SetRequiredGameVersions(UGCUpdateHandle, string, string) public bool SetRequiredGameVersions(UGCUpdateHandle handle, string pszGameBranchMin, string pszGameBranchMax) Parameters handle UGCUpdateHandle pszGameBranchMin string pszGameBranchMax string Returns bool SetReturnAdditionalPreviews(UGCQueryHandle, bool) public bool SetReturnAdditionalPreviews(UGCQueryHandle handle, bool returnAdditionalPreviews) Parameters handle UGCQueryHandle returnAdditionalPreviews bool Returns bool SetReturnChildren(UGCQueryHandle, bool) public bool SetReturnChildren(UGCQueryHandle handle, bool returnChildren) Parameters handle UGCQueryHandle returnChildren bool Returns bool SetReturnKeyValueTags(UGCQueryHandle, bool) public bool SetReturnKeyValueTags(UGCQueryHandle handle, bool returnKeyValueTags) Parameters handle UGCQueryHandle returnKeyValueTags bool Returns bool SetReturnLongDescription(UGCQueryHandle, bool) public bool SetReturnLongDescription(UGCQueryHandle handle, bool returnLongDescription) Parameters handle UGCQueryHandle returnLongDescription bool Returns bool SetReturnMetadata(UGCQueryHandle, bool) public bool SetReturnMetadata(UGCQueryHandle handle, bool returnMetadata) Parameters handle UGCQueryHandle returnMetadata bool Returns bool SetReturnOnlyIDs(UGCQueryHandle, bool) public bool SetReturnOnlyIDs(UGCQueryHandle handle, bool returnOnlyIDs) Parameters handle UGCQueryHandle returnOnlyIDs bool Returns bool SetReturnPlaytimeStats(UGCQueryHandle, uint) public bool SetReturnPlaytimeStats(UGCQueryHandle handle, uint days) Parameters handle UGCQueryHandle days uint Returns bool SetReturnTotalOnly(UGCQueryHandle, bool) public bool SetReturnTotalOnly(UGCQueryHandle handle, bool returnTotalOnly) Parameters handle UGCQueryHandle returnTotalOnly bool Returns bool SetSearchText(UGCQueryHandle, string) public bool SetSearchText(UGCQueryHandle handle, string searchText) Parameters handle UGCQueryHandle searchText string Returns bool SetSubscriptionsLoadOrder(out PublishedFileId, uint) public bool SetSubscriptionsLoadOrder(out PublishedFileId publishedFileIDs, uint numPublishedFileIDs) Parameters publishedFileIDs PublishedFileId numPublishedFileIDs uint Returns bool SetTimeCreatedDateRange(UGCQueryHandle, RTime32, RTime32) public bool SetTimeCreatedDateRange(UGCQueryHandle handle, RTime32 start, RTime32 end) Parameters handle UGCQueryHandle start RTime32 end RTime32 Returns bool SetTimeUpdatedDateRange(UGCQueryHandle, RTime32, RTime32) public bool SetTimeUpdatedDateRange(UGCQueryHandle handle, RTime32 start, RTime32 end) Parameters handle UGCQueryHandle start RTime32 end RTime32 Returns bool SetUserItemVote(PublishedFileId, bool) public Promise<SetUserItemVoteResult> SetUserItemVote(PublishedFileId publishedFileID, bool voteUp) Parameters publishedFileID PublishedFileId voteUp bool Returns Promise<SetUserItemVoteResult> ShowWorkshopEULA() public bool ShowWorkshopEULA() Returns bool StartItemUpdate(AppId, PublishedFileId) public UGCUpdateHandle StartItemUpdate(AppId consumerAppId, PublishedFileId publishedFileID) Parameters consumerAppId AppId publishedFileID PublishedFileId Returns UGCUpdateHandle StartPlaytimeTracking(out PublishedFileId, uint) public Promise<StartPlaytimeTrackingResult> StartPlaytimeTracking(out PublishedFileId publishedFileID, uint numPublishedFileIDs) Parameters publishedFileID PublishedFileId numPublishedFileIDs uint Returns Promise<StartPlaytimeTrackingResult> StopPlaytimeTracking(out PublishedFileId, uint) public Promise<StopPlaytimeTrackingResult> StopPlaytimeTracking(out PublishedFileId publishedFileID, uint numPublishedFileIDs) Parameters publishedFileID PublishedFileId numPublishedFileIDs uint Returns Promise<StopPlaytimeTrackingResult> StopPlaytimeTrackingForAllItems() public Promise<StopPlaytimeTrackingResult> StopPlaytimeTrackingForAllItems() Returns Promise<StopPlaytimeTrackingResult> SubmitItemUpdate(UGCUpdateHandle, string) public Promise<SubmitItemUpdateResult> SubmitItemUpdate(UGCUpdateHandle handle, string changeNote) Parameters handle UGCUpdateHandle changeNote string Returns Promise<SubmitItemUpdateResult> SubscribeItem(PublishedFileId) public Promise<RemoteStorageSubscribePublishedFileResult> SubscribeItem(PublishedFileId publishedFileID) Parameters publishedFileID PublishedFileId Returns Promise<RemoteStorageSubscribePublishedFileResult> SuspendDownloads(bool) public void SuspendDownloads(bool suspend) Parameters suspend bool UnsubscribeItem(PublishedFileId) public Promise<RemoteStorageUnsubscribePublishedFileResult> UnsubscribeItem(PublishedFileId publishedFileID) Parameters publishedFileID PublishedFileId Returns Promise<RemoteStorageUnsubscribePublishedFileResult> UpdateItemPreviewFile(UGCUpdateHandle, uint, string) public bool UpdateItemPreviewFile(UGCUpdateHandle handle, uint index, string pszPreviewFile) Parameters handle UGCUpdateHandle index uint pszPreviewFile string Returns bool UpdateItemPreviewVideo(UGCUpdateHandle, uint, string) public bool UpdateItemPreviewVideo(UGCUpdateHandle handle, uint index, string pszVideoID) Parameters handle UGCUpdateHandle index uint pszVideoID string Returns bool"
  },
  "api/MarymoorStudios.Core.Steamworks.ISteamUser.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ISteamUser.html",
    "title": "Class ISteamUser",
    "summary": "Class ISteamUser Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public sealed class ISteamUser : SteamNativeObject Inheritance object SteamNativeObject ISteamUser Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Fields INTERFACE_VERSION public const string INTERFACE_VERSION = \"SteamUser023\" Field Value string Methods AdvertiseGame(CSteamID, uint, ushort) public void AdvertiseGame(CSteamID steamIDGameServer, uint ipServer, ushort portServer) Parameters steamIDGameServer CSteamID ipServer uint portServer ushort BIsBehindNAT() public bool BIsBehindNAT() Returns bool BIsPhoneIdentifying() public bool BIsPhoneIdentifying() Returns bool BIsPhoneRequiringVerification() public bool BIsPhoneRequiringVerification() Returns bool BIsPhoneVerified() public bool BIsPhoneVerified() Returns bool BIsTwoFactorEnabled() public bool BIsTwoFactorEnabled() Returns bool BLoggedOn() public bool BLoggedOn() Returns bool BSetDurationControlOnlineState(EDurationControlOnlineState) public bool BSetDurationControlOnlineState(EDurationControlOnlineState newState) Parameters newState EDurationControlOnlineState Returns bool BeginAuthSession(ReadOnlySpan<byte>, CSteamID) public EBeginAuthSessionResult BeginAuthSession(ReadOnlySpan<byte> authTicket, CSteamID steamID) Parameters authTicket ReadOnlySpan<byte> steamID CSteamID Returns EBeginAuthSessionResult CancelAuthTicket(HAuthTicket) public void CancelAuthTicket(HAuthTicket authTicket) Parameters authTicket HAuthTicket DecompressVoice(ReadOnlySpan<byte>, Span<byte>, out uint, uint) public EVoiceResult DecompressVoice(ReadOnlySpan<byte> compressed, Span<byte> destBuffer, out uint bytesWritten, uint desiredSampleRate) Parameters compressed ReadOnlySpan<byte> destBuffer Span<byte> bytesWritten uint desiredSampleRate uint Returns EVoiceResult EndAuthSession(CSteamID) public void EndAuthSession(CSteamID steamID) Parameters steamID CSteamID GetAuthSessionTicket(Span<byte>, out uint, in SteamNetworkingIdentity) public HAuthTicket GetAuthSessionTicket(Span<byte> ticket, out uint ticketCount, in SteamNetworkingIdentity steamNetworkingIdentity) Parameters ticket Span<byte> ticketCount uint steamNetworkingIdentity SteamNetworkingIdentity Returns HAuthTicket GetAuthTicketForWebApi(string) public HAuthTicket GetAuthTicketForWebApi(string identity) Parameters identity string Returns HAuthTicket GetAvailableVoice(out uint, out uint, uint) public EVoiceResult GetAvailableVoice(out uint compressedCount, out uint uncompressed_DeprecatedCount, uint uncompressedVoiceDesiredSampleRate_Deprecated) Parameters compressedCount uint uncompressed_DeprecatedCount uint uncompressedVoiceDesiredSampleRate_Deprecated uint Returns EVoiceResult GetDurationControl() public Promise<DurationControl> GetDurationControl() Returns Promise<DurationControl> GetEncryptedAppTicket(Span<byte>, out uint) public bool GetEncryptedAppTicket(Span<byte> ticket, out uint ticketCount) Parameters ticket Span<byte> ticketCount uint Returns bool GetGameBadgeLevel(int, bool) public int GetGameBadgeLevel(int series, bool foil) Parameters series int foil bool Returns int GetHSteamUser() public HSteamUser GetHSteamUser() Returns HSteamUser GetMarketEligibility() public Promise<MarketEligibilityResponse> GetMarketEligibility() Returns Promise<MarketEligibilityResponse> GetPlayerSteamLevel() public int GetPlayerSteamLevel() Returns int GetSteamID() public CSteamID GetSteamID() Returns CSteamID GetUserDataFolder(Span<byte>) public bool GetUserDataFolder(Span<byte> buffer) Parameters buffer Span<byte> Returns bool GetVoice(bool, Span<byte>, out uint, bool, Span<byte>, out uint, uint) public EVoiceResult GetVoice(bool wantCompressed, Span<byte> destBuffer, out uint bytesWritten, bool wantUncompressed_Deprecated, Span<byte> uncompressedDestBuffer_Deprecated, out uint uncompressBytesWritten_Deprecated, uint uncompressedVoiceDesiredSampleRate_Deprecated) Parameters wantCompressed bool destBuffer Span<byte> bytesWritten uint wantUncompressed_Deprecated bool uncompressedDestBuffer_Deprecated Span<byte> uncompressBytesWritten_Deprecated uint uncompressedVoiceDesiredSampleRate_Deprecated uint Returns EVoiceResult GetVoiceOptimalSampleRate() public uint GetVoiceOptimalSampleRate() Returns uint InitiateGameConnection(Span<byte>, CSteamID, uint, ushort, bool) [Obsolete] public int InitiateGameConnection(Span<byte> authBlob, CSteamID steamIDGameServer, uint ipServer, ushort portServer, bool secure) Parameters authBlob Span<byte> steamIDGameServer CSteamID ipServer uint portServer ushort secure bool Returns int OnClientGameServerDeny(CallbackAction<ClientGameServerDeny>) public IDisposable OnClientGameServerDeny(CallbackAction<ClientGameServerDeny> func) Parameters func CallbackAction<ClientGameServerDeny> Returns IDisposable OnGSPolicyResponse(CallbackAction<GSPolicyResponse>) public IDisposable OnGSPolicyResponse(CallbackAction<GSPolicyResponse> func) Parameters func CallbackAction<GSPolicyResponse> Returns IDisposable OnGameWebCallback(CallbackAction<GameWebCallback>) public IDisposable OnGameWebCallback(CallbackAction<GameWebCallback> func) Parameters func CallbackAction<GameWebCallback> Returns IDisposable OnGetAuthSessionTicketResponse(CallbackAction<GetAuthSessionTicketResponse>) public IDisposable OnGetAuthSessionTicketResponse(CallbackAction<GetAuthSessionTicketResponse> func) Parameters func CallbackAction<GetAuthSessionTicketResponse> Returns IDisposable OnGetTicketForWebApiResponse(CallbackAction<GetTicketForWebApiResponse>) public IDisposable OnGetTicketForWebApiResponse(CallbackAction<GetTicketForWebApiResponse> func) Parameters func CallbackAction<GetTicketForWebApiResponse> Returns IDisposable OnIPCFailure(CallbackAction<IPCFailure>) public IDisposable OnIPCFailure(CallbackAction<IPCFailure> func) Parameters func CallbackAction<IPCFailure> Returns IDisposable OnLicensesUpdated(CallbackAction<LicensesUpdated>) public IDisposable OnLicensesUpdated(CallbackAction<LicensesUpdated> func) Parameters func CallbackAction<LicensesUpdated> Returns IDisposable OnMicroTxnAuthorizationResponse(CallbackAction<MicroTxnAuthorizationResponse>) public IDisposable OnMicroTxnAuthorizationResponse(CallbackAction<MicroTxnAuthorizationResponse> func) Parameters func CallbackAction<MicroTxnAuthorizationResponse> Returns IDisposable OnSteamServerConnectFailure(CallbackAction<SteamServerConnectFailure>) public IDisposable OnSteamServerConnectFailure(CallbackAction<SteamServerConnectFailure> func) Parameters func CallbackAction<SteamServerConnectFailure> Returns IDisposable OnSteamServersConnected(CallbackAction<SteamServersConnected>) public IDisposable OnSteamServersConnected(CallbackAction<SteamServersConnected> func) Parameters func CallbackAction<SteamServersConnected> Returns IDisposable OnSteamServersDisconnected(CallbackAction<SteamServersDisconnected>) public IDisposable OnSteamServersDisconnected(CallbackAction<SteamServersDisconnected> func) Parameters func CallbackAction<SteamServersDisconnected> Returns IDisposable OnValidateAuthTicketResponse(CallbackAction<ValidateAuthTicketResponse>) public IDisposable OnValidateAuthTicketResponse(CallbackAction<ValidateAuthTicketResponse> func) Parameters func CallbackAction<ValidateAuthTicketResponse> Returns IDisposable RequestEncryptedAppTicket(Span<byte>) public Promise<EncryptedAppTicketResponse> RequestEncryptedAppTicket(Span<byte> dataToInclude) Parameters dataToInclude Span<byte> Returns Promise<EncryptedAppTicketResponse> RequestStoreAuthURL(string) public Promise<StoreAuthURLResponse> RequestStoreAuthURL(string redirectURL) Parameters redirectURL string Returns Promise<StoreAuthURLResponse> StartVoiceRecording() public void StartVoiceRecording() StopVoiceRecording() public void StopVoiceRecording() TerminateGameConnection(uint, ushort) [Obsolete] public void TerminateGameConnection(uint ipServer, ushort portServer) Parameters ipServer uint portServer ushort TrackAppUsageEvent(CGameID, int, string) public void TrackAppUsageEvent(CGameID gameID, int appUsageEvent, string extraInfo) Parameters gameID CGameID appUsageEvent int extraInfo string UserHasLicenseForApp(CSteamID, AppId) public EUserHasLicenseForAppResult UserHasLicenseForApp(CSteamID steamID, AppId appId) Parameters steamID CSteamID appId AppId Returns EUserHasLicenseForAppResult"
  },
  "api/MarymoorStudios.Core.Steamworks.ISteamUserStats.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ISteamUserStats.html",
    "title": "Class ISteamUserStats",
    "summary": "Class ISteamUserStats Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public sealed class ISteamUserStats : SteamNativeObject Inheritance object SteamNativeObject ISteamUserStats Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Fields INTERFACE_VERSION public const string INTERFACE_VERSION = \"STEAMUSERSTATS_INTERFACE_VERSION013\" Field Value string Methods AttachLeaderboardUGC(SteamLeaderboard, UGCHandle) public Promise<LeaderboardUGCSet> AttachLeaderboardUGC(SteamLeaderboard steamLeaderboard, UGCHandle uGC) Parameters steamLeaderboard SteamLeaderboard uGC UGCHandle Returns Promise<LeaderboardUGCSet> ClearAchievement(string) public bool ClearAchievement(string name) Parameters name string Returns bool DownloadLeaderboardEntries(SteamLeaderboard, ELeaderboardDataRequest, int, int) public Promise<LeaderboardScoresDownloaded> DownloadLeaderboardEntries(SteamLeaderboard steamLeaderboard, ELeaderboardDataRequest leaderboardDataRequest, int rangeStart, int rangeEnd) Parameters steamLeaderboard SteamLeaderboard leaderboardDataRequest ELeaderboardDataRequest rangeStart int rangeEnd int Returns Promise<LeaderboardScoresDownloaded> DownloadLeaderboardEntriesForUsers(SteamLeaderboard, Span<CSteamID>) public Promise<LeaderboardScoresDownloaded> DownloadLeaderboardEntriesForUsers(SteamLeaderboard steamLeaderboard, Span<CSteamID> prgUsers) Parameters steamLeaderboard SteamLeaderboard prgUsers Span<CSteamID> Returns Promise<LeaderboardScoresDownloaded> FindLeaderboard(string) public Promise<LeaderboardFindResult> FindLeaderboard(string leaderboardName) Parameters leaderboardName string Returns Promise<LeaderboardFindResult> FindOrCreateLeaderboard(string, ELeaderboardSortMethod, ELeaderboardDisplayType) public Promise<LeaderboardFindResult> FindOrCreateLeaderboard(string leaderboardName, ELeaderboardSortMethod leaderboardSortMethod, ELeaderboardDisplayType leaderboardDisplayType) Parameters leaderboardName string leaderboardSortMethod ELeaderboardSortMethod leaderboardDisplayType ELeaderboardDisplayType Returns Promise<LeaderboardFindResult> GetAchievement(string, out bool) public bool GetAchievement(string name, out bool achieved) Parameters name string achieved bool Returns bool GetAchievementAchievedPercent(string, out float) public bool GetAchievementAchievedPercent(string name, out float percent) Parameters name string percent float Returns bool GetAchievementAndUnlockTime(string, out bool, out uint) public bool GetAchievementAndUnlockTime(string name, out bool achieved, out uint unlockTime) Parameters name string achieved bool unlockTime uint Returns bool GetAchievementDisplayAttribute(string, string) public string GetAchievementDisplayAttribute(string name, string key) Parameters name string key string Returns string GetAchievementIcon(string) public int GetAchievementIcon(string name) Parameters name string Returns int GetAchievementName(uint) public string GetAchievementName(uint achievement) Parameters achievement uint Returns string GetAchievementProgressLimits(string, out int, out int) public bool GetAchievementProgressLimits(string name, out int minProgress, out int maxProgress) Parameters name string minProgress int maxProgress int Returns bool GetAchievementProgressLimits(string, out float, out float) public bool GetAchievementProgressLimits(string name, out float pfMinProgress, out float pfMaxProgress) Parameters name string pfMinProgress float pfMaxProgress float Returns bool GetDownloadedLeaderboardEntry(SteamLeaderboardEntries, int, out LeaderboardEntry, Span<int>) public bool GetDownloadedLeaderboardEntry(SteamLeaderboardEntries steamLeaderboardEntries, int index, out LeaderboardEntry leaderboardEntry, Span<int> details) Parameters steamLeaderboardEntries SteamLeaderboardEntries index int leaderboardEntry LeaderboardEntry details Span<int> Returns bool GetGlobalStat(string, out double) public bool GetGlobalStat(string statName, out double data) Parameters statName string data double Returns bool GetGlobalStat(string, out long) public bool GetGlobalStat(string statName, out long data) Parameters statName string data long Returns bool GetGlobalStatHistory(string, Span<double>) public int GetGlobalStatHistory(string statName, Span<double> data) Parameters statName string data Span<double> Returns int GetGlobalStatHistory(string, Span<long>) public int GetGlobalStatHistory(string statName, Span<long> data) Parameters statName string data Span<long> Returns int GetLeaderboardDisplayType(SteamLeaderboard) public ELeaderboardDisplayType GetLeaderboardDisplayType(SteamLeaderboard steamLeaderboard) Parameters steamLeaderboard SteamLeaderboard Returns ELeaderboardDisplayType GetLeaderboardEntryCount(SteamLeaderboard) public int GetLeaderboardEntryCount(SteamLeaderboard steamLeaderboard) Parameters steamLeaderboard SteamLeaderboard Returns int GetLeaderboardName(SteamLeaderboard) public string GetLeaderboardName(SteamLeaderboard steamLeaderboard) Parameters steamLeaderboard SteamLeaderboard Returns string GetLeaderboardSortMethod(SteamLeaderboard) public ELeaderboardSortMethod GetLeaderboardSortMethod(SteamLeaderboard steamLeaderboard) Parameters steamLeaderboard SteamLeaderboard Returns ELeaderboardSortMethod GetMostAchievedAchievementInfo(Span<byte>, out float, out bool) public int GetMostAchievedAchievementInfo(Span<byte> name, out float percent, out bool achieved) Parameters name Span<byte> percent float achieved bool Returns int GetNextMostAchievedAchievementInfo(int, Span<byte>, out float, out bool) public int GetNextMostAchievedAchievementInfo(int iteratorPrevious, Span<byte> name, out float percent, out bool achieved) Parameters iteratorPrevious int name Span<byte> percent float achieved bool Returns int GetNumAchievements() public uint GetNumAchievements() Returns uint GetNumberOfCurrentPlayers() public Promise<NumberOfCurrentPlayers> GetNumberOfCurrentPlayers() Returns Promise<NumberOfCurrentPlayers> GetStat(string, out int) public bool GetStat(string name, out int data) Parameters name string data int Returns bool GetStat(string, out float) public bool GetStat(string name, out float data) Parameters name string data float Returns bool GetUserAchievement(CSteamID, string, out bool) public bool GetUserAchievement(CSteamID steamIDUser, string name, out bool achieved) Parameters steamIDUser CSteamID name string achieved bool Returns bool GetUserAchievementAndUnlockTime(CSteamID, string, out bool, out uint) public bool GetUserAchievementAndUnlockTime(CSteamID steamIDUser, string name, out bool achieved, out uint unlockTime) Parameters steamIDUser CSteamID name string achieved bool unlockTime uint Returns bool GetUserStat(CSteamID, string, out int) public bool GetUserStat(CSteamID steamIDUser, string name, out int data) Parameters steamIDUser CSteamID name string data int Returns bool GetUserStat(CSteamID, string, out float) public bool GetUserStat(CSteamID steamIDUser, string name, out float data) Parameters steamIDUser CSteamID name string data float Returns bool IndicateAchievementProgress(string, uint, uint) public bool IndicateAchievementProgress(string name, uint curProgress, uint maxProgress) Parameters name string curProgress uint maxProgress uint Returns bool OnGSStatsUnloaded(CallbackAction<GSStatsUnloaded>) public IDisposable OnGSStatsUnloaded(CallbackAction<GSStatsUnloaded> func) Parameters func CallbackAction<GSStatsUnloaded> Returns IDisposable OnUserAchievementIconFetched(CallbackAction<UserAchievementIconFetched>) public IDisposable OnUserAchievementIconFetched(CallbackAction<UserAchievementIconFetched> func) Parameters func CallbackAction<UserAchievementIconFetched> Returns IDisposable OnUserAchievementStored(CallbackAction<UserAchievementStored>) public IDisposable OnUserAchievementStored(CallbackAction<UserAchievementStored> func) Parameters func CallbackAction<UserAchievementStored> Returns IDisposable OnUserStatsStored(CallbackAction<UserStatsStored>) public IDisposable OnUserStatsStored(CallbackAction<UserStatsStored> func) Parameters func CallbackAction<UserStatsStored> Returns IDisposable OnUserStatsUnloaded(CallbackAction<UserStatsUnloaded>) public IDisposable OnUserStatsUnloaded(CallbackAction<UserStatsUnloaded> func) Parameters func CallbackAction<UserStatsUnloaded> Returns IDisposable RequestGlobalAchievementPercentages() public Promise<GlobalAchievementPercentagesReady> RequestGlobalAchievementPercentages() Returns Promise<GlobalAchievementPercentagesReady> RequestGlobalStats(int) public Promise<GlobalStatsReceived> RequestGlobalStats(int historyDays) Parameters historyDays int Returns Promise<GlobalStatsReceived> RequestUserStats(CSteamID) public Promise<UserStatsReceived> RequestUserStats(CSteamID steamIDUser) Parameters steamIDUser CSteamID Returns Promise<UserStatsReceived> ResetAllStats(bool) public bool ResetAllStats(bool achievementsToo) Parameters achievementsToo bool Returns bool SetAchievement(string) public bool SetAchievement(string name) Parameters name string Returns bool SetStat(string, int) public bool SetStat(string name, int data) Parameters name string data int Returns bool SetStat(string, float) public bool SetStat(string name, float data) Parameters name string data float Returns bool StoreStats() public bool StoreStats() Returns bool UpdateAvgRateStat(string, float, double) public bool UpdateAvgRateStat(string name, float countThisSession, double sessionLength) Parameters name string countThisSession float sessionLength double Returns bool UploadLeaderboardScore(SteamLeaderboard, ELeaderboardUploadScoreMethod, int, ReadOnlySpan<int>) public Promise<LeaderboardScoreUploaded> UploadLeaderboardScore(SteamLeaderboard steamLeaderboard, ELeaderboardUploadScoreMethod leaderboardUploadScoreMethod, int score, ReadOnlySpan<int> scoreDetails) Parameters steamLeaderboard SteamLeaderboard leaderboardUploadScoreMethod ELeaderboardUploadScoreMethod score int scoreDetails ReadOnlySpan<int> Returns Promise<LeaderboardScoreUploaded>"
  },
  "api/MarymoorStudios.Core.Steamworks.ISteamUtils.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ISteamUtils.html",
    "title": "Class ISteamUtils",
    "summary": "Class ISteamUtils Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public sealed class ISteamUtils : SteamNativeObject Inheritance object SteamNativeObject ISteamUtils Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Fields INTERFACE_VERSION public const string INTERFACE_VERSION = \"SteamUtils010\" Field Value string Methods BOverlayNeedsPresent() public bool BOverlayNeedsPresent() Returns bool CheckFileSignature(string) public Promise<CheckFileSignature> CheckFileSignature(string fileName) Parameters fileName string Returns Promise<CheckFileSignature> DismissFloatingGamepadTextInput() public bool DismissFloatingGamepadTextInput() Returns bool DismissGamepadTextInput() public bool DismissGamepadTextInput() Returns bool FilterText(ETextFilteringContext, CSteamID, string, Span<byte>) public int FilterText(ETextFilteringContext context, CSteamID sourceSteamID, string inputMessage, Span<byte> outFilteredText) Parameters context ETextFilteringContext sourceSteamID CSteamID inputMessage string outFilteredText Span<byte> Returns int GetAPICallFailureReason(SteamAPICall) public ESteamAPICallFailure GetAPICallFailureReason(SteamAPICall steamAPICall) Parameters steamAPICall SteamAPICall Returns ESteamAPICallFailure GetAPICallResult(SteamAPICall, Span<byte>, int, out bool) public bool GetAPICallResult(SteamAPICall steamAPICall, Span<byte> callback, int callbackExpected, out bool failed) Parameters steamAPICall SteamAPICall callback Span<byte> callbackExpected int failed bool Returns bool GetAppID() public uint GetAppID() Returns uint GetConnectedUniverse() public EUniverse GetConnectedUniverse() Returns EUniverse GetCurrentBatteryPower() public byte GetCurrentBatteryPower() Returns byte GetEnteredGamepadTextInput(Span<byte>) public bool GetEnteredGamepadTextInput(Span<byte> text) Parameters text Span<byte> Returns bool GetEnteredGamepadTextLength() public uint GetEnteredGamepadTextLength() Returns uint GetIPCCallCount() public uint GetIPCCallCount() Returns uint GetIPCountry() public string GetIPCountry() Returns string GetIPv6ConnectivityState(ESteamIPv6ConnectivityProtocol) public ESteamIPv6ConnectivityState GetIPv6ConnectivityState(ESteamIPv6ConnectivityProtocol protocol) Parameters protocol ESteamIPv6ConnectivityProtocol Returns ESteamIPv6ConnectivityState GetImageRGBA(int, Span<byte>) public bool GetImageRGBA(int image, Span<byte> dest) Parameters image int dest Span<byte> Returns bool GetImageSize(int, out uint, out uint) public bool GetImageSize(int image, out uint width, out uint height) Parameters image int width uint height uint Returns bool GetSecondsSinceAppActive() public uint GetSecondsSinceAppActive() Returns uint GetSecondsSinceComputerActive() public uint GetSecondsSinceComputerActive() Returns uint GetServerRealTime() public uint GetServerRealTime() Returns uint GetSteamUILanguage() public string GetSteamUILanguage() Returns string InitFilterText(uint) public bool InitFilterText(uint filterOptions) Parameters filterOptions uint Returns bool IsAPICallCompleted(SteamAPICall, out bool) public bool IsAPICallCompleted(SteamAPICall steamAPICall, out bool failed) Parameters steamAPICall SteamAPICall failed bool Returns bool IsOverlayEnabled() public bool IsOverlayEnabled() Returns bool IsSteamChinaLauncher() public bool IsSteamChinaLauncher() Returns bool IsSteamInBigPictureMode() public bool IsSteamInBigPictureMode() Returns bool IsSteamRunningInVR() public bool IsSteamRunningInVR() Returns bool IsSteamRunningOnSteamDeck() public bool IsSteamRunningOnSteamDeck() Returns bool IsVRHeadsetStreamingEnabled() public bool IsVRHeadsetStreamingEnabled() Returns bool OnAppResumingFromSuspend(CallbackAction<AppResumingFromSuspend>) public IDisposable OnAppResumingFromSuspend(CallbackAction<AppResumingFromSuspend> func) Parameters func CallbackAction<AppResumingFromSuspend> Returns IDisposable OnFilterTextDictionaryChanged(CallbackAction<FilterTextDictionaryChanged>) public IDisposable OnFilterTextDictionaryChanged(CallbackAction<FilterTextDictionaryChanged> func) Parameters func CallbackAction<FilterTextDictionaryChanged> Returns IDisposable OnFloatingGamepadTextInputDismissed(CallbackAction<FloatingGamepadTextInputDismissed>) public IDisposable OnFloatingGamepadTextInputDismissed(CallbackAction<FloatingGamepadTextInputDismissed> func) Parameters func CallbackAction<FloatingGamepadTextInputDismissed> Returns IDisposable OnGamepadTextInputDismissed(CallbackAction<GamepadTextInputDismissed>) public IDisposable OnGamepadTextInputDismissed(CallbackAction<GamepadTextInputDismissed> func) Parameters func CallbackAction<GamepadTextInputDismissed> Returns IDisposable OnIPCountry(CallbackAction<IPCountry>) public IDisposable OnIPCountry(CallbackAction<IPCountry> func) Parameters func CallbackAction<IPCountry> Returns IDisposable OnLowBatteryPower(CallbackAction<LowBatteryPower>) public IDisposable OnLowBatteryPower(CallbackAction<LowBatteryPower> func) Parameters func CallbackAction<LowBatteryPower> Returns IDisposable OnSteamAPICallCompleted(CallbackAction<SteamAPICallCompleted>) public IDisposable OnSteamAPICallCompleted(CallbackAction<SteamAPICallCompleted> func) Parameters func CallbackAction<SteamAPICallCompleted> Returns IDisposable OnSteamShutdown(CallbackAction<SteamShutdown>) public IDisposable OnSteamShutdown(CallbackAction<SteamShutdown> func) Parameters func CallbackAction<SteamShutdown> Returns IDisposable SetGameLauncherMode(bool) public void SetGameLauncherMode(bool launcherMode) Parameters launcherMode bool SetOverlayNotificationInset(int, int) public void SetOverlayNotificationInset(int horizontalInset, int verticalInset) Parameters horizontalInset int verticalInset int SetOverlayNotificationPosition(ENotificationPosition) public void SetOverlayNotificationPosition(ENotificationPosition notificationPosition) Parameters notificationPosition ENotificationPosition SetVRHeadsetStreamingEnabled(bool) public void SetVRHeadsetStreamingEnabled(bool enabled) Parameters enabled bool ShowFloatingGamepadTextInput(EFloatingGamepadTextInputMode, int, int, int, int) public bool ShowFloatingGamepadTextInput(EFloatingGamepadTextInputMode keyboardMode, int textFieldXPosition, int textFieldYPosition, int textFieldWidth, int textFieldHeight) Parameters keyboardMode EFloatingGamepadTextInputMode textFieldXPosition int textFieldYPosition int textFieldWidth int textFieldHeight int Returns bool ShowGamepadTextInput(EGamepadTextInputMode, EGamepadTextInputLineMode, string, uint, string) public bool ShowGamepadTextInput(EGamepadTextInputMode inputMode, EGamepadTextInputLineMode lineInputMode, string description, uint charMax, string existingText) Parameters inputMode EGamepadTextInputMode lineInputMode EGamepadTextInputLineMode description string charMax uint existingText string Returns bool StartVRDashboard() public void StartVRDashboard()"
  },
  "api/MarymoorStudios.Core.Steamworks.ISteamVideo.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ISteamVideo.html",
    "title": "Class ISteamVideo",
    "summary": "Class ISteamVideo Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public sealed class ISteamVideo : SteamNativeObject Inheritance object SteamNativeObject ISteamVideo Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Fields INTERFACE_VERSION public const string INTERFACE_VERSION = \"STEAMVIDEO_INTERFACE_V007\" Field Value string Methods GetOPFSettings(AppId) public void GetOPFSettings(AppId videoAppId) Parameters videoAppId AppId GetOPFStringForApp(AppId, Span<byte>, out int) public bool GetOPFStringForApp(AppId videoAppId, Span<byte> buffer, out int bufferSize) Parameters videoAppId AppId buffer Span<byte> bufferSize int Returns bool GetVideoURL(AppId) public void GetVideoURL(AppId videoAppId) Parameters videoAppId AppId IsBroadcasting(out int) public bool IsBroadcasting(out int numViewers) Parameters numViewers int Returns bool OnBroadcastUploadStart(CallbackAction<BroadcastUploadStart>) public IDisposable OnBroadcastUploadStart(CallbackAction<BroadcastUploadStart> func) Parameters func CallbackAction<BroadcastUploadStart> Returns IDisposable OnBroadcastUploadStop(CallbackAction<BroadcastUploadStop>) public IDisposable OnBroadcastUploadStop(CallbackAction<BroadcastUploadStop> func) Parameters func CallbackAction<BroadcastUploadStop> Returns IDisposable OnGetOPFSettingsResult(CallbackAction<GetOPFSettingsResult>) public IDisposable OnGetOPFSettingsResult(CallbackAction<GetOPFSettingsResult> func) Parameters func CallbackAction<GetOPFSettingsResult> Returns IDisposable OnGetVideoURLResult(CallbackAction<GetVideoURLResult>) public IDisposable OnGetVideoURLResult(CallbackAction<GetVideoURLResult> func) Parameters func CallbackAction<GetVideoURLResult> Returns IDisposable"
  },
  "api/MarymoorStudios.Core.Steamworks.InputActionSetHandle.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.InputActionSetHandle.html",
    "title": "Struct InputActionSetHandle",
    "summary": "Struct InputActionSetHandle Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public readonly struct InputActionSetHandle : IEquatable<InputActionSetHandle>, IComparable<InputActionSetHandle> Implements IEquatable<InputActionSetHandle> IComparable<InputActionSetHandle> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors InputActionSetHandle(ulong) public InputActionSetHandle(ulong id) Parameters id ulong Properties Id The underlying value. public ulong Id { get; } Property Value ulong Invalid The invalid id. public static ulong Invalid { get; } Property Value ulong IsValid True if not Invalid. public bool IsValid { get; } Property Value bool Methods CompareTo(InputActionSetHandle) Value-based comparison. public int CompareTo(InputActionSetHandle other) Parameters other InputActionSetHandle Returns int Equals(InputActionSetHandle) Value-based equality. public bool Equals(InputActionSetHandle other) Parameters other InputActionSetHandle Returns bool Equals(object?) public override bool Equals(object? obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() public override string ToString() Returns string Operators operator ==(InputActionSetHandle, InputActionSetHandle) Value-based equality. public static bool operator ==(InputActionSetHandle left, InputActionSetHandle right) Parameters left InputActionSetHandle right InputActionSetHandle Returns bool operator >(InputActionSetHandle, InputActionSetHandle) Value-based comparison. public static bool operator >(InputActionSetHandle left, InputActionSetHandle right) Parameters left InputActionSetHandle right InputActionSetHandle Returns bool operator >=(InputActionSetHandle, InputActionSetHandle) Value-based comparison. public static bool operator >=(InputActionSetHandle left, InputActionSetHandle right) Parameters left InputActionSetHandle right InputActionSetHandle Returns bool operator !=(InputActionSetHandle, InputActionSetHandle) Value-based equality. public static bool operator !=(InputActionSetHandle left, InputActionSetHandle right) Parameters left InputActionSetHandle right InputActionSetHandle Returns bool operator <(InputActionSetHandle, InputActionSetHandle) Value-based comparison. public static bool operator <(InputActionSetHandle left, InputActionSetHandle right) Parameters left InputActionSetHandle right InputActionSetHandle Returns bool operator <=(InputActionSetHandle, InputActionSetHandle) Value-based comparison. public static bool operator <=(InputActionSetHandle left, InputActionSetHandle right) Parameters left InputActionSetHandle right InputActionSetHandle Returns bool"
  },
  "api/MarymoorStudios.Core.Steamworks.InputAnalogActionData.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.InputAnalogActionData.html",
    "title": "Struct InputAnalogActionData",
    "summary": "Struct InputAnalogActionData Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct InputAnalogActionData Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields eMode public EInputSourceMode eMode Field Value EInputSourceMode x public float x Field Value float y public float y Field Value float Properties bActive public bool bActive { get; set; } Property Value bool"
  },
  "api/MarymoorStudios.Core.Steamworks.InputAnalogActionHandle.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.InputAnalogActionHandle.html",
    "title": "Struct InputAnalogActionHandle",
    "summary": "Struct InputAnalogActionHandle Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public readonly struct InputAnalogActionHandle : IEquatable<InputAnalogActionHandle>, IComparable<InputAnalogActionHandle> Implements IEquatable<InputAnalogActionHandle> IComparable<InputAnalogActionHandle> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors InputAnalogActionHandle(ulong) public InputAnalogActionHandle(ulong id) Parameters id ulong Properties Id The underlying value. public ulong Id { get; } Property Value ulong Invalid The invalid id. public static ulong Invalid { get; } Property Value ulong IsValid True if not Invalid. public bool IsValid { get; } Property Value bool Methods CompareTo(InputAnalogActionHandle) Value-based comparison. public int CompareTo(InputAnalogActionHandle other) Parameters other InputAnalogActionHandle Returns int Equals(InputAnalogActionHandle) Value-based equality. public bool Equals(InputAnalogActionHandle other) Parameters other InputAnalogActionHandle Returns bool Equals(object?) public override bool Equals(object? obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() public override string ToString() Returns string Operators operator ==(InputAnalogActionHandle, InputAnalogActionHandle) Value-based equality. public static bool operator ==(InputAnalogActionHandle left, InputAnalogActionHandle right) Parameters left InputAnalogActionHandle right InputAnalogActionHandle Returns bool operator >(InputAnalogActionHandle, InputAnalogActionHandle) Value-based comparison. public static bool operator >(InputAnalogActionHandle left, InputAnalogActionHandle right) Parameters left InputAnalogActionHandle right InputAnalogActionHandle Returns bool operator >=(InputAnalogActionHandle, InputAnalogActionHandle) Value-based comparison. public static bool operator >=(InputAnalogActionHandle left, InputAnalogActionHandle right) Parameters left InputAnalogActionHandle right InputAnalogActionHandle Returns bool operator !=(InputAnalogActionHandle, InputAnalogActionHandle) Value-based equality. public static bool operator !=(InputAnalogActionHandle left, InputAnalogActionHandle right) Parameters left InputAnalogActionHandle right InputAnalogActionHandle Returns bool operator <(InputAnalogActionHandle, InputAnalogActionHandle) Value-based comparison. public static bool operator <(InputAnalogActionHandle left, InputAnalogActionHandle right) Parameters left InputAnalogActionHandle right InputAnalogActionHandle Returns bool operator <=(InputAnalogActionHandle, InputAnalogActionHandle) Value-based comparison. public static bool operator <=(InputAnalogActionHandle left, InputAnalogActionHandle right) Parameters left InputAnalogActionHandle right InputAnalogActionHandle Returns bool"
  },
  "api/MarymoorStudios.Core.Steamworks.InputDigitalActionData.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.InputDigitalActionData.html",
    "title": "Struct InputDigitalActionData",
    "summary": "Struct InputDigitalActionData Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct InputDigitalActionData Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Properties bActive public bool bActive { get; set; } Property Value bool bState public bool bState { get; set; } Property Value bool"
  },
  "api/MarymoorStudios.Core.Steamworks.InputDigitalActionHandle.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.InputDigitalActionHandle.html",
    "title": "Struct InputDigitalActionHandle",
    "summary": "Struct InputDigitalActionHandle Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public readonly struct InputDigitalActionHandle : IEquatable<InputDigitalActionHandle>, IComparable<InputDigitalActionHandle> Implements IEquatable<InputDigitalActionHandle> IComparable<InputDigitalActionHandle> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors InputDigitalActionHandle(ulong) public InputDigitalActionHandle(ulong id) Parameters id ulong Properties Id The underlying value. public ulong Id { get; } Property Value ulong Invalid The invalid id. public static ulong Invalid { get; } Property Value ulong IsValid True if not Invalid. public bool IsValid { get; } Property Value bool Methods CompareTo(InputDigitalActionHandle) Value-based comparison. public int CompareTo(InputDigitalActionHandle other) Parameters other InputDigitalActionHandle Returns int Equals(InputDigitalActionHandle) Value-based equality. public bool Equals(InputDigitalActionHandle other) Parameters other InputDigitalActionHandle Returns bool Equals(object?) public override bool Equals(object? obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() public override string ToString() Returns string Operators operator ==(InputDigitalActionHandle, InputDigitalActionHandle) Value-based equality. public static bool operator ==(InputDigitalActionHandle left, InputDigitalActionHandle right) Parameters left InputDigitalActionHandle right InputDigitalActionHandle Returns bool operator >(InputDigitalActionHandle, InputDigitalActionHandle) Value-based comparison. public static bool operator >(InputDigitalActionHandle left, InputDigitalActionHandle right) Parameters left InputDigitalActionHandle right InputDigitalActionHandle Returns bool operator >=(InputDigitalActionHandle, InputDigitalActionHandle) Value-based comparison. public static bool operator >=(InputDigitalActionHandle left, InputDigitalActionHandle right) Parameters left InputDigitalActionHandle right InputDigitalActionHandle Returns bool operator !=(InputDigitalActionHandle, InputDigitalActionHandle) Value-based equality. public static bool operator !=(InputDigitalActionHandle left, InputDigitalActionHandle right) Parameters left InputDigitalActionHandle right InputDigitalActionHandle Returns bool operator <(InputDigitalActionHandle, InputDigitalActionHandle) Value-based comparison. public static bool operator <(InputDigitalActionHandle left, InputDigitalActionHandle right) Parameters left InputDigitalActionHandle right InputDigitalActionHandle Returns bool operator <=(InputDigitalActionHandle, InputDigitalActionHandle) Value-based comparison. public static bool operator <=(InputDigitalActionHandle left, InputDigitalActionHandle right) Parameters left InputDigitalActionHandle right InputDigitalActionHandle Returns bool"
  },
  "api/MarymoorStudios.Core.Steamworks.InputHandle.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.InputHandle.html",
    "title": "Struct InputHandle",
    "summary": "Struct InputHandle Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public readonly struct InputHandle : IEquatable<InputHandle>, IComparable<InputHandle> Implements IEquatable<InputHandle> IComparable<InputHandle> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors InputHandle(ulong) public InputHandle(ulong id) Parameters id ulong Properties Id The underlying value. public ulong Id { get; } Property Value ulong Invalid The invalid id. public static ulong Invalid { get; } Property Value ulong IsValid True if not Invalid. public bool IsValid { get; } Property Value bool Methods CompareTo(InputHandle) Value-based comparison. public int CompareTo(InputHandle other) Parameters other InputHandle Returns int Equals(InputHandle) Value-based equality. public bool Equals(InputHandle other) Parameters other InputHandle Returns bool Equals(object?) public override bool Equals(object? obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() public override string ToString() Returns string Operators operator ==(InputHandle, InputHandle) Value-based equality. public static bool operator ==(InputHandle left, InputHandle right) Parameters left InputHandle right InputHandle Returns bool operator >(InputHandle, InputHandle) Value-based comparison. public static bool operator >(InputHandle left, InputHandle right) Parameters left InputHandle right InputHandle Returns bool operator >=(InputHandle, InputHandle) Value-based comparison. public static bool operator >=(InputHandle left, InputHandle right) Parameters left InputHandle right InputHandle Returns bool operator !=(InputHandle, InputHandle) Value-based equality. public static bool operator !=(InputHandle left, InputHandle right) Parameters left InputHandle right InputHandle Returns bool operator <(InputHandle, InputHandle) Value-based comparison. public static bool operator <(InputHandle left, InputHandle right) Parameters left InputHandle right InputHandle Returns bool operator <=(InputHandle, InputHandle) Value-based comparison. public static bool operator <=(InputHandle left, InputHandle right) Parameters left InputHandle right InputHandle Returns bool"
  },
  "api/MarymoorStudios.Core.Steamworks.InputMotionData.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.InputMotionData.html",
    "title": "Struct InputMotionData",
    "summary": "Struct InputMotionData Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct InputMotionData Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields PosAccelX public float PosAccelX Field Value float PosAccelY public float PosAccelY Field Value float PosAccelZ public float PosAccelZ Field Value float RotQuatW public float RotQuatW Field Value float RotQuatX public float RotQuatX Field Value float RotQuatY public float RotQuatY Field Value float RotQuatZ public float RotQuatZ Field Value float RotVelX public float RotVelX Field Value float RotVelY public float RotVelY Field Value float RotVelZ public float RotVelZ Field Value float"
  },
  "api/MarymoorStudios.Core.Steamworks.ItemInstalled.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ItemInstalled.html",
    "title": "Struct ItemInstalled",
    "summary": "Struct ItemInstalled Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct ItemInstalled : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields AppId public AppId AppId Field Value AppId CallbackId public const int CallbackId = 3405 Field Value int LegacyContent public UGCHandle LegacyContent Field Value UGCHandle ManifestID public ulong ManifestID Field Value ulong PublishedFileId public PublishedFileId PublishedFileId Field Value PublishedFileId"
  },
  "api/MarymoorStudios.Core.Steamworks.JoinClanChatRoomCompletionResult.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.JoinClanChatRoomCompletionResult.html",
    "title": "Struct JoinClanChatRoomCompletionResult",
    "summary": "Struct JoinClanChatRoomCompletionResult Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct JoinClanChatRoomCompletionResult : ICallResult Implements ICallResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 342 Field Value int ChatRoomEnterResponse public EChatRoomEnterResponse ChatRoomEnterResponse Field Value EChatRoomEnterResponse SteamIDClanChat public CSteamID SteamIDClanChat Field Value CSteamID"
  },
  "api/MarymoorStudios.Core.Steamworks.JoinPartyCallback.ConnectStringType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.JoinPartyCallback.ConnectStringType.html",
    "title": "Struct JoinPartyCallback.ConnectStringType",
    "summary": "Struct JoinPartyCallback.ConnectStringType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct JoinPartyCallback.ConnectStringType Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields Length public const int Length = 256 Field Value int Operators implicit operator string(ConnectStringType) public static implicit operator string(JoinPartyCallback.ConnectStringType v) Parameters v JoinPartyCallback.ConnectStringType Returns string implicit operator ConnectStringType(string) public static implicit operator JoinPartyCallback.ConnectStringType(string s) Parameters s string Returns JoinPartyCallback.ConnectStringType"
  },
  "api/MarymoorStudios.Core.Steamworks.JoinPartyCallback.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.JoinPartyCallback.html",
    "title": "Struct JoinPartyCallback",
    "summary": "Struct JoinPartyCallback Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct JoinPartyCallback : ICallResult Implements ICallResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields BeaconID public PartyBeaconID BeaconID Field Value PartyBeaconID CallbackId public const int CallbackId = 5301 Field Value int ConnectString public JoinPartyCallback.ConnectStringType ConnectString Field Value JoinPartyCallback.ConnectStringType Result public EResult Result Field Value EResult SteamIDBeaconOwner public CSteamID SteamIDBeaconOwner Field Value CSteamID"
  },
  "api/MarymoorStudios.Core.Steamworks.LeaderboardEntry.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.LeaderboardEntry.html",
    "title": "Struct LeaderboardEntry",
    "summary": "Struct LeaderboardEntry Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct LeaderboardEntry Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields Details public int Details Field Value int GlobalRank public int GlobalRank Field Value int Score public int Score Field Value int SteamIDUser public CSteamID SteamIDUser Field Value CSteamID UGC public UGCHandle UGC Field Value UGCHandle"
  },
  "api/MarymoorStudios.Core.Steamworks.LeaderboardFindResult.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.LeaderboardFindResult.html",
    "title": "Struct LeaderboardFindResult",
    "summary": "Struct LeaderboardFindResult Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct LeaderboardFindResult : ICallResult Implements ICallResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 1104 Field Value int LeaderboardFound public byte LeaderboardFound Field Value byte SteamLeaderboard public SteamLeaderboard SteamLeaderboard Field Value SteamLeaderboard"
  },
  "api/MarymoorStudios.Core.Steamworks.LeaderboardScoreUploaded.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.LeaderboardScoreUploaded.html",
    "title": "Struct LeaderboardScoreUploaded",
    "summary": "Struct LeaderboardScoreUploaded Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct LeaderboardScoreUploaded : ICallResult Implements ICallResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 1106 Field Value int GlobalRankNew public int GlobalRankNew Field Value int GlobalRankPrevious public int GlobalRankPrevious Field Value int Score public int Score Field Value int ScoreChanged public byte ScoreChanged Field Value byte SteamLeaderboard public SteamLeaderboard SteamLeaderboard Field Value SteamLeaderboard Success public byte Success Field Value byte"
  },
  "api/MarymoorStudios.Core.Steamworks.LeaderboardScoresDownloaded.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.LeaderboardScoresDownloaded.html",
    "title": "Struct LeaderboardScoresDownloaded",
    "summary": "Struct LeaderboardScoresDownloaded Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct LeaderboardScoresDownloaded : ICallResult Implements ICallResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 1105 Field Value int EntryCount public int EntryCount Field Value int SteamLeaderboard public SteamLeaderboard SteamLeaderboard Field Value SteamLeaderboard SteamLeaderboardEntries public SteamLeaderboardEntries SteamLeaderboardEntries Field Value SteamLeaderboardEntries"
  },
  "api/MarymoorStudios.Core.Steamworks.LeaderboardUGCSet.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.LeaderboardUGCSet.html",
    "title": "Struct LeaderboardUGCSet",
    "summary": "Struct LeaderboardUGCSet Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct LeaderboardUGCSet : ICallResult Implements ICallResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 1111 Field Value int Result public EResult Result Field Value EResult SteamLeaderboard public SteamLeaderboard SteamLeaderboard Field Value SteamLeaderboard"
  },
  "api/MarymoorStudios.Core.Steamworks.LicensesUpdated.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.LicensesUpdated.html",
    "title": "Struct LicensesUpdated",
    "summary": "Struct LicensesUpdated Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct LicensesUpdated : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 125 Field Value int"
  },
  "api/MarymoorStudios.Core.Steamworks.LobbyChatMsg.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.LobbyChatMsg.html",
    "title": "Struct LobbyChatMsg",
    "summary": "Struct LobbyChatMsg Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct LobbyChatMsg : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 507 Field Value int ChatEntryType public byte ChatEntryType Field Value byte ChatID public uint ChatID Field Value uint SteamIDLobby public CSteamID SteamIDLobby Field Value CSteamID SteamIDUser public CSteamID SteamIDUser Field Value CSteamID"
  },
  "api/MarymoorStudios.Core.Steamworks.LobbyChatUpdate.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.LobbyChatUpdate.html",
    "title": "Struct LobbyChatUpdate",
    "summary": "Struct LobbyChatUpdate Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct LobbyChatUpdate : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 506 Field Value int Change public EChatMemberStateChange Change Field Value EChatMemberStateChange SteamIDLobby public CSteamID SteamIDLobby Field Value CSteamID SteamIDMakingChange public CSteamID SteamIDMakingChange Field Value CSteamID SteamIDUserChanged public CSteamID SteamIDUserChanged Field Value CSteamID"
  },
  "api/MarymoorStudios.Core.Steamworks.LobbyCreated.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.LobbyCreated.html",
    "title": "Struct LobbyCreated",
    "summary": "Struct LobbyCreated Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct LobbyCreated : ICallResult Implements ICallResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 513 Field Value int Result public EResult Result Field Value EResult SteamIDLobby public CSteamID SteamIDLobby Field Value CSteamID"
  },
  "api/MarymoorStudios.Core.Steamworks.LobbyDataUpdate.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.LobbyDataUpdate.html",
    "title": "Struct LobbyDataUpdate",
    "summary": "Struct LobbyDataUpdate Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct LobbyDataUpdate : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 505 Field Value int SteamIDLobby public CSteamID SteamIDLobby Field Value CSteamID SteamIDMember public CSteamID SteamIDMember Field Value CSteamID Success public byte Success Field Value byte"
  },
  "api/MarymoorStudios.Core.Steamworks.LobbyEnter.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.LobbyEnter.html",
    "title": "Struct LobbyEnter",
    "summary": "Struct LobbyEnter Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct LobbyEnter : ICallResult Implements ICallResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 504 Field Value int ChatPermissions public uint ChatPermissions Field Value uint Response public EChatRoomEnterResponse Response Field Value EChatRoomEnterResponse SteamIDLobby public CSteamID SteamIDLobby Field Value CSteamID Properties Locked public bool Locked { get; set; } Property Value bool"
  },
  "api/MarymoorStudios.Core.Steamworks.LobbyGameCreated.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.LobbyGameCreated.html",
    "title": "Struct LobbyGameCreated",
    "summary": "Struct LobbyGameCreated Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct LobbyGameCreated : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 509 Field Value int IP public uint IP Field Value uint Port public ushort Port Field Value ushort SteamIDGameServer public CSteamID SteamIDGameServer Field Value CSteamID SteamIDLobby public CSteamID SteamIDLobby Field Value CSteamID"
  },
  "api/MarymoorStudios.Core.Steamworks.LobbyInvite.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.LobbyInvite.html",
    "title": "Struct LobbyInvite",
    "summary": "Struct LobbyInvite Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct LobbyInvite : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 503 Field Value int GameID public CGameID GameID Field Value CGameID SteamIDLobby public CSteamID SteamIDLobby Field Value CSteamID SteamIDUser public CSteamID SteamIDUser Field Value CSteamID"
  },
  "api/MarymoorStudios.Core.Steamworks.LobbyKicked.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.LobbyKicked.html",
    "title": "Struct LobbyKicked",
    "summary": "Struct LobbyKicked Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct LobbyKicked : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 512 Field Value int KickedDueToDisconnect public byte KickedDueToDisconnect Field Value byte SteamIDAdmin public CSteamID SteamIDAdmin Field Value CSteamID SteamIDLobby public CSteamID SteamIDLobby Field Value CSteamID"
  },
  "api/MarymoorStudios.Core.Steamworks.LobbyMatchList.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.LobbyMatchList.html",
    "title": "Struct LobbyMatchList",
    "summary": "Struct LobbyMatchList Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct LobbyMatchList : ICallResult Implements ICallResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 510 Field Value int LobbiesMatching public uint LobbiesMatching Field Value uint"
  },
  "api/MarymoorStudios.Core.Steamworks.LowBatteryPower.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.LowBatteryPower.html",
    "title": "Struct LowBatteryPower",
    "summary": "Struct LowBatteryPower Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct LowBatteryPower : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 702 Field Value int MinutesBatteryLeft public byte MinutesBatteryLeft Field Value byte"
  },
  "api/MarymoorStudios.Core.Steamworks.MarketEligibilityResponse.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.MarketEligibilityResponse.html",
    "title": "Struct MarketEligibilityResponse",
    "summary": "Struct MarketEligibilityResponse Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct MarketEligibilityResponse : ICallResult Implements ICallResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields AllowedAtTime public RTime32 AllowedAtTime Field Value RTime32 CallbackId public const int CallbackId = 166 Field Value int NewDeviceCooldown public int NewDeviceCooldown Field Value int NotAllowedReason public EMarketNotAllowedReasonFlags NotAllowedReason Field Value EMarketNotAllowedReasonFlags SteamGuardRequiredDays public int SteamGuardRequiredDays Field Value int Properties Allowed public bool Allowed { get; set; } Property Value bool"
  },
  "api/MarymoorStudios.Core.Steamworks.MatchMakingKeyValuePair.KeyType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.MatchMakingKeyValuePair.KeyType.html",
    "title": "Struct MatchMakingKeyValuePair.KeyType",
    "summary": "Struct MatchMakingKeyValuePair.KeyType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct MatchMakingKeyValuePair.KeyType Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields Length public const int Length = 256 Field Value int Operators implicit operator string(KeyType) public static implicit operator string(MatchMakingKeyValuePair.KeyType v) Parameters v MatchMakingKeyValuePair.KeyType Returns string implicit operator KeyType(string) public static implicit operator MatchMakingKeyValuePair.KeyType(string s) Parameters s string Returns MatchMakingKeyValuePair.KeyType"
  },
  "api/MarymoorStudios.Core.Steamworks.MatchMakingKeyValuePair.ValueType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.MatchMakingKeyValuePair.ValueType.html",
    "title": "Struct MatchMakingKeyValuePair.ValueType",
    "summary": "Struct MatchMakingKeyValuePair.ValueType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct MatchMakingKeyValuePair.ValueType Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields Length public const int Length = 256 Field Value int Operators implicit operator string(ValueType) public static implicit operator string(MatchMakingKeyValuePair.ValueType v) Parameters v MatchMakingKeyValuePair.ValueType Returns string implicit operator ValueType(string) public static implicit operator MatchMakingKeyValuePair.ValueType(string s) Parameters s string Returns MatchMakingKeyValuePair.ValueType"
  },
  "api/MarymoorStudios.Core.Steamworks.MatchMakingKeyValuePair.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.MatchMakingKeyValuePair.html",
    "title": "Struct MatchMakingKeyValuePair",
    "summary": "Struct MatchMakingKeyValuePair Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct MatchMakingKeyValuePair Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields Key public MatchMakingKeyValuePair.KeyType Key Field Value MatchMakingKeyValuePair.KeyType Value public MatchMakingKeyValuePair.ValueType Value Field Value MatchMakingKeyValuePair.ValueType"
  },
  "api/MarymoorStudios.Core.Steamworks.MatchMakingKeyValuePairList.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.MatchMakingKeyValuePairList.html",
    "title": "Struct MatchMakingKeyValuePairList",
    "summary": "Struct MatchMakingKeyValuePairList Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll [NativeMarshalling(typeof(MatchMakingKeyValuePairListMarshaller))] public readonly struct MatchMakingKeyValuePairList Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors MatchMakingKeyValuePairList(IEnumerable<MatchMakingKeyValuePair>) public MatchMakingKeyValuePairList(IEnumerable<MatchMakingKeyValuePair> filters) Parameters filters IEnumerable<MatchMakingKeyValuePair> Fields Filters public readonly MatchMakingKeyValuePair[] Filters Field Value MatchMakingKeyValuePair[] Properties Length public int Length { get; } Property Value int"
  },
  "api/MarymoorStudios.Core.Steamworks.MicroTxnAuthorizationResponse.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.MicroTxnAuthorizationResponse.html",
    "title": "Struct MicroTxnAuthorizationResponse",
    "summary": "Struct MicroTxnAuthorizationResponse Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct MicroTxnAuthorizationResponse : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields AppId public uint AppId Field Value uint Authorized public byte Authorized Field Value byte CallbackId public const int CallbackId = 152 Field Value int OrderID public ulong OrderID Field Value ulong"
  },
  "api/MarymoorStudios.Core.Steamworks.MusicPlayerRemoteToFront.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.MusicPlayerRemoteToFront.html",
    "title": "Struct MusicPlayerRemoteToFront",
    "summary": "Struct MusicPlayerRemoteToFront Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct MusicPlayerRemoteToFront : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 4103 Field Value int"
  },
  "api/MarymoorStudios.Core.Steamworks.MusicPlayerRemoteWillActivate.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.MusicPlayerRemoteWillActivate.html",
    "title": "Struct MusicPlayerRemoteWillActivate",
    "summary": "Struct MusicPlayerRemoteWillActivate Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct MusicPlayerRemoteWillActivate : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 4101 Field Value int"
  },
  "api/MarymoorStudios.Core.Steamworks.MusicPlayerRemoteWillDeactivate.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.MusicPlayerRemoteWillDeactivate.html",
    "title": "Struct MusicPlayerRemoteWillDeactivate",
    "summary": "Struct MusicPlayerRemoteWillDeactivate Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct MusicPlayerRemoteWillDeactivate : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 4102 Field Value int"
  },
  "api/MarymoorStudios.Core.Steamworks.MusicPlayerSelectsPlaylistEntry.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.MusicPlayerSelectsPlaylistEntry.html",
    "title": "Struct MusicPlayerSelectsPlaylistEntry",
    "summary": "Struct MusicPlayerSelectsPlaylistEntry Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct MusicPlayerSelectsPlaylistEntry : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 4013 Field Value int ID public int ID Field Value int"
  },
  "api/MarymoorStudios.Core.Steamworks.MusicPlayerSelectsQueueEntry.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.MusicPlayerSelectsQueueEntry.html",
    "title": "Struct MusicPlayerSelectsQueueEntry",
    "summary": "Struct MusicPlayerSelectsQueueEntry Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct MusicPlayerSelectsQueueEntry : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 4012 Field Value int ID public int ID Field Value int"
  },
  "api/MarymoorStudios.Core.Steamworks.MusicPlayerWantsLooped.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.MusicPlayerWantsLooped.html",
    "title": "Struct MusicPlayerWantsLooped",
    "summary": "Struct MusicPlayerWantsLooped Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct MusicPlayerWantsLooped : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 4110 Field Value int Properties Looped public bool Looped { get; set; } Property Value bool"
  },
  "api/MarymoorStudios.Core.Steamworks.MusicPlayerWantsPause.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.MusicPlayerWantsPause.html",
    "title": "Struct MusicPlayerWantsPause",
    "summary": "Struct MusicPlayerWantsPause Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct MusicPlayerWantsPause : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 4106 Field Value int"
  },
  "api/MarymoorStudios.Core.Steamworks.MusicPlayerWantsPlay.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.MusicPlayerWantsPlay.html",
    "title": "Struct MusicPlayerWantsPlay",
    "summary": "Struct MusicPlayerWantsPlay Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct MusicPlayerWantsPlay : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 4105 Field Value int"
  },
  "api/MarymoorStudios.Core.Steamworks.MusicPlayerWantsPlayNext.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.MusicPlayerWantsPlayNext.html",
    "title": "Struct MusicPlayerWantsPlayNext",
    "summary": "Struct MusicPlayerWantsPlayNext Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct MusicPlayerWantsPlayNext : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 4108 Field Value int"
  },
  "api/MarymoorStudios.Core.Steamworks.MusicPlayerWantsPlayPrevious.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.MusicPlayerWantsPlayPrevious.html",
    "title": "Struct MusicPlayerWantsPlayPrevious",
    "summary": "Struct MusicPlayerWantsPlayPrevious Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct MusicPlayerWantsPlayPrevious : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 4107 Field Value int"
  },
  "api/MarymoorStudios.Core.Steamworks.MusicPlayerWantsPlayingRepeatStatus.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.MusicPlayerWantsPlayingRepeatStatus.html",
    "title": "Struct MusicPlayerWantsPlayingRepeatStatus",
    "summary": "Struct MusicPlayerWantsPlayingRepeatStatus Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct MusicPlayerWantsPlayingRepeatStatus : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 4114 Field Value int PlayingRepeatStatus public int PlayingRepeatStatus Field Value int"
  },
  "api/MarymoorStudios.Core.Steamworks.MusicPlayerWantsShuffled.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.MusicPlayerWantsShuffled.html",
    "title": "Struct MusicPlayerWantsShuffled",
    "summary": "Struct MusicPlayerWantsShuffled Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct MusicPlayerWantsShuffled : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 4109 Field Value int Properties Shuffled public bool Shuffled { get; set; } Property Value bool"
  },
  "api/MarymoorStudios.Core.Steamworks.MusicPlayerWantsVolume.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.MusicPlayerWantsVolume.html",
    "title": "Struct MusicPlayerWantsVolume",
    "summary": "Struct MusicPlayerWantsVolume Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct MusicPlayerWantsVolume : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 4011 Field Value int NewVolume public float NewVolume Field Value float"
  },
  "api/MarymoorStudios.Core.Steamworks.MusicPlayerWillQuit.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.MusicPlayerWillQuit.html",
    "title": "Struct MusicPlayerWillQuit",
    "summary": "Struct MusicPlayerWillQuit Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct MusicPlayerWillQuit : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 4104 Field Value int"
  },
  "api/MarymoorStudios.Core.Steamworks.NewUrlLaunchParameters.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.NewUrlLaunchParameters.html",
    "title": "Struct NewUrlLaunchParameters",
    "summary": "Struct NewUrlLaunchParameters Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct NewUrlLaunchParameters : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 1014 Field Value int"
  },
  "api/MarymoorStudios.Core.Steamworks.NumberOfCurrentPlayers.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.NumberOfCurrentPlayers.html",
    "title": "Struct NumberOfCurrentPlayers",
    "summary": "Struct NumberOfCurrentPlayers Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct NumberOfCurrentPlayers : ICallResult Implements ICallResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 1107 Field Value int Players public int Players Field Value int Success public byte Success Field Value byte"
  },
  "api/MarymoorStudios.Core.Steamworks.OverlayBrowserProtocolNavigation.URIType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.OverlayBrowserProtocolNavigation.URIType.html",
    "title": "Struct OverlayBrowserProtocolNavigation.URIType",
    "summary": "Struct OverlayBrowserProtocolNavigation.URIType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct OverlayBrowserProtocolNavigation.URIType Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields Length public const int Length = 1024 Field Value int Operators implicit operator string(URIType) public static implicit operator string(OverlayBrowserProtocolNavigation.URIType v) Parameters v OverlayBrowserProtocolNavigation.URIType Returns string implicit operator URIType(string) public static implicit operator OverlayBrowserProtocolNavigation.URIType(string s) Parameters s string Returns OverlayBrowserProtocolNavigation.URIType"
  },
  "api/MarymoorStudios.Core.Steamworks.OverlayBrowserProtocolNavigation.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.OverlayBrowserProtocolNavigation.html",
    "title": "Struct OverlayBrowserProtocolNavigation",
    "summary": "Struct OverlayBrowserProtocolNavigation Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct OverlayBrowserProtocolNavigation : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 349 Field Value int URI public OverlayBrowserProtocolNavigation.URIType URI Field Value OverlayBrowserProtocolNavigation.URIType"
  },
  "api/MarymoorStudios.Core.Steamworks.P2PSessionConnectFail.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.P2PSessionConnectFail.html",
    "title": "Struct P2PSessionConnectFail",
    "summary": "Struct P2PSessionConnectFail Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct P2PSessionConnectFail : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 1203 Field Value int P2PSessionError public byte P2PSessionError Field Value byte SteamIDRemote public CSteamID SteamIDRemote Field Value CSteamID"
  },
  "api/MarymoorStudios.Core.Steamworks.P2PSessionRequest.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.P2PSessionRequest.html",
    "title": "Struct P2PSessionRequest",
    "summary": "Struct P2PSessionRequest Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct P2PSessionRequest : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 1202 Field Value int SteamIDRemote public CSteamID SteamIDRemote Field Value CSteamID"
  },
  "api/MarymoorStudios.Core.Steamworks.P2PSessionState.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.P2PSessionState.html",
    "title": "Struct P2PSessionState",
    "summary": "Struct P2PSessionState Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct P2PSessionState Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields BytesQueuedForSend public int BytesQueuedForSend Field Value int Connecting public byte Connecting Field Value byte ConnectionActive public byte ConnectionActive Field Value byte P2PSessionError public byte P2PSessionError Field Value byte PacketsQueuedForSend public int PacketsQueuedForSend Field Value int RemoteIP public uint RemoteIP Field Value uint RemotePort public ushort RemotePort Field Value ushort UsingRelay public byte UsingRelay Field Value byte"
  },
  "api/MarymoorStudios.Core.Steamworks.PartyBeaconID.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.PartyBeaconID.html",
    "title": "Struct PartyBeaconID",
    "summary": "Struct PartyBeaconID Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public readonly struct PartyBeaconID : IEquatable<PartyBeaconID>, IComparable<PartyBeaconID> Implements IEquatable<PartyBeaconID> IComparable<PartyBeaconID> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors PartyBeaconID(ulong) public PartyBeaconID(ulong id) Parameters id ulong Properties Id The underlying value. public ulong Id { get; } Property Value ulong Invalid The invalid id. public static ulong Invalid { get; } Property Value ulong IsValid True if not Invalid. public bool IsValid { get; } Property Value bool Methods CompareTo(PartyBeaconID) Value-based comparison. public int CompareTo(PartyBeaconID other) Parameters other PartyBeaconID Returns int Equals(PartyBeaconID) Value-based equality. public bool Equals(PartyBeaconID other) Parameters other PartyBeaconID Returns bool Equals(object?) public override bool Equals(object? obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() public override string ToString() Returns string Operators operator ==(PartyBeaconID, PartyBeaconID) Value-based equality. public static bool operator ==(PartyBeaconID left, PartyBeaconID right) Parameters left PartyBeaconID right PartyBeaconID Returns bool operator >(PartyBeaconID, PartyBeaconID) Value-based comparison. public static bool operator >(PartyBeaconID left, PartyBeaconID right) Parameters left PartyBeaconID right PartyBeaconID Returns bool operator >=(PartyBeaconID, PartyBeaconID) Value-based comparison. public static bool operator >=(PartyBeaconID left, PartyBeaconID right) Parameters left PartyBeaconID right PartyBeaconID Returns bool operator !=(PartyBeaconID, PartyBeaconID) Value-based equality. public static bool operator !=(PartyBeaconID left, PartyBeaconID right) Parameters left PartyBeaconID right PartyBeaconID Returns bool operator <(PartyBeaconID, PartyBeaconID) Value-based comparison. public static bool operator <(PartyBeaconID left, PartyBeaconID right) Parameters left PartyBeaconID right PartyBeaconID Returns bool operator <=(PartyBeaconID, PartyBeaconID) Value-based comparison. public static bool operator <=(PartyBeaconID left, PartyBeaconID right) Parameters left PartyBeaconID right PartyBeaconID Returns bool"
  },
  "api/MarymoorStudios.Core.Steamworks.PersonaStateChange.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.PersonaStateChange.html",
    "title": "Struct PersonaStateChange",
    "summary": "Struct PersonaStateChange Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct PersonaStateChange : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 304 Field Value int ChangeFlags public EPersonaChange ChangeFlags Field Value EPersonaChange SteamID public ulong SteamID Field Value ulong"
  },
  "api/MarymoorStudios.Core.Steamworks.PlatformLimits.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.PlatformLimits.html",
    "title": "Class PlatformLimits",
    "summary": "Class PlatformLimits Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public static class PlatformLimits Inheritance object PlatformLimits Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Fields ValveCallbackPack public const int ValveCallbackPack = 8 Field Value int"
  },
  "api/MarymoorStudios.Core.Steamworks.PlaybackStatusHasChanged.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.PlaybackStatusHasChanged.html",
    "title": "Struct PlaybackStatusHasChanged",
    "summary": "Struct PlaybackStatusHasChanged Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct PlaybackStatusHasChanged : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 4001 Field Value int"
  },
  "api/MarymoorStudios.Core.Steamworks.PublishedFileId.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.PublishedFileId.html",
    "title": "Struct PublishedFileId",
    "summary": "Struct PublishedFileId Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public readonly struct PublishedFileId : IEquatable<PublishedFileId>, IComparable<PublishedFileId> Implements IEquatable<PublishedFileId> IComparable<PublishedFileId> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors PublishedFileId(ulong) public PublishedFileId(ulong id) Parameters id ulong Properties Id The underlying value. public ulong Id { get; } Property Value ulong Invalid The invalid id. public static ulong Invalid { get; } Property Value ulong IsValid True if not Invalid. public bool IsValid { get; } Property Value bool Methods CompareTo(PublishedFileId) Value-based comparison. public int CompareTo(PublishedFileId other) Parameters other PublishedFileId Returns int Equals(PublishedFileId) Value-based equality. public bool Equals(PublishedFileId other) Parameters other PublishedFileId Returns bool Equals(object?) public override bool Equals(object? obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() public override string ToString() Returns string Operators operator ==(PublishedFileId, PublishedFileId) Value-based equality. public static bool operator ==(PublishedFileId left, PublishedFileId right) Parameters left PublishedFileId right PublishedFileId Returns bool operator >(PublishedFileId, PublishedFileId) Value-based comparison. public static bool operator >(PublishedFileId left, PublishedFileId right) Parameters left PublishedFileId right PublishedFileId Returns bool operator >=(PublishedFileId, PublishedFileId) Value-based comparison. public static bool operator >=(PublishedFileId left, PublishedFileId right) Parameters left PublishedFileId right PublishedFileId Returns bool operator !=(PublishedFileId, PublishedFileId) Value-based equality. public static bool operator !=(PublishedFileId left, PublishedFileId right) Parameters left PublishedFileId right PublishedFileId Returns bool operator <(PublishedFileId, PublishedFileId) Value-based comparison. public static bool operator <(PublishedFileId left, PublishedFileId right) Parameters left PublishedFileId right PublishedFileId Returns bool operator <=(PublishedFileId, PublishedFileId) Value-based comparison. public static bool operator <=(PublishedFileId left, PublishedFileId right) Parameters left PublishedFileId right PublishedFileId Returns bool"
  },
  "api/MarymoorStudios.Core.Steamworks.PublishedFileUpdateHandle.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.PublishedFileUpdateHandle.html",
    "title": "Struct PublishedFileUpdateHandle",
    "summary": "Struct PublishedFileUpdateHandle Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public readonly struct PublishedFileUpdateHandle : IEquatable<PublishedFileUpdateHandle>, IComparable<PublishedFileUpdateHandle> Implements IEquatable<PublishedFileUpdateHandle> IComparable<PublishedFileUpdateHandle> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors PublishedFileUpdateHandle(ulong) public PublishedFileUpdateHandle(ulong id) Parameters id ulong Properties Id The underlying value. public ulong Id { get; } Property Value ulong Invalid The invalid id. public static ulong Invalid { get; } Property Value ulong IsValid True if not Invalid. public bool IsValid { get; } Property Value bool Methods CompareTo(PublishedFileUpdateHandle) Value-based comparison. public int CompareTo(PublishedFileUpdateHandle other) Parameters other PublishedFileUpdateHandle Returns int Equals(PublishedFileUpdateHandle) Value-based equality. public bool Equals(PublishedFileUpdateHandle other) Parameters other PublishedFileUpdateHandle Returns bool Equals(object?) public override bool Equals(object? obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() public override string ToString() Returns string Operators operator ==(PublishedFileUpdateHandle, PublishedFileUpdateHandle) Value-based equality. public static bool operator ==(PublishedFileUpdateHandle left, PublishedFileUpdateHandle right) Parameters left PublishedFileUpdateHandle right PublishedFileUpdateHandle Returns bool operator >(PublishedFileUpdateHandle, PublishedFileUpdateHandle) Value-based comparison. public static bool operator >(PublishedFileUpdateHandle left, PublishedFileUpdateHandle right) Parameters left PublishedFileUpdateHandle right PublishedFileUpdateHandle Returns bool operator >=(PublishedFileUpdateHandle, PublishedFileUpdateHandle) Value-based comparison. public static bool operator >=(PublishedFileUpdateHandle left, PublishedFileUpdateHandle right) Parameters left PublishedFileUpdateHandle right PublishedFileUpdateHandle Returns bool operator !=(PublishedFileUpdateHandle, PublishedFileUpdateHandle) Value-based equality. public static bool operator !=(PublishedFileUpdateHandle left, PublishedFileUpdateHandle right) Parameters left PublishedFileUpdateHandle right PublishedFileUpdateHandle Returns bool operator <(PublishedFileUpdateHandle, PublishedFileUpdateHandle) Value-based comparison. public static bool operator <(PublishedFileUpdateHandle left, PublishedFileUpdateHandle right) Parameters left PublishedFileUpdateHandle right PublishedFileUpdateHandle Returns bool operator <=(PublishedFileUpdateHandle, PublishedFileUpdateHandle) Value-based comparison. public static bool operator <=(PublishedFileUpdateHandle left, PublishedFileUpdateHandle right) Parameters left PublishedFileUpdateHandle right PublishedFileUpdateHandle Returns bool"
  },
  "api/MarymoorStudios.Core.Steamworks.RTime32.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.RTime32.html",
    "title": "Struct RTime32",
    "summary": "Struct RTime32 Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public readonly struct RTime32 : IEquatable<RTime32>, IComparable<RTime32> Implements IEquatable<RTime32> IComparable<RTime32> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors RTime32(uint) public RTime32(uint id) Parameters id uint Properties Id The underlying value. public uint Id { get; } Property Value uint Invalid The invalid id. public static uint Invalid { get; } Property Value uint IsValid True if not Invalid. public bool IsValid { get; } Property Value bool Methods CompareTo(RTime32) Value-based comparison. public int CompareTo(RTime32 other) Parameters other RTime32 Returns int Equals(RTime32) Value-based equality. public bool Equals(RTime32 other) Parameters other RTime32 Returns bool Equals(object?) public override bool Equals(object? obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() public override string ToString() Returns string Operators operator ==(RTime32, RTime32) Value-based equality. public static bool operator ==(RTime32 left, RTime32 right) Parameters left RTime32 right RTime32 Returns bool operator >(RTime32, RTime32) Value-based comparison. public static bool operator >(RTime32 left, RTime32 right) Parameters left RTime32 right RTime32 Returns bool operator >=(RTime32, RTime32) Value-based comparison. public static bool operator >=(RTime32 left, RTime32 right) Parameters left RTime32 right RTime32 Returns bool operator !=(RTime32, RTime32) Value-based equality. public static bool operator !=(RTime32 left, RTime32 right) Parameters left RTime32 right RTime32 Returns bool operator <(RTime32, RTime32) Value-based comparison. public static bool operator <(RTime32 left, RTime32 right) Parameters left RTime32 right RTime32 Returns bool operator <=(RTime32, RTime32) Value-based comparison. public static bool operator <=(RTime32 left, RTime32 right) Parameters left RTime32 right RTime32 Returns bool"
  },
  "api/MarymoorStudios.Core.Steamworks.RemotePlayCursorID.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.RemotePlayCursorID.html",
    "title": "Struct RemotePlayCursorID",
    "summary": "Struct RemotePlayCursorID Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public readonly struct RemotePlayCursorID : IEquatable<RemotePlayCursorID>, IComparable<RemotePlayCursorID> Implements IEquatable<RemotePlayCursorID> IComparable<RemotePlayCursorID> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors RemotePlayCursorID(uint) public RemotePlayCursorID(uint id) Parameters id uint Properties Id The underlying value. public uint Id { get; } Property Value uint Invalid The invalid id. public static uint Invalid { get; } Property Value uint IsValid True if not Invalid. public bool IsValid { get; } Property Value bool Methods CompareTo(RemotePlayCursorID) Value-based comparison. public int CompareTo(RemotePlayCursorID other) Parameters other RemotePlayCursorID Returns int Equals(RemotePlayCursorID) Value-based equality. public bool Equals(RemotePlayCursorID other) Parameters other RemotePlayCursorID Returns bool Equals(object?) public override bool Equals(object? obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() public override string ToString() Returns string Operators operator ==(RemotePlayCursorID, RemotePlayCursorID) Value-based equality. public static bool operator ==(RemotePlayCursorID left, RemotePlayCursorID right) Parameters left RemotePlayCursorID right RemotePlayCursorID Returns bool operator >(RemotePlayCursorID, RemotePlayCursorID) Value-based comparison. public static bool operator >(RemotePlayCursorID left, RemotePlayCursorID right) Parameters left RemotePlayCursorID right RemotePlayCursorID Returns bool operator >=(RemotePlayCursorID, RemotePlayCursorID) Value-based comparison. public static bool operator >=(RemotePlayCursorID left, RemotePlayCursorID right) Parameters left RemotePlayCursorID right RemotePlayCursorID Returns bool operator !=(RemotePlayCursorID, RemotePlayCursorID) Value-based equality. public static bool operator !=(RemotePlayCursorID left, RemotePlayCursorID right) Parameters left RemotePlayCursorID right RemotePlayCursorID Returns bool operator <(RemotePlayCursorID, RemotePlayCursorID) Value-based comparison. public static bool operator <(RemotePlayCursorID left, RemotePlayCursorID right) Parameters left RemotePlayCursorID right RemotePlayCursorID Returns bool operator <=(RemotePlayCursorID, RemotePlayCursorID) Value-based comparison. public static bool operator <=(RemotePlayCursorID left, RemotePlayCursorID right) Parameters left RemotePlayCursorID right RemotePlayCursorID Returns bool"
  },
  "api/MarymoorStudios.Core.Steamworks.RemotePlayInput.PaddingType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.RemotePlayInput.PaddingType.html",
    "title": "Struct RemotePlayInput.PaddingType",
    "summary": "Struct RemotePlayInput.PaddingType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct RemotePlayInput.PaddingType Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields Length public const int Length = 56 Field Value int Operators implicit operator string(PaddingType) public static implicit operator string(RemotePlayInput.PaddingType v) Parameters v RemotePlayInput.PaddingType Returns string implicit operator PaddingType(string) public static implicit operator RemotePlayInput.PaddingType(string s) Parameters s string Returns RemotePlayInput.PaddingType"
  },
  "api/MarymoorStudios.Core.Steamworks.RemotePlayInput.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.RemotePlayInput.html",
    "title": "Struct RemotePlayInput",
    "summary": "Struct RemotePlayInput Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct RemotePlayInput Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields Padding public RemotePlayInput.PaddingType Padding Field Value RemotePlayInput.PaddingType SessionID public RemotePlaySessionID SessionID Field Value RemotePlaySessionID Type public ERemotePlayInputType Type Field Value ERemotePlayInputType"
  },
  "api/MarymoorStudios.Core.Steamworks.RemotePlayInputKey.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.RemotePlayInputKey.html",
    "title": "Struct RemotePlayInputKey",
    "summary": "Struct RemotePlayInputKey Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct RemotePlayInputKey Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields Keycode public uint Keycode Field Value uint Modifiers public uint Modifiers Field Value uint Scancode public int Scancode Field Value int"
  },
  "api/MarymoorStudios.Core.Steamworks.RemotePlayInputMouseMotion.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.RemotePlayInputMouseMotion.html",
    "title": "Struct RemotePlayInputMouseMotion",
    "summary": "Struct RemotePlayInputMouseMotion Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct RemotePlayInputMouseMotion Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields DeltaX public int DeltaX Field Value int DeltaY public int DeltaY Field Value int NormalizedX public float NormalizedX Field Value float NormalizedY public float NormalizedY Field Value float Properties Absolute public bool Absolute { get; set; } Property Value bool"
  },
  "api/MarymoorStudios.Core.Steamworks.RemotePlayInputMouseWheel.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.RemotePlayInputMouseWheel.html",
    "title": "Struct RemotePlayInputMouseWheel",
    "summary": "Struct RemotePlayInputMouseWheel Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct RemotePlayInputMouseWheel Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields Amount public float Amount Field Value float Direction public ERemotePlayMouseWheelDirection Direction Field Value ERemotePlayMouseWheelDirection"
  },
  "api/MarymoorStudios.Core.Steamworks.RemotePlaySessionID.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.RemotePlaySessionID.html",
    "title": "Struct RemotePlaySessionID",
    "summary": "Struct RemotePlaySessionID Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public readonly struct RemotePlaySessionID : IEquatable<RemotePlaySessionID>, IComparable<RemotePlaySessionID> Implements IEquatable<RemotePlaySessionID> IComparable<RemotePlaySessionID> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors RemotePlaySessionID(uint) public RemotePlaySessionID(uint id) Parameters id uint Properties Id The underlying value. public uint Id { get; } Property Value uint Invalid The invalid id. public static uint Invalid { get; } Property Value uint IsValid True if not Invalid. public bool IsValid { get; } Property Value bool Methods CompareTo(RemotePlaySessionID) Value-based comparison. public int CompareTo(RemotePlaySessionID other) Parameters other RemotePlaySessionID Returns int Equals(RemotePlaySessionID) Value-based equality. public bool Equals(RemotePlaySessionID other) Parameters other RemotePlaySessionID Returns bool Equals(object?) public override bool Equals(object? obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() public override string ToString() Returns string Operators operator ==(RemotePlaySessionID, RemotePlaySessionID) Value-based equality. public static bool operator ==(RemotePlaySessionID left, RemotePlaySessionID right) Parameters left RemotePlaySessionID right RemotePlaySessionID Returns bool operator >(RemotePlaySessionID, RemotePlaySessionID) Value-based comparison. public static bool operator >(RemotePlaySessionID left, RemotePlaySessionID right) Parameters left RemotePlaySessionID right RemotePlaySessionID Returns bool operator >=(RemotePlaySessionID, RemotePlaySessionID) Value-based comparison. public static bool operator >=(RemotePlaySessionID left, RemotePlaySessionID right) Parameters left RemotePlaySessionID right RemotePlaySessionID Returns bool operator !=(RemotePlaySessionID, RemotePlaySessionID) Value-based equality. public static bool operator !=(RemotePlaySessionID left, RemotePlaySessionID right) Parameters left RemotePlaySessionID right RemotePlaySessionID Returns bool operator <(RemotePlaySessionID, RemotePlaySessionID) Value-based comparison. public static bool operator <(RemotePlaySessionID left, RemotePlaySessionID right) Parameters left RemotePlaySessionID right RemotePlaySessionID Returns bool operator <=(RemotePlaySessionID, RemotePlaySessionID) Value-based comparison. public static bool operator <=(RemotePlaySessionID left, RemotePlaySessionID right) Parameters left RemotePlaySessionID right RemotePlaySessionID Returns bool"
  },
  "api/MarymoorStudios.Core.Steamworks.RemoteStorageDeletePublishedFileResult.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.RemoteStorageDeletePublishedFileResult.html",
    "title": "Struct RemoteStorageDeletePublishedFileResult",
    "summary": "Struct RemoteStorageDeletePublishedFileResult Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct RemoteStorageDeletePublishedFileResult : ICallResult Implements ICallResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 1311 Field Value int PublishedFileId public PublishedFileId PublishedFileId Field Value PublishedFileId Result public EResult Result Field Value EResult"
  },
  "api/MarymoorStudios.Core.Steamworks.RemoteStorageDownloadUGCResult.FileNameType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.RemoteStorageDownloadUGCResult.FileNameType.html",
    "title": "Struct RemoteStorageDownloadUGCResult.FileNameType",
    "summary": "Struct RemoteStorageDownloadUGCResult.FileNameType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct RemoteStorageDownloadUGCResult.FileNameType Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields Length public const int Length = 260 Field Value int Operators implicit operator string(FileNameType) public static implicit operator string(RemoteStorageDownloadUGCResult.FileNameType v) Parameters v RemoteStorageDownloadUGCResult.FileNameType Returns string implicit operator FileNameType(string) public static implicit operator RemoteStorageDownloadUGCResult.FileNameType(string s) Parameters s string Returns RemoteStorageDownloadUGCResult.FileNameType"
  },
  "api/MarymoorStudios.Core.Steamworks.RemoteStorageDownloadUGCResult.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.RemoteStorageDownloadUGCResult.html",
    "title": "Struct RemoteStorageDownloadUGCResult",
    "summary": "Struct RemoteStorageDownloadUGCResult Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct RemoteStorageDownloadUGCResult : ICallResult Implements ICallResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields AppId public AppId AppId Field Value AppId CallbackId public const int CallbackId = 1317 Field Value int File public UGCHandle File Field Value UGCHandle FileName public RemoteStorageDownloadUGCResult.FileNameType FileName Field Value RemoteStorageDownloadUGCResult.FileNameType Result public EResult Result Field Value EResult SizeInBytes public int SizeInBytes Field Value int SteamIDOwner public ulong SteamIDOwner Field Value ulong"
  },
  "api/MarymoorStudios.Core.Steamworks.RemoteStorageEnumeratePublishedFilesByUserActionResult.PublishedFileIdType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.RemoteStorageEnumeratePublishedFilesByUserActionResult.PublishedFileIdType.html",
    "title": "Struct RemoteStorageEnumeratePublishedFilesByUserActionResult.PublishedFileIdType",
    "summary": "Struct RemoteStorageEnumeratePublishedFilesByUserActionResult.PublishedFileIdType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct RemoteStorageEnumeratePublishedFilesByUserActionResult.PublishedFileIdType Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields Length public const int Length = 50 Field Value int"
  },
  "api/MarymoorStudios.Core.Steamworks.RemoteStorageEnumeratePublishedFilesByUserActionResult.RTimeUpdatedType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.RemoteStorageEnumeratePublishedFilesByUserActionResult.RTimeUpdatedType.html",
    "title": "Struct RemoteStorageEnumeratePublishedFilesByUserActionResult.RTimeUpdatedType",
    "summary": "Struct RemoteStorageEnumeratePublishedFilesByUserActionResult.RTimeUpdatedType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct RemoteStorageEnumeratePublishedFilesByUserActionResult.RTimeUpdatedType Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields Length public const int Length = 50 Field Value int"
  },
  "api/MarymoorStudios.Core.Steamworks.RemoteStorageEnumeratePublishedFilesByUserActionResult.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.RemoteStorageEnumeratePublishedFilesByUserActionResult.html",
    "title": "Struct RemoteStorageEnumeratePublishedFilesByUserActionResult",
    "summary": "Struct RemoteStorageEnumeratePublishedFilesByUserActionResult Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct RemoteStorageEnumeratePublishedFilesByUserActionResult : ICallResult Implements ICallResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields Action public EWorkshopFileAction Action Field Value EWorkshopFileAction CallbackId public const int CallbackId = 1328 Field Value int PublishedFileId public RemoteStorageEnumeratePublishedFilesByUserActionResult.PublishedFileIdType PublishedFileId Field Value RemoteStorageEnumeratePublishedFilesByUserActionResult.PublishedFileIdType RTimeUpdated public RemoteStorageEnumeratePublishedFilesByUserActionResult.RTimeUpdatedType RTimeUpdated Field Value RemoteStorageEnumeratePublishedFilesByUserActionResult.RTimeUpdatedType Result public EResult Result Field Value EResult ResultsReturned public int ResultsReturned Field Value int TotalResultCount public int TotalResultCount Field Value int"
  },
  "api/MarymoorStudios.Core.Steamworks.RemoteStorageEnumerateUserPublishedFilesResult.PublishedFileIdType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.RemoteStorageEnumerateUserPublishedFilesResult.PublishedFileIdType.html",
    "title": "Struct RemoteStorageEnumerateUserPublishedFilesResult.PublishedFileIdType",
    "summary": "Struct RemoteStorageEnumerateUserPublishedFilesResult.PublishedFileIdType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct RemoteStorageEnumerateUserPublishedFilesResult.PublishedFileIdType Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields Length public const int Length = 50 Field Value int"
  },
  "api/MarymoorStudios.Core.Steamworks.RemoteStorageEnumerateUserPublishedFilesResult.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.RemoteStorageEnumerateUserPublishedFilesResult.html",
    "title": "Struct RemoteStorageEnumerateUserPublishedFilesResult",
    "summary": "Struct RemoteStorageEnumerateUserPublishedFilesResult Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct RemoteStorageEnumerateUserPublishedFilesResult : ICallResult Implements ICallResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 1312 Field Value int PublishedFileId public RemoteStorageEnumerateUserPublishedFilesResult.PublishedFileIdType PublishedFileId Field Value RemoteStorageEnumerateUserPublishedFilesResult.PublishedFileIdType Result public EResult Result Field Value EResult ResultsReturned public int ResultsReturned Field Value int TotalResultCount public int TotalResultCount Field Value int"
  },
  "api/MarymoorStudios.Core.Steamworks.RemoteStorageEnumerateUserSharedWorkshopFilesResult.PublishedFileIdType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.RemoteStorageEnumerateUserSharedWorkshopFilesResult.PublishedFileIdType.html",
    "title": "Struct RemoteStorageEnumerateUserSharedWorkshopFilesResult.PublishedFileIdType",
    "summary": "Struct RemoteStorageEnumerateUserSharedWorkshopFilesResult.PublishedFileIdType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct RemoteStorageEnumerateUserSharedWorkshopFilesResult.PublishedFileIdType Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields Length public const int Length = 50 Field Value int"
  },
  "api/MarymoorStudios.Core.Steamworks.RemoteStorageEnumerateUserSharedWorkshopFilesResult.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.RemoteStorageEnumerateUserSharedWorkshopFilesResult.html",
    "title": "Struct RemoteStorageEnumerateUserSharedWorkshopFilesResult",
    "summary": "Struct RemoteStorageEnumerateUserSharedWorkshopFilesResult Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct RemoteStorageEnumerateUserSharedWorkshopFilesResult : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 1326 Field Value int PublishedFileId public RemoteStorageEnumerateUserSharedWorkshopFilesResult.PublishedFileIdType PublishedFileId Field Value RemoteStorageEnumerateUserSharedWorkshopFilesResult.PublishedFileIdType Result public EResult Result Field Value EResult ResultsReturned public int ResultsReturned Field Value int TotalResultCount public int TotalResultCount Field Value int"
  },
  "api/MarymoorStudios.Core.Steamworks.RemoteStorageEnumerateUserSubscribedFilesResult.PublishedFileIdType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.RemoteStorageEnumerateUserSubscribedFilesResult.PublishedFileIdType.html",
    "title": "Struct RemoteStorageEnumerateUserSubscribedFilesResult.PublishedFileIdType",
    "summary": "Struct RemoteStorageEnumerateUserSubscribedFilesResult.PublishedFileIdType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct RemoteStorageEnumerateUserSubscribedFilesResult.PublishedFileIdType Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields Length public const int Length = 50 Field Value int"
  },
  "api/MarymoorStudios.Core.Steamworks.RemoteStorageEnumerateUserSubscribedFilesResult.RTimeSubscribedType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.RemoteStorageEnumerateUserSubscribedFilesResult.RTimeSubscribedType.html",
    "title": "Struct RemoteStorageEnumerateUserSubscribedFilesResult.RTimeSubscribedType",
    "summary": "Struct RemoteStorageEnumerateUserSubscribedFilesResult.RTimeSubscribedType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct RemoteStorageEnumerateUserSubscribedFilesResult.RTimeSubscribedType Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields Length public const int Length = 50 Field Value int"
  },
  "api/MarymoorStudios.Core.Steamworks.RemoteStorageEnumerateUserSubscribedFilesResult.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.RemoteStorageEnumerateUserSubscribedFilesResult.html",
    "title": "Struct RemoteStorageEnumerateUserSubscribedFilesResult",
    "summary": "Struct RemoteStorageEnumerateUserSubscribedFilesResult Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct RemoteStorageEnumerateUserSubscribedFilesResult : ICallResult Implements ICallResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 1314 Field Value int PublishedFileId public RemoteStorageEnumerateUserSubscribedFilesResult.PublishedFileIdType PublishedFileId Field Value RemoteStorageEnumerateUserSubscribedFilesResult.PublishedFileIdType RTimeSubscribed public RemoteStorageEnumerateUserSubscribedFilesResult.RTimeSubscribedType RTimeSubscribed Field Value RemoteStorageEnumerateUserSubscribedFilesResult.RTimeSubscribedType Result public EResult Result Field Value EResult ResultsReturned public int ResultsReturned Field Value int TotalResultCount public int TotalResultCount Field Value int"
  },
  "api/MarymoorStudios.Core.Steamworks.RemoteStorageEnumerateWorkshopFilesResult.PublishedFileIdType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.RemoteStorageEnumerateWorkshopFilesResult.PublishedFileIdType.html",
    "title": "Struct RemoteStorageEnumerateWorkshopFilesResult.PublishedFileIdType",
    "summary": "Struct RemoteStorageEnumerateWorkshopFilesResult.PublishedFileIdType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct RemoteStorageEnumerateWorkshopFilesResult.PublishedFileIdType Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields Length public const int Length = 50 Field Value int"
  },
  "api/MarymoorStudios.Core.Steamworks.RemoteStorageEnumerateWorkshopFilesResult.ScoreType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.RemoteStorageEnumerateWorkshopFilesResult.ScoreType.html",
    "title": "Struct RemoteStorageEnumerateWorkshopFilesResult.ScoreType",
    "summary": "Struct RemoteStorageEnumerateWorkshopFilesResult.ScoreType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct RemoteStorageEnumerateWorkshopFilesResult.ScoreType Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields Length public const int Length = 50 Field Value int"
  },
  "api/MarymoorStudios.Core.Steamworks.RemoteStorageEnumerateWorkshopFilesResult.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.RemoteStorageEnumerateWorkshopFilesResult.html",
    "title": "Struct RemoteStorageEnumerateWorkshopFilesResult",
    "summary": "Struct RemoteStorageEnumerateWorkshopFilesResult Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct RemoteStorageEnumerateWorkshopFilesResult : ICallResult Implements ICallResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields AppId public AppId AppId Field Value AppId CallbackId public const int CallbackId = 1319 Field Value int PublishedFileId public RemoteStorageEnumerateWorkshopFilesResult.PublishedFileIdType PublishedFileId Field Value RemoteStorageEnumerateWorkshopFilesResult.PublishedFileIdType Result public EResult Result Field Value EResult ResultsReturned public int ResultsReturned Field Value int Score public RemoteStorageEnumerateWorkshopFilesResult.ScoreType Score Field Value RemoteStorageEnumerateWorkshopFilesResult.ScoreType StartIndex public uint StartIndex Field Value uint TotalResultCount public int TotalResultCount Field Value int"
  },
  "api/MarymoorStudios.Core.Steamworks.RemoteStorageFileReadAsyncComplete.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.RemoteStorageFileReadAsyncComplete.html",
    "title": "Struct RemoteStorageFileReadAsyncComplete",
    "summary": "Struct RemoteStorageFileReadAsyncComplete Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct RemoteStorageFileReadAsyncComplete : ICallResult Implements ICallResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 1332 Field Value int FileReadAsync public SteamAPICall FileReadAsync Field Value SteamAPICall Offset public uint Offset Field Value uint ReadCount public uint ReadCount Field Value uint Result public EResult Result Field Value EResult"
  },
  "api/MarymoorStudios.Core.Steamworks.RemoteStorageFileShareResult.FilenameType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.RemoteStorageFileShareResult.FilenameType.html",
    "title": "Struct RemoteStorageFileShareResult.FilenameType",
    "summary": "Struct RemoteStorageFileShareResult.FilenameType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct RemoteStorageFileShareResult.FilenameType Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields Length public const int Length = 260 Field Value int Operators implicit operator string(FilenameType) public static implicit operator string(RemoteStorageFileShareResult.FilenameType v) Parameters v RemoteStorageFileShareResult.FilenameType Returns string implicit operator FilenameType(string) public static implicit operator RemoteStorageFileShareResult.FilenameType(string s) Parameters s string Returns RemoteStorageFileShareResult.FilenameType"
  },
  "api/MarymoorStudios.Core.Steamworks.RemoteStorageFileShareResult.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.RemoteStorageFileShareResult.html",
    "title": "Struct RemoteStorageFileShareResult",
    "summary": "Struct RemoteStorageFileShareResult Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct RemoteStorageFileShareResult : ICallResult Implements ICallResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 1307 Field Value int File public UGCHandle File Field Value UGCHandle Filename public RemoteStorageFileShareResult.FilenameType Filename Field Value RemoteStorageFileShareResult.FilenameType Result public EResult Result Field Value EResult"
  },
  "api/MarymoorStudios.Core.Steamworks.RemoteStorageFileWriteAsyncComplete.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.RemoteStorageFileWriteAsyncComplete.html",
    "title": "Struct RemoteStorageFileWriteAsyncComplete",
    "summary": "Struct RemoteStorageFileWriteAsyncComplete Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct RemoteStorageFileWriteAsyncComplete : ICallResult Implements ICallResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 1331 Field Value int Result public EResult Result Field Value EResult"
  },
  "api/MarymoorStudios.Core.Steamworks.RemoteStorageGetPublishedFileDetailsResult.DescriptionType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.RemoteStorageGetPublishedFileDetailsResult.DescriptionType.html",
    "title": "Struct RemoteStorageGetPublishedFileDetailsResult.DescriptionType",
    "summary": "Struct RemoteStorageGetPublishedFileDetailsResult.DescriptionType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct RemoteStorageGetPublishedFileDetailsResult.DescriptionType Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields Length public const int Length = 8000 Field Value int Operators implicit operator string(DescriptionType) public static implicit operator string(RemoteStorageGetPublishedFileDetailsResult.DescriptionType v) Parameters v RemoteStorageGetPublishedFileDetailsResult.DescriptionType Returns string implicit operator DescriptionType(string) public static implicit operator RemoteStorageGetPublishedFileDetailsResult.DescriptionType(string s) Parameters s string Returns RemoteStorageGetPublishedFileDetailsResult.DescriptionType"
  },
  "api/MarymoorStudios.Core.Steamworks.RemoteStorageGetPublishedFileDetailsResult.FileNameType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.RemoteStorageGetPublishedFileDetailsResult.FileNameType.html",
    "title": "Struct RemoteStorageGetPublishedFileDetailsResult.FileNameType",
    "summary": "Struct RemoteStorageGetPublishedFileDetailsResult.FileNameType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct RemoteStorageGetPublishedFileDetailsResult.FileNameType Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields Length public const int Length = 260 Field Value int Operators implicit operator string(FileNameType) public static implicit operator string(RemoteStorageGetPublishedFileDetailsResult.FileNameType v) Parameters v RemoteStorageGetPublishedFileDetailsResult.FileNameType Returns string implicit operator FileNameType(string) public static implicit operator RemoteStorageGetPublishedFileDetailsResult.FileNameType(string s) Parameters s string Returns RemoteStorageGetPublishedFileDetailsResult.FileNameType"
  },
  "api/MarymoorStudios.Core.Steamworks.RemoteStorageGetPublishedFileDetailsResult.TagsType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.RemoteStorageGetPublishedFileDetailsResult.TagsType.html",
    "title": "Struct RemoteStorageGetPublishedFileDetailsResult.TagsType",
    "summary": "Struct RemoteStorageGetPublishedFileDetailsResult.TagsType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct RemoteStorageGetPublishedFileDetailsResult.TagsType Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields Length public const int Length = 1025 Field Value int Operators implicit operator string(TagsType) public static implicit operator string(RemoteStorageGetPublishedFileDetailsResult.TagsType v) Parameters v RemoteStorageGetPublishedFileDetailsResult.TagsType Returns string implicit operator TagsType(string) public static implicit operator RemoteStorageGetPublishedFileDetailsResult.TagsType(string s) Parameters s string Returns RemoteStorageGetPublishedFileDetailsResult.TagsType"
  },
  "api/MarymoorStudios.Core.Steamworks.RemoteStorageGetPublishedFileDetailsResult.TitleType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.RemoteStorageGetPublishedFileDetailsResult.TitleType.html",
    "title": "Struct RemoteStorageGetPublishedFileDetailsResult.TitleType",
    "summary": "Struct RemoteStorageGetPublishedFileDetailsResult.TitleType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct RemoteStorageGetPublishedFileDetailsResult.TitleType Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields Length public const int Length = 129 Field Value int Operators implicit operator string(TitleType) public static implicit operator string(RemoteStorageGetPublishedFileDetailsResult.TitleType v) Parameters v RemoteStorageGetPublishedFileDetailsResult.TitleType Returns string implicit operator TitleType(string) public static implicit operator RemoteStorageGetPublishedFileDetailsResult.TitleType(string s) Parameters s string Returns RemoteStorageGetPublishedFileDetailsResult.TitleType"
  },
  "api/MarymoorStudios.Core.Steamworks.RemoteStorageGetPublishedFileDetailsResult.URLType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.RemoteStorageGetPublishedFileDetailsResult.URLType.html",
    "title": "Struct RemoteStorageGetPublishedFileDetailsResult.URLType",
    "summary": "Struct RemoteStorageGetPublishedFileDetailsResult.URLType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct RemoteStorageGetPublishedFileDetailsResult.URLType Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields Length public const int Length = 256 Field Value int Operators implicit operator string(URLType) public static implicit operator string(RemoteStorageGetPublishedFileDetailsResult.URLType v) Parameters v RemoteStorageGetPublishedFileDetailsResult.URLType Returns string implicit operator URLType(string) public static implicit operator RemoteStorageGetPublishedFileDetailsResult.URLType(string s) Parameters s string Returns RemoteStorageGetPublishedFileDetailsResult.URLType"
  },
  "api/MarymoorStudios.Core.Steamworks.RemoteStorageGetPublishedFileDetailsResult.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.RemoteStorageGetPublishedFileDetailsResult.html",
    "title": "Struct RemoteStorageGetPublishedFileDetailsResult",
    "summary": "Struct RemoteStorageGetPublishedFileDetailsResult Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct RemoteStorageGetPublishedFileDetailsResult : ICallResult Implements ICallResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 1318 Field Value int ConsumerAppID public AppId ConsumerAppID Field Value AppId CreatorAppID public AppId CreatorAppID Field Value AppId Description public RemoteStorageGetPublishedFileDetailsResult.DescriptionType Description Field Value RemoteStorageGetPublishedFileDetailsResult.DescriptionType File public UGCHandle File Field Value UGCHandle FileName public RemoteStorageGetPublishedFileDetailsResult.FileNameType FileName Field Value RemoteStorageGetPublishedFileDetailsResult.FileNameType FileSize public int FileSize Field Value int FileType public EWorkshopFileType FileType Field Value EWorkshopFileType PreviewFile public UGCHandle PreviewFile Field Value UGCHandle PreviewFileSize public int PreviewFileSize Field Value int PublishedFileId public PublishedFileId PublishedFileId Field Value PublishedFileId Result public EResult Result Field Value EResult SteamIDOwner public ulong SteamIDOwner Field Value ulong Tags public RemoteStorageGetPublishedFileDetailsResult.TagsType Tags Field Value RemoteStorageGetPublishedFileDetailsResult.TagsType TimeCreated public uint TimeCreated Field Value uint TimeUpdated public uint TimeUpdated Field Value uint Title public RemoteStorageGetPublishedFileDetailsResult.TitleType Title Field Value RemoteStorageGetPublishedFileDetailsResult.TitleType URL public RemoteStorageGetPublishedFileDetailsResult.URLType URL Field Value RemoteStorageGetPublishedFileDetailsResult.URLType Visibility public ERemoteStoragePublishedFileVisibility Visibility Field Value ERemoteStoragePublishedFileVisibility Properties AcceptedForUse public bool AcceptedForUse { get; set; } Property Value bool Banned public bool Banned { get; set; } Property Value bool TagsTruncated public bool TagsTruncated { get; set; } Property Value bool"
  },
  "api/MarymoorStudios.Core.Steamworks.RemoteStorageGetPublishedItemVoteDetailsResult.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.RemoteStorageGetPublishedItemVoteDetailsResult.html",
    "title": "Struct RemoteStorageGetPublishedItemVoteDetailsResult",
    "summary": "Struct RemoteStorageGetPublishedItemVoteDetailsResult Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct RemoteStorageGetPublishedItemVoteDetailsResult : ICallResult Implements ICallResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 1320 Field Value int PublishedFileId public PublishedFileId PublishedFileId Field Value PublishedFileId Reports public int Reports Field Value int Result public EResult Result Field Value EResult Score public float Score Field Value float VotesAgainst public int VotesAgainst Field Value int VotesFor public int VotesFor Field Value int"
  },
  "api/MarymoorStudios.Core.Steamworks.RemoteStorageLocalFileChange.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.RemoteStorageLocalFileChange.html",
    "title": "Struct RemoteStorageLocalFileChange",
    "summary": "Struct RemoteStorageLocalFileChange Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct RemoteStorageLocalFileChange : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 1333 Field Value int"
  },
  "api/MarymoorStudios.Core.Steamworks.RemoteStoragePublishFileProgress.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.RemoteStoragePublishFileProgress.html",
    "title": "Struct RemoteStoragePublishFileProgress",
    "summary": "Struct RemoteStoragePublishFileProgress Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct RemoteStoragePublishFileProgress : ICallResult Implements ICallResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 1329 Field Value int PercentFile public double PercentFile Field Value double Properties Preview public bool Preview { get; set; } Property Value bool"
  },
  "api/MarymoorStudios.Core.Steamworks.RemoteStoragePublishFileResult.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.RemoteStoragePublishFileResult.html",
    "title": "Struct RemoteStoragePublishFileResult",
    "summary": "Struct RemoteStoragePublishFileResult Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct RemoteStoragePublishFileResult : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 1309 Field Value int PublishedFileId public PublishedFileId PublishedFileId Field Value PublishedFileId Result public EResult Result Field Value EResult Properties UserNeedsToAcceptWorkshopLegalAgreement public bool UserNeedsToAcceptWorkshopLegalAgreement { get; set; } Property Value bool"
  },
  "api/MarymoorStudios.Core.Steamworks.RemoteStoragePublishedFileDeleted.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.RemoteStoragePublishedFileDeleted.html",
    "title": "Struct RemoteStoragePublishedFileDeleted",
    "summary": "Struct RemoteStoragePublishedFileDeleted Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct RemoteStoragePublishedFileDeleted : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields AppId public AppId AppId Field Value AppId CallbackId public const int CallbackId = 1323 Field Value int PublishedFileId public PublishedFileId PublishedFileId Field Value PublishedFileId"
  },
  "api/MarymoorStudios.Core.Steamworks.RemoteStoragePublishedFileSubscribed.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.RemoteStoragePublishedFileSubscribed.html",
    "title": "Struct RemoteStoragePublishedFileSubscribed",
    "summary": "Struct RemoteStoragePublishedFileSubscribed Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct RemoteStoragePublishedFileSubscribed : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields AppId public AppId AppId Field Value AppId CallbackId public const int CallbackId = 1321 Field Value int PublishedFileId public PublishedFileId PublishedFileId Field Value PublishedFileId"
  },
  "api/MarymoorStudios.Core.Steamworks.RemoteStoragePublishedFileUnsubscribed.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.RemoteStoragePublishedFileUnsubscribed.html",
    "title": "Struct RemoteStoragePublishedFileUnsubscribed",
    "summary": "Struct RemoteStoragePublishedFileUnsubscribed Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct RemoteStoragePublishedFileUnsubscribed : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields AppId public AppId AppId Field Value AppId CallbackId public const int CallbackId = 1322 Field Value int PublishedFileId public PublishedFileId PublishedFileId Field Value PublishedFileId"
  },
  "api/MarymoorStudios.Core.Steamworks.RemoteStoragePublishedFileUpdated.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.RemoteStoragePublishedFileUpdated.html",
    "title": "Struct RemoteStoragePublishedFileUpdated",
    "summary": "Struct RemoteStoragePublishedFileUpdated Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct RemoteStoragePublishedFileUpdated : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields AppId public AppId AppId Field Value AppId CallbackId public const int CallbackId = 1330 Field Value int PublishedFileId public PublishedFileId PublishedFileId Field Value PublishedFileId Unused public ulong Unused Field Value ulong"
  },
  "api/MarymoorStudios.Core.Steamworks.RemoteStorageSetUserPublishedFileActionResult.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.RemoteStorageSetUserPublishedFileActionResult.html",
    "title": "Struct RemoteStorageSetUserPublishedFileActionResult",
    "summary": "Struct RemoteStorageSetUserPublishedFileActionResult Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct RemoteStorageSetUserPublishedFileActionResult : ICallResult Implements ICallResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields Action public EWorkshopFileAction Action Field Value EWorkshopFileAction CallbackId public const int CallbackId = 1327 Field Value int PublishedFileId public PublishedFileId PublishedFileId Field Value PublishedFileId Result public EResult Result Field Value EResult"
  },
  "api/MarymoorStudios.Core.Steamworks.RemoteStorageSubscribePublishedFileResult.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.RemoteStorageSubscribePublishedFileResult.html",
    "title": "Struct RemoteStorageSubscribePublishedFileResult",
    "summary": "Struct RemoteStorageSubscribePublishedFileResult Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct RemoteStorageSubscribePublishedFileResult : ICallResult Implements ICallResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 1313 Field Value int PublishedFileId public PublishedFileId PublishedFileId Field Value PublishedFileId Result public EResult Result Field Value EResult"
  },
  "api/MarymoorStudios.Core.Steamworks.RemoteStorageUnsubscribePublishedFileResult.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.RemoteStorageUnsubscribePublishedFileResult.html",
    "title": "Struct RemoteStorageUnsubscribePublishedFileResult",
    "summary": "Struct RemoteStorageUnsubscribePublishedFileResult Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct RemoteStorageUnsubscribePublishedFileResult : ICallResult Implements ICallResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 1315 Field Value int PublishedFileId public PublishedFileId PublishedFileId Field Value PublishedFileId Result public EResult Result Field Value EResult"
  },
  "api/MarymoorStudios.Core.Steamworks.RemoteStorageUpdatePublishedFileResult.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.RemoteStorageUpdatePublishedFileResult.html",
    "title": "Struct RemoteStorageUpdatePublishedFileResult",
    "summary": "Struct RemoteStorageUpdatePublishedFileResult Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct RemoteStorageUpdatePublishedFileResult : ICallResult Implements ICallResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 1316 Field Value int PublishedFileId public PublishedFileId PublishedFileId Field Value PublishedFileId Result public EResult Result Field Value EResult Properties UserNeedsToAcceptWorkshopLegalAgreement public bool UserNeedsToAcceptWorkshopLegalAgreement { get; set; } Property Value bool"
  },
  "api/MarymoorStudios.Core.Steamworks.RemoteStorageUpdateUserPublishedItemVoteResult.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.RemoteStorageUpdateUserPublishedItemVoteResult.html",
    "title": "Struct RemoteStorageUpdateUserPublishedItemVoteResult",
    "summary": "Struct RemoteStorageUpdateUserPublishedItemVoteResult Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct RemoteStorageUpdateUserPublishedItemVoteResult : ICallResult Implements ICallResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 1324 Field Value int PublishedFileId public PublishedFileId PublishedFileId Field Value PublishedFileId Result public EResult Result Field Value EResult"
  },
  "api/MarymoorStudios.Core.Steamworks.RemoteStorageUserVoteDetails.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.RemoteStorageUserVoteDetails.html",
    "title": "Struct RemoteStorageUserVoteDetails",
    "summary": "Struct RemoteStorageUserVoteDetails Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct RemoteStorageUserVoteDetails : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 1325 Field Value int PublishedFileId public PublishedFileId PublishedFileId Field Value PublishedFileId Result public EResult Result Field Value EResult Vote public EWorkshopVote Vote Field Value EWorkshopVote"
  },
  "api/MarymoorStudios.Core.Steamworks.RemoveAppDependencyResult.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.RemoveAppDependencyResult.html",
    "title": "Struct RemoveAppDependencyResult",
    "summary": "Struct RemoveAppDependencyResult Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct RemoveAppDependencyResult : ICallResult Implements ICallResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields AppId public AppId AppId Field Value AppId CallbackId public const int CallbackId = 3415 Field Value int PublishedFileId public PublishedFileId PublishedFileId Field Value PublishedFileId Result public EResult Result Field Value EResult"
  },
  "api/MarymoorStudios.Core.Steamworks.RemoveUGCDependencyResult.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.RemoveUGCDependencyResult.html",
    "title": "Struct RemoveUGCDependencyResult",
    "summary": "Struct RemoveUGCDependencyResult Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct RemoveUGCDependencyResult : ICallResult Implements ICallResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 3413 Field Value int ChildPublishedFileId public PublishedFileId ChildPublishedFileId Field Value PublishedFileId PublishedFileId public PublishedFileId PublishedFileId Field Value PublishedFileId Result public EResult Result Field Value EResult"
  },
  "api/MarymoorStudios.Core.Steamworks.RequestPlayersForGameFinalResultCallback.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.RequestPlayersForGameFinalResultCallback.html",
    "title": "Struct RequestPlayersForGameFinalResultCallback",
    "summary": "Struct RequestPlayersForGameFinalResultCallback Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct RequestPlayersForGameFinalResultCallback : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 5213 Field Value int Result public EResult Result Field Value EResult SearchID public ulong SearchID Field Value ulong UniqueGameID public ulong UniqueGameID Field Value ulong"
  },
  "api/MarymoorStudios.Core.Steamworks.RequestPlayersForGameProgressCallback.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.RequestPlayersForGameProgressCallback.html",
    "title": "Struct RequestPlayersForGameProgressCallback",
    "summary": "Struct RequestPlayersForGameProgressCallback Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct RequestPlayersForGameProgressCallback : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 5211 Field Value int Result public EResult Result Field Value EResult SearchID public ulong SearchID Field Value ulong"
  },
  "api/MarymoorStudios.Core.Steamworks.RequestPlayersForGameResultCallback.PlayerAcceptState.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.RequestPlayersForGameResultCallback.PlayerAcceptState.html",
    "title": "Enum RequestPlayersForGameResultCallback.PlayerAcceptState",
    "summary": "Enum RequestPlayersForGameResultCallback.PlayerAcceptState Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum RequestPlayersForGameResultCallback.PlayerAcceptState Fields Unknown = 0 PlayerAccepted = 1 PlayerDeclined = 2"
  },
  "api/MarymoorStudios.Core.Steamworks.RequestPlayersForGameResultCallback.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.RequestPlayersForGameResultCallback.html",
    "title": "Struct RequestPlayersForGameResultCallback",
    "summary": "Struct RequestPlayersForGameResultCallback Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct RequestPlayersForGameResultCallback : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 5212 Field Value int PlayerAccept public RequestPlayersForGameResultCallback.PlayerAcceptState PlayerAccept Field Value RequestPlayersForGameResultCallback.PlayerAcceptState PlayerIndex public int PlayerIndex Field Value int Result public EResult Result Field Value EResult SearchID public ulong SearchID Field Value ulong SteamIDLobby public CSteamID SteamIDLobby Field Value CSteamID SteamIDPlayerFound public CSteamID SteamIDPlayerFound Field Value CSteamID SuggestedTeamIndex public int SuggestedTeamIndex Field Value int TotalPlayersAcceptedGame public int TotalPlayersAcceptedGame Field Value int TotalPlayersFound public int TotalPlayersFound Field Value int UniqueGameID public ulong UniqueGameID Field Value ulong"
  },
  "api/MarymoorStudios.Core.Steamworks.ReservationNotificationCallback.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ReservationNotificationCallback.html",
    "title": "Struct ReservationNotificationCallback",
    "summary": "Struct ReservationNotificationCallback Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct ReservationNotificationCallback : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields BeaconID public PartyBeaconID BeaconID Field Value PartyBeaconID CallbackId public const int CallbackId = 5303 Field Value int SteamIDJoiner public CSteamID SteamIDJoiner Field Value CSteamID"
  },
  "api/MarymoorStudios.Core.Steamworks.Rpc.SteamFactory-1.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.Rpc.SteamFactory-1.html",
    "title": "Class SteamFactory<TRoot>",
    "summary": "Class SteamFactory<TRoot> Namespace MarymoorStudios.Core.Steamworks.Rpc Assembly MarymoorStudios.Core.Steamworks.Rpc.dll Establishes a scope for incoming and outgoing Steam Networking Sockets based channels. public sealed class SteamFactory<TRoot> : IPromiseDisposable where TRoot : AServer<TRoot> Type Parameters TRoot The type of the root object exposed on all connection (incoming and outgoing) within the scope of this factory. Inheritance object SteamFactory<TRoot> Implements IPromiseDisposable Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Remarks Enables the creation of incoming listeners for receiving network connections from remote parties using Steam Networking Sockets. Enables the establishment of outgoing connections to remote parties using Steam Networking Sockets. A SteamFactory<TRoot> instance represents a set of such incoming and outgoing connections that can be torn down collectively (by disposing the factory instance). Methods Connect<TProxy, TServer>(CSteamID, int, CancellationToken) Create a new outgoing connection within this Steam scope. public TProxy Connect<TProxy, TServer>(CSteamID peer, int localVirtualPort = 0, CancellationToken cancel = default) where TProxy : Proxy<TServer>, IProxy<TProxy, TServer> where TServer : AServer<TServer> Parameters peer CSteamID The steam id of the peer to connect to. localVirtualPort int The 0-based index of the virtual port to use. cancel CancellationToken A (optional) cancellation that can be used to terminate this connection independently of the rest of the Steam scope. Returns TProxy The remote root Type Parameters TProxy The type of the expected remote root. TServer The server type of TProxy. Connect<TProxy, TServer>(IPEndPoint, CancellationToken) Create a new outgoing connection within this Steam scope. public TProxy Connect<TProxy, TServer>(IPEndPoint endpoint, CancellationToken cancel = default) where TProxy : Proxy<TServer>, IProxy<TProxy, TServer> where TServer : AServer<TServer> Parameters endpoint IPEndPoint The remote endpoint to connect to. cancel CancellationToken A (optional) cancellation that can be used to terminate this connection independently of the rest of the Steam scope. Returns TProxy The remote root Type Parameters TProxy The type of the expected remote root. TServer The server type of TProxy. DisposeAsync() public Promise DisposeAsync() Returns Promise Listen(IPEndPoint) Create a new incoming listening endpoint for this Steam scope. public Promise<SteamListener> Listen(IPEndPoint endpoint) Parameters endpoint IPEndPoint The endpoint on which to listen. Returns Promise<SteamListener> Resolves to a SteamListener for controlling the lifetime of the listening endpoint. ListenFakeIp(int) Create a new incoming listening endpoint for this Steam scope. public Promise<SteamListener> ListenFakeIp(int indexFakePort = 0) Parameters indexFakePort int The 0-based index of the FakeIP to use. Returns Promise<SteamListener> Resolves to a SteamListener for controlling the lifetime of the listening endpoint. Remarks The FakeIP MUST have been previously allocated. ListenP2P(int) Create a new incoming listening endpoint for this Steam scope. public Promise<SteamListener> ListenP2P(int localVirtualPort = 0) Parameters localVirtualPort int The 0-based index of the virtual port to use. Returns Promise<SteamListener> Resolves to a SteamListener for controlling the lifetime of the listening endpoint."
  },
  "api/MarymoorStudios.Core.Steamworks.Rpc.SteamFactory.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.Rpc.SteamFactory.html",
    "title": "Class SteamFactory",
    "summary": "Class SteamFactory Namespace MarymoorStudios.Core.Steamworks.Rpc Assembly MarymoorStudios.Core.Steamworks.Rpc.dll Static factory methods for SteamFactory<TRoot>. public static class SteamFactory Inheritance object SteamFactory Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods Create<TRoot>(SteamFactoryConfig, MemoryPool<byte>, SteamApi, ILoggerFactory, Proxy<TRoot>, CancellationToken) Creates a new Steam scope for incoming and outgoing connections. public static Promise<SteamFactory<TRoot>> Create<TRoot>(SteamFactoryConfig config, MemoryPool<byte> pool, SteamApi api, ILoggerFactory loggerFactory, Proxy<TRoot> root, CancellationToken cancel = default) where TRoot : AServer<TRoot> Parameters config SteamFactoryConfig The configuration policy for this Steam scope. pool MemoryPool<byte> The memory pool from which to allocate memory for network operations. api SteamApi The Steam API. loggerFactory ILoggerFactory The logger factory to log to. root Proxy<TRoot> The root object to be exposed to all connections (incoming and outgoing). cancel CancellationToken Cancellation token for the creation process. Returns Promise<SteamFactory<TRoot>> Type Parameters TRoot The type of the root object exposed on all connection (incoming and outgoing) within the scope of this factory."
  },
  "api/MarymoorStudios.Core.Steamworks.Rpc.SteamFactoryConfig.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.Rpc.SteamFactoryConfig.html",
    "title": "Class SteamFactoryConfig",
    "summary": "Class SteamFactoryConfig Namespace MarymoorStudios.Core.Steamworks.Rpc Assembly MarymoorStudios.Core.Steamworks.Rpc.dll public sealed class SteamFactoryConfig Inheritance object SteamFactoryConfig Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors SteamFactoryConfig() Constructor. public SteamFactoryConfig() Fields DefaultTcpPort The default port for use with SteamListener. public const int DefaultTcpPort = 2590 Field Value int Properties CertificateManager (Optional) TLS Certificate Manager. If non-null then TLS will be used, otherwise non-TLS. public CertificateManager? CertificateManager { get; init; } Property Value CertificateManager MaxSendPacket Maximum size of send packets. public int MaxSendPacket { get; init; } Property Value int Remarks Messages larger than this are split into multiple sends. This is largely for testing purposes but may be useful in environments where the network prohibits large payloads. Splitting messages across sends lends to the need to perform reassembly on the receiving side increasing costs in memory, CPU, and kernel transitions. RingCapacity Maximum number of items in the send/receive buffer between the channel and the network. public ushort RingCapacity { get; init; } Property Value ushort Remarks The buffers are used to pipeline transitions between IO completion threads and the Sip-thread for the MarymoorStudios.Core.Rpc.CommChannel they are servicing. If this value is too small: Sending The MarymoorStudios.Core.Rpc.CommChannel will stall more often and be forced to buffer outgoing messages in its own queue leading potentially to increased GC memory usage and additional send latency. Receiving IO completion threads will stall more often and be forced to provide network backpressure impacting network transmission speeds. If this value is too large then buffer memory will be wasted for each MarymoorStudios.Core.Rpc.CommChannel. Buffer capacity is a fixed allocation with the same lifetime as the MarymoorStudios.Core.Rpc.CommChannel. Ideally this value matches the maximum number of messages in flight in either direction under normal operating conditions. When these conditions are exceeded then stalling is the best responses for the system and the network providing backpressure to slow production in either direction to avoid resource exhaustion. RingThreshold Maximum The number of item slots that must be available before send backpressure is lifted. public ushort RingThreshold { get; init; } Property Value ushort"
  },
  "api/MarymoorStudios.Core.Steamworks.Rpc.SteamListener.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.Rpc.SteamListener.html",
    "title": "Class SteamListener",
    "summary": "Class SteamListener Namespace MarymoorStudios.Core.Steamworks.Rpc Assembly MarymoorStudios.Core.Steamworks.Rpc.dll public sealed class SteamListener : IPromiseDisposable Inheritance object SteamListener Implements IPromiseDisposable Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Properties LocalEndPoint The local endpoint tuple while connected, otherwise null. public IPEndPoint? LocalEndPoint { get; } Property Value IPEndPoint Methods DisposeAsync() public Promise DisposeAsync() Returns Promise GetListenSocketAddress(out SteamNetworkingIPAddr) public bool GetListenSocketAddress(out SteamNetworkingIPAddr address) Parameters address SteamNetworkingIPAddr Returns bool"
  },
  "api/MarymoorStudios.Core.Steamworks.Rpc.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.Rpc.html",
    "title": "Namespace MarymoorStudios.Core.Steamworks.Rpc",
    "summary": "Namespace MarymoorStudios.Core.Steamworks.Rpc Classes SteamFactory Static factory methods for SteamFactory<TRoot>. SteamFactoryConfig SteamFactory<TRoot> Establishes a scope for incoming and outgoing Steam Networking Sockets based channels. SteamListener"
  },
  "api/MarymoorStudios.Core.Steamworks.SNetListenSocket.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SNetListenSocket.html",
    "title": "Struct SNetListenSocket",
    "summary": "Struct SNetListenSocket Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public readonly struct SNetListenSocket : IEquatable<SNetListenSocket>, IComparable<SNetListenSocket> Implements IEquatable<SNetListenSocket> IComparable<SNetListenSocket> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors SNetListenSocket(uint) public SNetListenSocket(uint id) Parameters id uint Properties Id The underlying value. public uint Id { get; } Property Value uint Invalid The invalid id. public static uint Invalid { get; } Property Value uint IsValid True if not Invalid. public bool IsValid { get; } Property Value bool Methods CompareTo(SNetListenSocket) Value-based comparison. public int CompareTo(SNetListenSocket other) Parameters other SNetListenSocket Returns int Equals(SNetListenSocket) Value-based equality. public bool Equals(SNetListenSocket other) Parameters other SNetListenSocket Returns bool Equals(object?) public override bool Equals(object? obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() public override string ToString() Returns string Operators operator ==(SNetListenSocket, SNetListenSocket) Value-based equality. public static bool operator ==(SNetListenSocket left, SNetListenSocket right) Parameters left SNetListenSocket right SNetListenSocket Returns bool operator >(SNetListenSocket, SNetListenSocket) Value-based comparison. public static bool operator >(SNetListenSocket left, SNetListenSocket right) Parameters left SNetListenSocket right SNetListenSocket Returns bool operator >=(SNetListenSocket, SNetListenSocket) Value-based comparison. public static bool operator >=(SNetListenSocket left, SNetListenSocket right) Parameters left SNetListenSocket right SNetListenSocket Returns bool operator !=(SNetListenSocket, SNetListenSocket) Value-based equality. public static bool operator !=(SNetListenSocket left, SNetListenSocket right) Parameters left SNetListenSocket right SNetListenSocket Returns bool operator <(SNetListenSocket, SNetListenSocket) Value-based comparison. public static bool operator <(SNetListenSocket left, SNetListenSocket right) Parameters left SNetListenSocket right SNetListenSocket Returns bool operator <=(SNetListenSocket, SNetListenSocket) Value-based comparison. public static bool operator <=(SNetListenSocket left, SNetListenSocket right) Parameters left SNetListenSocket right SNetListenSocket Returns bool"
  },
  "api/MarymoorStudios.Core.Steamworks.SNetSocket.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SNetSocket.html",
    "title": "Struct SNetSocket",
    "summary": "Struct SNetSocket Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public readonly struct SNetSocket : IEquatable<SNetSocket>, IComparable<SNetSocket> Implements IEquatable<SNetSocket> IComparable<SNetSocket> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors SNetSocket(uint) public SNetSocket(uint id) Parameters id uint Properties Id The underlying value. public uint Id { get; } Property Value uint Invalid The invalid id. public static uint Invalid { get; } Property Value uint IsValid True if not Invalid. public bool IsValid { get; } Property Value bool Methods CompareTo(SNetSocket) Value-based comparison. public int CompareTo(SNetSocket other) Parameters other SNetSocket Returns int Equals(SNetSocket) Value-based equality. public bool Equals(SNetSocket other) Parameters other SNetSocket Returns bool Equals(object?) public override bool Equals(object? obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() public override string ToString() Returns string Operators operator ==(SNetSocket, SNetSocket) Value-based equality. public static bool operator ==(SNetSocket left, SNetSocket right) Parameters left SNetSocket right SNetSocket Returns bool operator >(SNetSocket, SNetSocket) Value-based comparison. public static bool operator >(SNetSocket left, SNetSocket right) Parameters left SNetSocket right SNetSocket Returns bool operator >=(SNetSocket, SNetSocket) Value-based comparison. public static bool operator >=(SNetSocket left, SNetSocket right) Parameters left SNetSocket right SNetSocket Returns bool operator !=(SNetSocket, SNetSocket) Value-based equality. public static bool operator !=(SNetSocket left, SNetSocket right) Parameters left SNetSocket right SNetSocket Returns bool operator <(SNetSocket, SNetSocket) Value-based comparison. public static bool operator <(SNetSocket left, SNetSocket right) Parameters left SNetSocket right SNetSocket Returns bool operator <=(SNetSocket, SNetSocket) Value-based comparison. public static bool operator <=(SNetSocket left, SNetSocket right) Parameters left SNetSocket right SNetSocket Returns bool"
  },
  "api/MarymoorStudios.Core.Steamworks.ScePadTriggerEffectParam.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ScePadTriggerEffectParam.html",
    "title": "Struct ScePadTriggerEffectParam",
    "summary": "Struct ScePadTriggerEffectParam Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct ScePadTriggerEffectParam Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object)"
  },
  "api/MarymoorStudios.Core.Steamworks.ScreenshotHandle.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ScreenshotHandle.html",
    "title": "Struct ScreenshotHandle",
    "summary": "Struct ScreenshotHandle Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public readonly struct ScreenshotHandle : IEquatable<ScreenshotHandle>, IComparable<ScreenshotHandle> Implements IEquatable<ScreenshotHandle> IComparable<ScreenshotHandle> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors ScreenshotHandle(uint) public ScreenshotHandle(uint id) Parameters id uint Properties Id The underlying value. public uint Id { get; } Property Value uint Invalid The invalid id. public static uint Invalid { get; } Property Value uint IsValid True if not Invalid. public bool IsValid { get; } Property Value bool Methods CompareTo(ScreenshotHandle) Value-based comparison. public int CompareTo(ScreenshotHandle other) Parameters other ScreenshotHandle Returns int Equals(ScreenshotHandle) Value-based equality. public bool Equals(ScreenshotHandle other) Parameters other ScreenshotHandle Returns bool Equals(object?) public override bool Equals(object? obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() public override string ToString() Returns string Operators operator ==(ScreenshotHandle, ScreenshotHandle) Value-based equality. public static bool operator ==(ScreenshotHandle left, ScreenshotHandle right) Parameters left ScreenshotHandle right ScreenshotHandle Returns bool operator >(ScreenshotHandle, ScreenshotHandle) Value-based comparison. public static bool operator >(ScreenshotHandle left, ScreenshotHandle right) Parameters left ScreenshotHandle right ScreenshotHandle Returns bool operator >=(ScreenshotHandle, ScreenshotHandle) Value-based comparison. public static bool operator >=(ScreenshotHandle left, ScreenshotHandle right) Parameters left ScreenshotHandle right ScreenshotHandle Returns bool operator !=(ScreenshotHandle, ScreenshotHandle) Value-based equality. public static bool operator !=(ScreenshotHandle left, ScreenshotHandle right) Parameters left ScreenshotHandle right ScreenshotHandle Returns bool operator <(ScreenshotHandle, ScreenshotHandle) Value-based comparison. public static bool operator <(ScreenshotHandle left, ScreenshotHandle right) Parameters left ScreenshotHandle right ScreenshotHandle Returns bool operator <=(ScreenshotHandle, ScreenshotHandle) Value-based comparison. public static bool operator <=(ScreenshotHandle left, ScreenshotHandle right) Parameters left ScreenshotHandle right ScreenshotHandle Returns bool"
  },
  "api/MarymoorStudios.Core.Steamworks.ScreenshotReady.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ScreenshotReady.html",
    "title": "Struct ScreenshotReady",
    "summary": "Struct ScreenshotReady Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct ScreenshotReady : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 2301 Field Value int Local public ScreenshotHandle Local Field Value ScreenshotHandle Result public EResult Result Field Value EResult"
  },
  "api/MarymoorStudios.Core.Steamworks.ScreenshotRequested.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ScreenshotRequested.html",
    "title": "Struct ScreenshotRequested",
    "summary": "Struct ScreenshotRequested Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct ScreenshotRequested : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 2302 Field Value int"
  },
  "api/MarymoorStudios.Core.Steamworks.SearchForGameProgressCallback.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SearchForGameProgressCallback.html",
    "title": "Struct SearchForGameProgressCallback",
    "summary": "Struct SearchForGameProgressCallback Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct SearchForGameProgressCallback : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 5201 Field Value int LobbyID public CSteamID LobbyID Field Value CSteamID PlayersSearching public int PlayersSearching Field Value int Result public EResult Result Field Value EResult SearchID public ulong SearchID Field Value ulong SecondsRemainingEstimate public int SecondsRemainingEstimate Field Value int SteamIDEndedSearch public CSteamID SteamIDEndedSearch Field Value CSteamID"
  },
  "api/MarymoorStudios.Core.Steamworks.SearchForGameResultCallback.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SearchForGameResultCallback.html",
    "title": "Struct SearchForGameResultCallback",
    "summary": "Struct SearchForGameResultCallback Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct SearchForGameResultCallback : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 5202 Field Value int CountAcceptedGame public int CountAcceptedGame Field Value int CountPlayersInGame public int CountPlayersInGame Field Value int Result public EResult Result Field Value EResult SearchID public ulong SearchID Field Value ulong SteamIDHost public CSteamID SteamIDHost Field Value CSteamID Properties FinalCallback public bool FinalCallback { get; set; } Property Value bool"
  },
  "api/MarymoorStudios.Core.Steamworks.SetUserItemVoteResult.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SetUserItemVoteResult.html",
    "title": "Struct SetUserItemVoteResult",
    "summary": "Struct SetUserItemVoteResult Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct SetUserItemVoteResult : ICallResult Implements ICallResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 3408 Field Value int PublishedFileId public PublishedFileId PublishedFileId Field Value PublishedFileId Result public EResult Result Field Value EResult Properties VoteUp public bool VoteUp { get; set; } Property Value bool"
  },
  "api/MarymoorStudios.Core.Steamworks.SocketStatusCallback.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SocketStatusCallback.html",
    "title": "Struct SocketStatusCallback",
    "summary": "Struct SocketStatusCallback Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct SocketStatusCallback : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 1201 Field Value int ListenSocket public SNetListenSocket ListenSocket Field Value SNetListenSocket SNetSocketState public int SNetSocketState Field Value int Socket public SNetSocket Socket Field Value SNetSocket SteamIDRemote public CSteamID SteamIDRemote Field Value CSteamID"
  },
  "api/MarymoorStudios.Core.Steamworks.StartPlaytimeTrackingResult.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.StartPlaytimeTrackingResult.html",
    "title": "Struct StartPlaytimeTrackingResult",
    "summary": "Struct StartPlaytimeTrackingResult Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct StartPlaytimeTrackingResult : ICallResult Implements ICallResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 3410 Field Value int Result public EResult Result Field Value EResult"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamAPICall.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamAPICall.html",
    "title": "Struct SteamAPICall",
    "summary": "Struct SteamAPICall Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public readonly struct SteamAPICall : IEquatable<SteamAPICall>, IComparable<SteamAPICall> Implements IEquatable<SteamAPICall> IComparable<SteamAPICall> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors SteamAPICall(ulong) public SteamAPICall(ulong id) Parameters id ulong Properties Id The underlying value. public ulong Id { get; } Property Value ulong Invalid The invalid id. public static ulong Invalid { get; } Property Value ulong IsValid True if not Invalid. public bool IsValid { get; } Property Value bool Methods CompareTo(SteamAPICall) Value-based comparison. public int CompareTo(SteamAPICall other) Parameters other SteamAPICall Returns int Equals(SteamAPICall) Value-based equality. public bool Equals(SteamAPICall other) Parameters other SteamAPICall Returns bool Equals(object?) public override bool Equals(object? obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() public override string ToString() Returns string Operators operator ==(SteamAPICall, SteamAPICall) Value-based equality. public static bool operator ==(SteamAPICall left, SteamAPICall right) Parameters left SteamAPICall right SteamAPICall Returns bool operator >(SteamAPICall, SteamAPICall) Value-based comparison. public static bool operator >(SteamAPICall left, SteamAPICall right) Parameters left SteamAPICall right SteamAPICall Returns bool operator >=(SteamAPICall, SteamAPICall) Value-based comparison. public static bool operator >=(SteamAPICall left, SteamAPICall right) Parameters left SteamAPICall right SteamAPICall Returns bool operator !=(SteamAPICall, SteamAPICall) Value-based equality. public static bool operator !=(SteamAPICall left, SteamAPICall right) Parameters left SteamAPICall right SteamAPICall Returns bool operator <(SteamAPICall, SteamAPICall) Value-based comparison. public static bool operator <(SteamAPICall left, SteamAPICall right) Parameters left SteamAPICall right SteamAPICall Returns bool operator <=(SteamAPICall, SteamAPICall) Value-based comparison. public static bool operator <=(SteamAPICall left, SteamAPICall right) Parameters left SteamAPICall right SteamAPICall Returns bool"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamAPICallCompleted.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamAPICallCompleted.html",
    "title": "Struct SteamAPICallCompleted",
    "summary": "Struct SteamAPICallCompleted Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct SteamAPICallCompleted : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields AsyncCall public SteamAPICall AsyncCall Field Value SteamAPICall CallbackId public const int CallbackId = 703 Field Value int ExpectedCallback public int ExpectedCallback Field Value int ParamCount public uint ParamCount Field Value uint"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamApi.NativeDiagnosticsAction.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamApi.NativeDiagnosticsAction.html",
    "title": "Delegate SteamApi.NativeDiagnosticsAction",
    "summary": "Delegate SteamApi.NativeDiagnosticsAction Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public delegate void SteamApi.NativeDiagnosticsAction(int severity, byte* debugText) Parameters severity int debugText byte* Constructors NativeDiagnosticsAction(object, nint) public NativeDiagnosticsAction(object @object, nint method) Parameters object object method nint Methods BeginInvoke(int, byte*, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(int severity, byte* debugText, AsyncCallback callback, object @object) Parameters severity int debugText byte* callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(int, byte*) public virtual void Invoke(int severity, byte* debugText) Parameters severity int debugText byte*"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamApi.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamApi.html",
    "title": "Class SteamApi",
    "summary": "Class SteamApi Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll Represents a single Steam session. public sealed class SteamApi : IDisposable Inheritance object SteamApi Implements IDisposable Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Remarks A session is bound to the Sip where it is created. Create separate sessions in each Sip. Properties Client The client session. public ISteamClient Client { get; } Property Value ISteamClient IsGameServer True if the client session is a game server. public bool IsGameServer { get; } Property Value bool IsSteamRunning True if the steam client application is currently running. public bool IsSteamRunning { get; } Property Value bool Methods Create(ILoggerFactory?) public static SteamApi Create(ILoggerFactory? factory = null) Parameters factory ILoggerFactory Returns SteamApi CreateGameServer(uint, ushort, ushort, EServerMode, string, ILoggerFactory?) public static SteamApi CreateGameServer(uint ip, ushort gamePort, ushort queryPort, EServerMode serverMode, string version, ILoggerFactory? factory = null) Parameters ip uint gamePort ushort queryPort ushort serverMode EServerMode version string factory ILoggerFactory Returns SteamApi Dispose() public void Dispose()"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamDatagramGameCoordinatorServerLogin.AppDataType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamDatagramGameCoordinatorServerLogin.AppDataType.html",
    "title": "Struct SteamDatagramGameCoordinatorServerLogin.AppDataType",
    "summary": "Struct SteamDatagramGameCoordinatorServerLogin.AppDataType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct SteamDatagramGameCoordinatorServerLogin.AppDataType Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields Length public const int Length = 2048 Field Value int Operators implicit operator string(AppDataType) public static implicit operator string(SteamDatagramGameCoordinatorServerLogin.AppDataType v) Parameters v SteamDatagramGameCoordinatorServerLogin.AppDataType Returns string implicit operator AppDataType(string) public static implicit operator SteamDatagramGameCoordinatorServerLogin.AppDataType(string s) Parameters s string Returns SteamDatagramGameCoordinatorServerLogin.AppDataType"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamDatagramGameCoordinatorServerLogin.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamDatagramGameCoordinatorServerLogin.html",
    "title": "Struct SteamDatagramGameCoordinatorServerLogin",
    "summary": "Struct SteamDatagramGameCoordinatorServerLogin Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct SteamDatagramGameCoordinatorServerLogin Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields AppData public SteamDatagramGameCoordinatorServerLogin.AppDataType AppData Field Value SteamDatagramGameCoordinatorServerLogin.AppDataType AppDataCount public int AppDataCount Field Value int AppId public AppId AppId Field Value AppId Identity public SteamNetworkingIdentity Identity Field Value SteamNetworkingIdentity Routing public SteamDatagramHostedAddress Routing Field Value SteamDatagramHostedAddress Rtime public RTime32 Rtime Field Value RTime32"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamDatagramHostedAddress.DataType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamDatagramHostedAddress.DataType.html",
    "title": "Struct SteamDatagramHostedAddress.DataType",
    "summary": "Struct SteamDatagramHostedAddress.DataType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct SteamDatagramHostedAddress.DataType Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields Length public const int Length = 128 Field Value int Operators implicit operator string(DataType) public static implicit operator string(SteamDatagramHostedAddress.DataType v) Parameters v SteamDatagramHostedAddress.DataType Returns string implicit operator DataType(string) public static implicit operator SteamDatagramHostedAddress.DataType(string s) Parameters s string Returns SteamDatagramHostedAddress.DataType"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamDatagramHostedAddress.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamDatagramHostedAddress.html",
    "title": "Struct SteamDatagramHostedAddress",
    "summary": "Struct SteamDatagramHostedAddress Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct SteamDatagramHostedAddress Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields Data public SteamDatagramHostedAddress.DataType Data Field Value SteamDatagramHostedAddress.DataType Size public int Size Field Value int Methods Clear() public void Clear() GetPopID() public SteamNetworkingPOPID GetPopID() Returns SteamNetworkingPOPID SetDevAddress(uint, ushort, SteamNetworkingPOPID) public void SetDevAddress(uint ip, ushort port, SteamNetworkingPOPID popId) Parameters ip uint port ushort popId SteamNetworkingPOPID"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamDatagramRelayAuthTicket.ExtraField.EType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamDatagramRelayAuthTicket.ExtraField.EType.html",
    "title": "Enum SteamDatagramRelayAuthTicket.ExtraField.EType",
    "summary": "Enum SteamDatagramRelayAuthTicket.ExtraField.EType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public enum SteamDatagramRelayAuthTicket.ExtraField.EType Fields String = 0 Int = 1 Fixed64 = 2"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamDatagramRelayAuthTicket.ExtraField.NameType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamDatagramRelayAuthTicket.ExtraField.NameType.html",
    "title": "Struct SteamDatagramRelayAuthTicket.ExtraField.NameType",
    "summary": "Struct SteamDatagramRelayAuthTicket.ExtraField.NameType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct SteamDatagramRelayAuthTicket.ExtraField.NameType Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields Length public const int Length = 28 Field Value int Operators implicit operator string(NameType) public static implicit operator string(SteamDatagramRelayAuthTicket.ExtraField.NameType v) Parameters v SteamDatagramRelayAuthTicket.ExtraField.NameType Returns string implicit operator NameType(string) public static implicit operator SteamDatagramRelayAuthTicket.ExtraField.NameType(string s) Parameters s string Returns SteamDatagramRelayAuthTicket.ExtraField.NameType"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamDatagramRelayAuthTicket.ExtraField.StringValueType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamDatagramRelayAuthTicket.ExtraField.StringValueType.html",
    "title": "Struct SteamDatagramRelayAuthTicket.ExtraField.StringValueType",
    "summary": "Struct SteamDatagramRelayAuthTicket.ExtraField.StringValueType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct SteamDatagramRelayAuthTicket.ExtraField.StringValueType Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields Length public const int Length = 128 Field Value int Operators implicit operator string(StringValueType) public static implicit operator string(SteamDatagramRelayAuthTicket.ExtraField.StringValueType v) Parameters v SteamDatagramRelayAuthTicket.ExtraField.StringValueType Returns string implicit operator StringValueType(string) public static implicit operator SteamDatagramRelayAuthTicket.ExtraField.StringValueType(string s) Parameters s string Returns SteamDatagramRelayAuthTicket.ExtraField.StringValueType"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamDatagramRelayAuthTicket.ExtraField.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamDatagramRelayAuthTicket.ExtraField.html",
    "title": "Struct SteamDatagramRelayAuthTicket.ExtraField",
    "summary": "Struct SteamDatagramRelayAuthTicket.ExtraField Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct SteamDatagramRelayAuthTicket.ExtraField Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields Name public SteamDatagramRelayAuthTicket.ExtraField.NameType Name Field Value SteamDatagramRelayAuthTicket.ExtraField.NameType StringValue public SteamDatagramRelayAuthTicket.ExtraField.StringValueType StringValue Field Value SteamDatagramRelayAuthTicket.ExtraField.StringValueType Type public SteamDatagramRelayAuthTicket.ExtraField.EType Type Field Value SteamDatagramRelayAuthTicket.ExtraField.EType Properties Fixed64Value public ulong Fixed64Value { readonly get; set; } Property Value ulong IntValue public long IntValue { readonly get; set; } Property Value long"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamDatagramRelayAuthTicket.ExtraFieldsType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamDatagramRelayAuthTicket.ExtraFieldsType.html",
    "title": "Struct SteamDatagramRelayAuthTicket.ExtraFieldsType",
    "summary": "Struct SteamDatagramRelayAuthTicket.ExtraFieldsType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct SteamDatagramRelayAuthTicket.ExtraFieldsType Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields MaxExtraFields public const int MaxExtraFields = 16 Field Value int"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamDatagramRelayAuthTicket.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamDatagramRelayAuthTicket.html",
    "title": "Struct SteamDatagramRelayAuthTicket",
    "summary": "Struct SteamDatagramRelayAuthTicket Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct SteamDatagramRelayAuthTicket Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields AppId public AppId AppId Field Value AppId ExtraFields public SteamDatagramRelayAuthTicket.ExtraFieldsType ExtraFields Field Value SteamDatagramRelayAuthTicket.ExtraFieldsType ExtraFieldsCount public int ExtraFieldsCount Field Value int IdentityAuthorizedClient public SteamNetworkingIdentity IdentityAuthorizedClient Field Value SteamNetworkingIdentity IdentityGameServer public SteamNetworkingIdentity IdentityGameServer Field Value SteamNetworkingIdentity PublicIP public uint PublicIP Field Value uint RestrictToVirtualPort public int RestrictToVirtualPort Field Value int Routing public SteamDatagramHostedAddress Routing Field Value SteamDatagramHostedAddress TicketExpiry public RTime32 TicketExpiry Field Value RTime32 Methods Clear() public void Clear()"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamErrorException.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamErrorException.html",
    "title": "Class SteamErrorException",
    "summary": "Class SteamErrorException Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll [DataContract] public class SteamErrorException : SteamException, ISerializable Inheritance object Exception SteamException SteamErrorException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetType() Exception.TargetSite Exception.Message Exception.Data Exception.InnerException Exception.HelpLink Exception.Source Exception.HResult Exception.StackTrace Exception.SerializeObjectState object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors SteamErrorException() public SteamErrorException() SteamErrorException(EResult) public SteamErrorException(EResult result) Parameters result EResult SteamErrorException(EResult, string?) public SteamErrorException(EResult result, string? message) Parameters result EResult message string SteamErrorException(string?) public SteamErrorException(string? message) Parameters message string SteamErrorException(string?, Exception?) public SteamErrorException(string? message, Exception? inner) Parameters message string inner Exception Properties Result public EResult Result { get; } Property Value EResult"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamErrorExceptionSerializer.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamErrorExceptionSerializer.html",
    "title": "Class SteamErrorExceptionSerializer",
    "summary": "Class SteamErrorExceptionSerializer Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public sealed class SteamErrorExceptionSerializer : Serializer<SteamErrorException?>, IDerivedSerializer<SteamErrorException?>, IDerivedSerializer Inheritance object Serializer Serializer<SteamErrorException> SteamErrorExceptionSerializer Implements IDerivedSerializer<SteamErrorException> IDerivedSerializer Inherited Members Serializer<SteamErrorException>.Default Serializer.Register(Type, Type) Serializer.TrySizeOfDerived<TSuper>(SerializationContext, in TSuper, out int) Serializer.TryWriteDerived<TSuper>(SerializationContext, ref RowBuffer, in TSuper) Serializer.Slice(TypeId, ref TypeId, SerializationContext, ref ReadOnlyRowBuffer) Serializer.Dice(int, SerializationContext, ref ReadOnlyRowBuffer) Serializer.TryReadDerived<TSuper>(TypeId, SerializationContext, ref ReadOnlyRowBuffer, out TSuper) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors SteamErrorExceptionSerializer() public SteamErrorExceptionSerializer() Properties TypeId public static TypeId TypeId { get; } Property Value TypeId Methods GetTypeId() public override TypeId GetTypeId() Returns TypeId SizeOf(SerializationContext, in SteamErrorException?) public override int SizeOf(SerializationContext context, in SteamErrorException? value) Parameters context SerializationContext value SteamErrorException Returns int SizeOfSegment(SerializationContext, in SteamErrorException) public static int SizeOfSegment(SerializationContext context, in SteamErrorException value) Parameters context SerializationContext value SteamErrorException Returns int TryRead(SerializationContext, ref ReadOnlyRowBuffer, out SteamErrorException?) public override bool TryRead(SerializationContext context, ref ReadOnlyRowBuffer buffer, out SteamErrorException? value) Parameters context SerializationContext buffer ReadOnlyRowBuffer value SteamErrorException Returns bool TryReadSegment(SerializationContext, ref ReadOnlyRowBuffer) public static bool TryReadSegment(SerializationContext context, ref ReadOnlyRowBuffer buffer) Parameters context SerializationContext buffer ReadOnlyRowBuffer Returns bool Write(SerializationContext, ref RowBuffer, in SteamErrorException?) public override void Write(SerializationContext context, ref RowBuffer buffer, in SteamErrorException? value) Parameters context SerializationContext buffer RowBuffer value SteamErrorException WriteSegment(SerializationContext, ref RowBuffer, in SteamErrorException) public static void WriteSegment(SerializationContext context, ref RowBuffer buffer, in SteamErrorException value) Parameters context SerializationContext buffer RowBuffer value SteamErrorException"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamEventAction-1.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamEventAction-1.html",
    "title": "Delegate SteamEventAction<T>",
    "summary": "Delegate SteamEventAction<T> Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll A steam event action. public delegate void SteamEventAction<T>(in T data) where T : struct Parameters data T The event data. Type Parameters T The type of event structure to receive. Constructors SteamEventAction(object, nint) public SteamEventAction(object @object, nint method) Parameters object object method nint Methods BeginInvoke(in T, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(in T data, AsyncCallback callback, object @object) Parameters data T callback AsyncCallback object object Returns IAsyncResult EndInvoke(in T, IAsyncResult) public virtual void EndInvoke(in T data, IAsyncResult result) Parameters data T result IAsyncResult Invoke(in T) public virtual void Invoke(in T data) Parameters data T"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamException.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamException.html",
    "title": "Class SteamException",
    "summary": "Class SteamException Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll [DataContract] public class SteamException : Exception, ISerializable Inheritance object Exception SteamException Implements ISerializable Derived SteamErrorException SteamInitException Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetType() Exception.TargetSite Exception.Message Exception.Data Exception.InnerException Exception.HelpLink Exception.Source Exception.HResult Exception.StackTrace Exception.SerializeObjectState object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors SteamException() public SteamException() SteamException(string?) public SteamException(string? message) Parameters message string SteamException(string?, Exception?) public SteamException(string? message, Exception? inner) Parameters message string inner Exception"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamExceptionSerializer.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamExceptionSerializer.html",
    "title": "Class SteamExceptionSerializer",
    "summary": "Class SteamExceptionSerializer Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public sealed class SteamExceptionSerializer : Serializer<SteamException?>, IDerivedSerializer<SteamException?>, IDerivedSerializer Inheritance object Serializer Serializer<SteamException> SteamExceptionSerializer Implements IDerivedSerializer<SteamException> IDerivedSerializer Inherited Members Serializer<SteamException>.Default Serializer.Register(Type, Type) Serializer.TrySizeOfDerived<TSuper>(SerializationContext, in TSuper, out int) Serializer.TryWriteDerived<TSuper>(SerializationContext, ref RowBuffer, in TSuper) Serializer.Slice(TypeId, ref TypeId, SerializationContext, ref ReadOnlyRowBuffer) Serializer.Dice(int, SerializationContext, ref ReadOnlyRowBuffer) Serializer.TryReadDerived<TSuper>(TypeId, SerializationContext, ref ReadOnlyRowBuffer, out TSuper) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors SteamExceptionSerializer() public SteamExceptionSerializer() Properties TypeId public static TypeId TypeId { get; } Property Value TypeId Methods GetTypeId() public override TypeId GetTypeId() Returns TypeId SizeOf(SerializationContext, in SteamException?) public override int SizeOf(SerializationContext context, in SteamException? value) Parameters context SerializationContext value SteamException Returns int SizeOfSegment(SerializationContext, in SteamException) public static int SizeOfSegment(SerializationContext context, in SteamException value) Parameters context SerializationContext value SteamException Returns int TryRead(SerializationContext, ref ReadOnlyRowBuffer, out SteamException?) public override bool TryRead(SerializationContext context, ref ReadOnlyRowBuffer buffer, out SteamException? value) Parameters context SerializationContext buffer ReadOnlyRowBuffer value SteamException Returns bool TryReadSegment(SerializationContext, ref ReadOnlyRowBuffer) public static bool TryReadSegment(SerializationContext context, ref ReadOnlyRowBuffer buffer) Parameters context SerializationContext buffer ReadOnlyRowBuffer Returns bool Write(SerializationContext, ref RowBuffer, in SteamException?) public override void Write(SerializationContext context, ref RowBuffer buffer, in SteamException? value) Parameters context SerializationContext buffer RowBuffer value SteamException WriteSegment(SerializationContext, ref RowBuffer, in SteamException) public static void WriteSegment(SerializationContext context, ref RowBuffer buffer, in SteamException value) Parameters context SerializationContext buffer RowBuffer value SteamException"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamIPAddress.IPv6Type.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamIPAddress.IPv6Type.html",
    "title": "Struct SteamIPAddress.IPv6Type",
    "summary": "Struct SteamIPAddress.IPv6Type Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct SteamIPAddress.IPv6Type Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields Length public const int Length = 16 Field Value int"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamIPAddress.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamIPAddress.html",
    "title": "Struct SteamIPAddress",
    "summary": "Struct SteamIPAddress Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct SteamIPAddress Inherited Members ValueType.Equals(object) ValueType.GetHashCode() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields IPv6 public SteamIPAddress.IPv6Type IPv6 Field Value SteamIPAddress.IPv6Type Type public ESteamIPType Type Field Value ESteamIPType Properties IPv4 public readonly uint IPv4 { get; } Property Value uint IPv4Any public static SteamIPAddress IPv4Any { get; } Property Value SteamIPAddress IPv4Loopback public static SteamIPAddress IPv4Loopback { get; } Property Value SteamIPAddress IPv6Any public static SteamIPAddress IPv6Any { get; } Property Value SteamIPAddress IPv6Loopback public static SteamIPAddress IPv6Loopback { get; } Property Value SteamIPAddress IsSet public readonly bool IsSet { get; } Property Value bool Methods AsIPAddress() public readonly IPAddress AsIPAddress() Returns IPAddress ToString() public override readonly string ToString() Returns string"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamInitException.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamInitException.html",
    "title": "Class SteamInitException",
    "summary": "Class SteamInitException Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll [DataContract] public class SteamInitException : SteamException, ISerializable Inheritance object Exception SteamException SteamInitException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetType() Exception.TargetSite Exception.Message Exception.Data Exception.InnerException Exception.HelpLink Exception.Source Exception.HResult Exception.StackTrace Exception.SerializeObjectState object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors SteamInitException() public SteamInitException() SteamInitException(ESteamAPIInitResult, string?) public SteamInitException(ESteamAPIInitResult result, string? message) Parameters result ESteamAPIInitResult message string SteamInitException(string?) public SteamInitException(string? message) Parameters message string SteamInitException(string?, Exception?) public SteamInitException(string? message, Exception? inner) Parameters message string inner Exception Properties Result public ESteamAPIInitResult Result { get; } Property Value ESteamAPIInitResult"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamInitExceptionSerializer.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamInitExceptionSerializer.html",
    "title": "Class SteamInitExceptionSerializer",
    "summary": "Class SteamInitExceptionSerializer Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public sealed class SteamInitExceptionSerializer : Serializer<SteamInitException?>, IDerivedSerializer<SteamInitException?>, IDerivedSerializer Inheritance object Serializer Serializer<SteamInitException> SteamInitExceptionSerializer Implements IDerivedSerializer<SteamInitException> IDerivedSerializer Inherited Members Serializer<SteamInitException>.Default Serializer.Register(Type, Type) Serializer.TrySizeOfDerived<TSuper>(SerializationContext, in TSuper, out int) Serializer.TryWriteDerived<TSuper>(SerializationContext, ref RowBuffer, in TSuper) Serializer.Slice(TypeId, ref TypeId, SerializationContext, ref ReadOnlyRowBuffer) Serializer.Dice(int, SerializationContext, ref ReadOnlyRowBuffer) Serializer.TryReadDerived<TSuper>(TypeId, SerializationContext, ref ReadOnlyRowBuffer, out TSuper) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors SteamInitExceptionSerializer() public SteamInitExceptionSerializer() Properties TypeId public static TypeId TypeId { get; } Property Value TypeId Methods GetTypeId() public override TypeId GetTypeId() Returns TypeId SizeOf(SerializationContext, in SteamInitException?) public override int SizeOf(SerializationContext context, in SteamInitException? value) Parameters context SerializationContext value SteamInitException Returns int SizeOfSegment(SerializationContext, in SteamInitException) public static int SizeOfSegment(SerializationContext context, in SteamInitException value) Parameters context SerializationContext value SteamInitException Returns int TryRead(SerializationContext, ref ReadOnlyRowBuffer, out SteamInitException?) public override bool TryRead(SerializationContext context, ref ReadOnlyRowBuffer buffer, out SteamInitException? value) Parameters context SerializationContext buffer ReadOnlyRowBuffer value SteamInitException Returns bool TryReadSegment(SerializationContext, ref ReadOnlyRowBuffer) public static bool TryReadSegment(SerializationContext context, ref ReadOnlyRowBuffer buffer) Parameters context SerializationContext buffer ReadOnlyRowBuffer Returns bool Write(SerializationContext, ref RowBuffer, in SteamInitException?) public override void Write(SerializationContext context, ref RowBuffer buffer, in SteamInitException? value) Parameters context SerializationContext buffer RowBuffer value SteamInitException WriteSegment(SerializationContext, ref RowBuffer, in SteamInitException) public static void WriteSegment(SerializationContext context, ref RowBuffer buffer, in SteamInitException value) Parameters context SerializationContext buffer RowBuffer value SteamInitException"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamInputActionEvent.AnalogAction_t.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamInputActionEvent.AnalogAction_t.html",
    "title": "Struct SteamInputActionEvent.AnalogAction_t",
    "summary": "Struct SteamInputActionEvent.AnalogAction_t Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct SteamInputActionEvent.AnalogAction_t Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields actionHandle public InputAnalogActionHandle actionHandle Field Value InputAnalogActionHandle analogActionData public InputAnalogActionData analogActionData Field Value InputAnalogActionData"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamInputActionEvent.DigitalAction_t.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamInputActionEvent.DigitalAction_t.html",
    "title": "Struct SteamInputActionEvent.DigitalAction_t",
    "summary": "Struct SteamInputActionEvent.DigitalAction_t Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct SteamInputActionEvent.DigitalAction_t Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields actionHandle public InputDigitalActionHandle actionHandle Field Value InputDigitalActionHandle digitalActionData public InputDigitalActionData digitalActionData Field Value InputDigitalActionData"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamInputActionEvent.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamInputActionEvent.html",
    "title": "Struct SteamInputActionEvent",
    "summary": "Struct SteamInputActionEvent Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct SteamInputActionEvent : IGlobalCallback, ICallback Implements IGlobalCallback ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 2800 Field Value int analogAction public SteamInputActionEvent.AnalogAction_t analogAction Field Value SteamInputActionEvent.AnalogAction_t controllerHandle public InputHandle controllerHandle Field Value InputHandle eEventType public ESteamInputActionEventType eEventType Field Value ESteamInputActionEventType Properties digitalAction public SteamInputActionEvent.DigitalAction_t digitalAction { get; } Property Value SteamInputActionEvent.DigitalAction_t"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamInputConfigurationLoaded.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamInputConfigurationLoaded.html",
    "title": "Struct SteamInputConfigurationLoaded",
    "summary": "Struct SteamInputConfigurationLoaded Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct SteamInputConfigurationLoaded : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields AppId public AppId AppId Field Value AppId CallbackId public const int CallbackId = 2803 Field Value int DeviceHandle public InputHandle DeviceHandle Field Value InputHandle MajorRevision public uint MajorRevision Field Value uint MappingCreator public CSteamID MappingCreator Field Value CSteamID MinorRevision public uint MinorRevision Field Value uint Properties UsesSteamInputAPI public bool UsesSteamInputAPI { get; set; } Property Value bool"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamInputDeviceConnected.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamInputDeviceConnected.html",
    "title": "Struct SteamInputDeviceConnected",
    "summary": "Struct SteamInputDeviceConnected Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct SteamInputDeviceConnected : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 2801 Field Value int ConnectedDeviceHandle public InputHandle ConnectedDeviceHandle Field Value InputHandle"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamInputDeviceDisconnected.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamInputDeviceDisconnected.html",
    "title": "Struct SteamInputDeviceDisconnected",
    "summary": "Struct SteamInputDeviceDisconnected Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct SteamInputDeviceDisconnected : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 2802 Field Value int DisconnectedDeviceHandle public InputHandle DisconnectedDeviceHandle Field Value InputHandle"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamInputGamepadSlotChange.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamInputGamepadSlotChange.html",
    "title": "Struct SteamInputGamepadSlotChange",
    "summary": "Struct SteamInputGamepadSlotChange Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct SteamInputGamepadSlotChange : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields AppId public AppId AppId Field Value AppId CallbackId public const int CallbackId = 2804 Field Value int DeviceHandle public InputHandle DeviceHandle Field Value InputHandle DeviceType public ESteamInputType DeviceType Field Value ESteamInputType"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamInventoryDefinitionUpdate.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamInventoryDefinitionUpdate.html",
    "title": "Struct SteamInventoryDefinitionUpdate",
    "summary": "Struct SteamInventoryDefinitionUpdate Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct SteamInventoryDefinitionUpdate : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 4702 Field Value int"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamInventoryEligiblePromoItemDefIDs.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamInventoryEligiblePromoItemDefIDs.html",
    "title": "Struct SteamInventoryEligiblePromoItemDefIDs",
    "summary": "Struct SteamInventoryEligiblePromoItemDefIDs Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct SteamInventoryEligiblePromoItemDefIDs : ICallResult Implements ICallResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 4703 Field Value int NumEligiblePromoItemDefs public int NumEligiblePromoItemDefs Field Value int Result public EResult Result Field Value EResult SteamID public CSteamID SteamID Field Value CSteamID Properties CachedData public bool CachedData { get; set; } Property Value bool"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamInventoryFullUpdate.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamInventoryFullUpdate.html",
    "title": "Struct SteamInventoryFullUpdate",
    "summary": "Struct SteamInventoryFullUpdate Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct SteamInventoryFullUpdate : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 4701 Field Value int Handle public SteamInventoryResult Handle Field Value SteamInventoryResult"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamInventoryRequestPricesResult.CurrencyType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamInventoryRequestPricesResult.CurrencyType.html",
    "title": "Struct SteamInventoryRequestPricesResult.CurrencyType",
    "summary": "Struct SteamInventoryRequestPricesResult.CurrencyType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct SteamInventoryRequestPricesResult.CurrencyType Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields Length public const int Length = 4 Field Value int Operators implicit operator string(CurrencyType) public static implicit operator string(SteamInventoryRequestPricesResult.CurrencyType v) Parameters v SteamInventoryRequestPricesResult.CurrencyType Returns string implicit operator CurrencyType(string) public static implicit operator SteamInventoryRequestPricesResult.CurrencyType(string s) Parameters s string Returns SteamInventoryRequestPricesResult.CurrencyType"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamInventoryRequestPricesResult.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamInventoryRequestPricesResult.html",
    "title": "Struct SteamInventoryRequestPricesResult",
    "summary": "Struct SteamInventoryRequestPricesResult Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct SteamInventoryRequestPricesResult : ICallResult Implements ICallResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 4705 Field Value int Currency public SteamInventoryRequestPricesResult.CurrencyType Currency Field Value SteamInventoryRequestPricesResult.CurrencyType Result public EResult Result Field Value EResult"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamInventoryResult.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamInventoryResult.html",
    "title": "Struct SteamInventoryResult",
    "summary": "Struct SteamInventoryResult Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public readonly struct SteamInventoryResult : IEquatable<SteamInventoryResult>, IComparable<SteamInventoryResult> Implements IEquatable<SteamInventoryResult> IComparable<SteamInventoryResult> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors SteamInventoryResult(int) public SteamInventoryResult(int id) Parameters id int Properties Id The underlying value. public int Id { get; } Property Value int Invalid The invalid id. public static int Invalid { get; } Property Value int IsValid True if not Invalid. public bool IsValid { get; } Property Value bool Methods CompareTo(SteamInventoryResult) Value-based comparison. public int CompareTo(SteamInventoryResult other) Parameters other SteamInventoryResult Returns int Equals(SteamInventoryResult) Value-based equality. public bool Equals(SteamInventoryResult other) Parameters other SteamInventoryResult Returns bool Equals(object?) public override bool Equals(object? obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() public override string ToString() Returns string Operators operator ==(SteamInventoryResult, SteamInventoryResult) Value-based equality. public static bool operator ==(SteamInventoryResult left, SteamInventoryResult right) Parameters left SteamInventoryResult right SteamInventoryResult Returns bool operator >(SteamInventoryResult, SteamInventoryResult) Value-based comparison. public static bool operator >(SteamInventoryResult left, SteamInventoryResult right) Parameters left SteamInventoryResult right SteamInventoryResult Returns bool operator >=(SteamInventoryResult, SteamInventoryResult) Value-based comparison. public static bool operator >=(SteamInventoryResult left, SteamInventoryResult right) Parameters left SteamInventoryResult right SteamInventoryResult Returns bool operator !=(SteamInventoryResult, SteamInventoryResult) Value-based equality. public static bool operator !=(SteamInventoryResult left, SteamInventoryResult right) Parameters left SteamInventoryResult right SteamInventoryResult Returns bool operator <(SteamInventoryResult, SteamInventoryResult) Value-based comparison. public static bool operator <(SteamInventoryResult left, SteamInventoryResult right) Parameters left SteamInventoryResult right SteamInventoryResult Returns bool operator <=(SteamInventoryResult, SteamInventoryResult) Value-based comparison. public static bool operator <=(SteamInventoryResult left, SteamInventoryResult right) Parameters left SteamInventoryResult right SteamInventoryResult Returns bool"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamInventoryResultReady.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamInventoryResultReady.html",
    "title": "Struct SteamInventoryResultReady",
    "summary": "Struct SteamInventoryResultReady Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct SteamInventoryResultReady : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 4700 Field Value int Handle public SteamInventoryResult Handle Field Value SteamInventoryResult Result public EResult Result Field Value EResult"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamInventoryStartPurchaseResult.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamInventoryStartPurchaseResult.html",
    "title": "Struct SteamInventoryStartPurchaseResult",
    "summary": "Struct SteamInventoryStartPurchaseResult Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct SteamInventoryStartPurchaseResult : ICallResult Implements ICallResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 4704 Field Value int OrderID public ulong OrderID Field Value ulong Result public EResult Result Field Value EResult TransID public ulong TransID Field Value ulong"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamInventoryUpdateHandle.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamInventoryUpdateHandle.html",
    "title": "Struct SteamInventoryUpdateHandle",
    "summary": "Struct SteamInventoryUpdateHandle Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public readonly struct SteamInventoryUpdateHandle : IEquatable<SteamInventoryUpdateHandle>, IComparable<SteamInventoryUpdateHandle> Implements IEquatable<SteamInventoryUpdateHandle> IComparable<SteamInventoryUpdateHandle> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors SteamInventoryUpdateHandle(ulong) public SteamInventoryUpdateHandle(ulong id) Parameters id ulong Properties Id The underlying value. public ulong Id { get; } Property Value ulong Invalid The invalid id. public static ulong Invalid { get; } Property Value ulong IsValid True if not Invalid. public bool IsValid { get; } Property Value bool Methods CompareTo(SteamInventoryUpdateHandle) Value-based comparison. public int CompareTo(SteamInventoryUpdateHandle other) Parameters other SteamInventoryUpdateHandle Returns int Equals(SteamInventoryUpdateHandle) Value-based equality. public bool Equals(SteamInventoryUpdateHandle other) Parameters other SteamInventoryUpdateHandle Returns bool Equals(object?) public override bool Equals(object? obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() public override string ToString() Returns string Operators operator ==(SteamInventoryUpdateHandle, SteamInventoryUpdateHandle) Value-based equality. public static bool operator ==(SteamInventoryUpdateHandle left, SteamInventoryUpdateHandle right) Parameters left SteamInventoryUpdateHandle right SteamInventoryUpdateHandle Returns bool operator >(SteamInventoryUpdateHandle, SteamInventoryUpdateHandle) Value-based comparison. public static bool operator >(SteamInventoryUpdateHandle left, SteamInventoryUpdateHandle right) Parameters left SteamInventoryUpdateHandle right SteamInventoryUpdateHandle Returns bool operator >=(SteamInventoryUpdateHandle, SteamInventoryUpdateHandle) Value-based comparison. public static bool operator >=(SteamInventoryUpdateHandle left, SteamInventoryUpdateHandle right) Parameters left SteamInventoryUpdateHandle right SteamInventoryUpdateHandle Returns bool operator !=(SteamInventoryUpdateHandle, SteamInventoryUpdateHandle) Value-based equality. public static bool operator !=(SteamInventoryUpdateHandle left, SteamInventoryUpdateHandle right) Parameters left SteamInventoryUpdateHandle right SteamInventoryUpdateHandle Returns bool operator <(SteamInventoryUpdateHandle, SteamInventoryUpdateHandle) Value-based comparison. public static bool operator <(SteamInventoryUpdateHandle left, SteamInventoryUpdateHandle right) Parameters left SteamInventoryUpdateHandle right SteamInventoryUpdateHandle Returns bool operator <=(SteamInventoryUpdateHandle, SteamInventoryUpdateHandle) Value-based comparison. public static bool operator <=(SteamInventoryUpdateHandle left, SteamInventoryUpdateHandle right) Parameters left SteamInventoryUpdateHandle right SteamInventoryUpdateHandle Returns bool"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamItemDef.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamItemDef.html",
    "title": "Struct SteamItemDef",
    "summary": "Struct SteamItemDef Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public readonly struct SteamItemDef : IEquatable<SteamItemDef>, IComparable<SteamItemDef> Implements IEquatable<SteamItemDef> IComparable<SteamItemDef> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors SteamItemDef(int) public SteamItemDef(int id) Parameters id int Properties Id The underlying value. public int Id { get; } Property Value int Invalid The invalid id. public static int Invalid { get; } Property Value int IsValid True if not Invalid. public bool IsValid { get; } Property Value bool Methods CompareTo(SteamItemDef) Value-based comparison. public int CompareTo(SteamItemDef other) Parameters other SteamItemDef Returns int Equals(SteamItemDef) Value-based equality. public bool Equals(SteamItemDef other) Parameters other SteamItemDef Returns bool Equals(object?) public override bool Equals(object? obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() public override string ToString() Returns string Operators operator ==(SteamItemDef, SteamItemDef) Value-based equality. public static bool operator ==(SteamItemDef left, SteamItemDef right) Parameters left SteamItemDef right SteamItemDef Returns bool operator >(SteamItemDef, SteamItemDef) Value-based comparison. public static bool operator >(SteamItemDef left, SteamItemDef right) Parameters left SteamItemDef right SteamItemDef Returns bool operator >=(SteamItemDef, SteamItemDef) Value-based comparison. public static bool operator >=(SteamItemDef left, SteamItemDef right) Parameters left SteamItemDef right SteamItemDef Returns bool operator !=(SteamItemDef, SteamItemDef) Value-based equality. public static bool operator !=(SteamItemDef left, SteamItemDef right) Parameters left SteamItemDef right SteamItemDef Returns bool operator <(SteamItemDef, SteamItemDef) Value-based comparison. public static bool operator <(SteamItemDef left, SteamItemDef right) Parameters left SteamItemDef right SteamItemDef Returns bool operator <=(SteamItemDef, SteamItemDef) Value-based comparison. public static bool operator <=(SteamItemDef left, SteamItemDef right) Parameters left SteamItemDef right SteamItemDef Returns bool"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamItemDetails.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamItemDetails.html",
    "title": "Struct SteamItemDetails",
    "summary": "Struct SteamItemDetails Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct SteamItemDetails Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields Definition public SteamItemDef Definition Field Value SteamItemDef Flags public ushort Flags Field Value ushort ItemId public SteamItemInstanceID ItemId Field Value SteamItemInstanceID Quantity public ushort Quantity Field Value ushort"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamItemInstanceID.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamItemInstanceID.html",
    "title": "Struct SteamItemInstanceID",
    "summary": "Struct SteamItemInstanceID Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public readonly struct SteamItemInstanceID : IEquatable<SteamItemInstanceID>, IComparable<SteamItemInstanceID> Implements IEquatable<SteamItemInstanceID> IComparable<SteamItemInstanceID> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors SteamItemInstanceID(ulong) public SteamItemInstanceID(ulong id) Parameters id ulong Properties Id The underlying value. public ulong Id { get; } Property Value ulong Invalid The invalid id. public static ulong Invalid { get; } Property Value ulong IsValid True if not Invalid. public bool IsValid { get; } Property Value bool Methods CompareTo(SteamItemInstanceID) Value-based comparison. public int CompareTo(SteamItemInstanceID other) Parameters other SteamItemInstanceID Returns int Equals(SteamItemInstanceID) Value-based equality. public bool Equals(SteamItemInstanceID other) Parameters other SteamItemInstanceID Returns bool Equals(object?) public override bool Equals(object? obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() public override string ToString() Returns string Operators operator ==(SteamItemInstanceID, SteamItemInstanceID) Value-based equality. public static bool operator ==(SteamItemInstanceID left, SteamItemInstanceID right) Parameters left SteamItemInstanceID right SteamItemInstanceID Returns bool operator >(SteamItemInstanceID, SteamItemInstanceID) Value-based comparison. public static bool operator >(SteamItemInstanceID left, SteamItemInstanceID right) Parameters left SteamItemInstanceID right SteamItemInstanceID Returns bool operator >=(SteamItemInstanceID, SteamItemInstanceID) Value-based comparison. public static bool operator >=(SteamItemInstanceID left, SteamItemInstanceID right) Parameters left SteamItemInstanceID right SteamItemInstanceID Returns bool operator !=(SteamItemInstanceID, SteamItemInstanceID) Value-based equality. public static bool operator !=(SteamItemInstanceID left, SteamItemInstanceID right) Parameters left SteamItemInstanceID right SteamItemInstanceID Returns bool operator <(SteamItemInstanceID, SteamItemInstanceID) Value-based comparison. public static bool operator <(SteamItemInstanceID left, SteamItemInstanceID right) Parameters left SteamItemInstanceID right SteamItemInstanceID Returns bool operator <=(SteamItemInstanceID, SteamItemInstanceID) Value-based comparison. public static bool operator <=(SteamItemInstanceID left, SteamItemInstanceID right) Parameters left SteamItemInstanceID right SteamItemInstanceID Returns bool"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamLeaderboard.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamLeaderboard.html",
    "title": "Struct SteamLeaderboard",
    "summary": "Struct SteamLeaderboard Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public readonly struct SteamLeaderboard : IEquatable<SteamLeaderboard>, IComparable<SteamLeaderboard> Implements IEquatable<SteamLeaderboard> IComparable<SteamLeaderboard> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors SteamLeaderboard(ulong) public SteamLeaderboard(ulong id) Parameters id ulong Properties Id The underlying value. public ulong Id { get; } Property Value ulong Invalid The invalid id. public static ulong Invalid { get; } Property Value ulong IsValid True if not Invalid. public bool IsValid { get; } Property Value bool Methods CompareTo(SteamLeaderboard) Value-based comparison. public int CompareTo(SteamLeaderboard other) Parameters other SteamLeaderboard Returns int Equals(SteamLeaderboard) Value-based equality. public bool Equals(SteamLeaderboard other) Parameters other SteamLeaderboard Returns bool Equals(object?) public override bool Equals(object? obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() public override string ToString() Returns string Operators operator ==(SteamLeaderboard, SteamLeaderboard) Value-based equality. public static bool operator ==(SteamLeaderboard left, SteamLeaderboard right) Parameters left SteamLeaderboard right SteamLeaderboard Returns bool operator >(SteamLeaderboard, SteamLeaderboard) Value-based comparison. public static bool operator >(SteamLeaderboard left, SteamLeaderboard right) Parameters left SteamLeaderboard right SteamLeaderboard Returns bool operator >=(SteamLeaderboard, SteamLeaderboard) Value-based comparison. public static bool operator >=(SteamLeaderboard left, SteamLeaderboard right) Parameters left SteamLeaderboard right SteamLeaderboard Returns bool operator !=(SteamLeaderboard, SteamLeaderboard) Value-based equality. public static bool operator !=(SteamLeaderboard left, SteamLeaderboard right) Parameters left SteamLeaderboard right SteamLeaderboard Returns bool operator <(SteamLeaderboard, SteamLeaderboard) Value-based comparison. public static bool operator <(SteamLeaderboard left, SteamLeaderboard right) Parameters left SteamLeaderboard right SteamLeaderboard Returns bool operator <=(SteamLeaderboard, SteamLeaderboard) Value-based comparison. public static bool operator <=(SteamLeaderboard left, SteamLeaderboard right) Parameters left SteamLeaderboard right SteamLeaderboard Returns bool"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamLeaderboardEntries.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamLeaderboardEntries.html",
    "title": "Struct SteamLeaderboardEntries",
    "summary": "Struct SteamLeaderboardEntries Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public readonly struct SteamLeaderboardEntries : IEquatable<SteamLeaderboardEntries>, IComparable<SteamLeaderboardEntries> Implements IEquatable<SteamLeaderboardEntries> IComparable<SteamLeaderboardEntries> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors SteamLeaderboardEntries(ulong) public SteamLeaderboardEntries(ulong id) Parameters id ulong Properties Id The underlying value. public ulong Id { get; } Property Value ulong Invalid The invalid id. public static ulong Invalid { get; } Property Value ulong IsValid True if not Invalid. public bool IsValid { get; } Property Value bool Methods CompareTo(SteamLeaderboardEntries) Value-based comparison. public int CompareTo(SteamLeaderboardEntries other) Parameters other SteamLeaderboardEntries Returns int Equals(SteamLeaderboardEntries) Value-based equality. public bool Equals(SteamLeaderboardEntries other) Parameters other SteamLeaderboardEntries Returns bool Equals(object?) public override bool Equals(object? obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() public override string ToString() Returns string Operators operator ==(SteamLeaderboardEntries, SteamLeaderboardEntries) Value-based equality. public static bool operator ==(SteamLeaderboardEntries left, SteamLeaderboardEntries right) Parameters left SteamLeaderboardEntries right SteamLeaderboardEntries Returns bool operator >(SteamLeaderboardEntries, SteamLeaderboardEntries) Value-based comparison. public static bool operator >(SteamLeaderboardEntries left, SteamLeaderboardEntries right) Parameters left SteamLeaderboardEntries right SteamLeaderboardEntries Returns bool operator >=(SteamLeaderboardEntries, SteamLeaderboardEntries) Value-based comparison. public static bool operator >=(SteamLeaderboardEntries left, SteamLeaderboardEntries right) Parameters left SteamLeaderboardEntries right SteamLeaderboardEntries Returns bool operator !=(SteamLeaderboardEntries, SteamLeaderboardEntries) Value-based equality. public static bool operator !=(SteamLeaderboardEntries left, SteamLeaderboardEntries right) Parameters left SteamLeaderboardEntries right SteamLeaderboardEntries Returns bool operator <(SteamLeaderboardEntries, SteamLeaderboardEntries) Value-based comparison. public static bool operator <(SteamLeaderboardEntries left, SteamLeaderboardEntries right) Parameters left SteamLeaderboardEntries right SteamLeaderboardEntries Returns bool operator <=(SteamLeaderboardEntries, SteamLeaderboardEntries) Value-based comparison. public static bool operator <=(SteamLeaderboardEntries left, SteamLeaderboardEntries right) Parameters left SteamLeaderboardEntries right SteamLeaderboardEntries Returns bool"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamNativeObject.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamNativeObject.html",
    "title": "Class SteamNativeObject",
    "summary": "Class SteamNativeObject Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public abstract class SteamNativeObject Inheritance object SteamNativeObject Derived ISteamApps ISteamClient ISteamController ISteamFriends ISteamGameSearch ISteamGameServer ISteamGameServerStats ISteamHTMLSurface ISteamHTTP ISteamInput ISteamInventory ISteamMatchmaking ISteamMatchmakingPingResponse ISteamMatchmakingPlayersResponse ISteamMatchmakingRulesResponse ISteamMatchmakingServerListResponse ISteamMatchmakingServers ISteamMusic ISteamMusicRemote ISteamNetworking ISteamNetworkingFakeUDPPort ISteamNetworkingMessages ISteamNetworkingSockets ISteamNetworkingUtils ISteamParentalSettings ISteamParties ISteamRemotePlay ISteamRemoteStorage ISteamScreenshots ISteamTimeline ISteamUGC ISteamUser ISteamUserStats ISteamUtils ISteamVideo Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode()"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamNetAuthenticationStatus.DebugMsgType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamNetAuthenticationStatus.DebugMsgType.html",
    "title": "Struct SteamNetAuthenticationStatus.DebugMsgType",
    "summary": "Struct SteamNetAuthenticationStatus.DebugMsgType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct SteamNetAuthenticationStatus.DebugMsgType Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields Length public const int Length = 256 Field Value int Operators implicit operator string(DebugMsgType) public static implicit operator string(SteamNetAuthenticationStatus.DebugMsgType v) Parameters v SteamNetAuthenticationStatus.DebugMsgType Returns string implicit operator DebugMsgType(string) public static implicit operator SteamNetAuthenticationStatus.DebugMsgType(string s) Parameters s string Returns SteamNetAuthenticationStatus.DebugMsgType"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamNetAuthenticationStatus.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamNetAuthenticationStatus.html",
    "title": "Struct SteamNetAuthenticationStatus",
    "summary": "Struct SteamNetAuthenticationStatus Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct SteamNetAuthenticationStatus : IGlobalCallback, ICallback Implements IGlobalCallback ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields Avail public ESteamNetworkingAvailability Avail Field Value ESteamNetworkingAvailability CallbackId public const int CallbackId = 1222 Field Value int DebugMsg public SteamNetAuthenticationStatus.DebugMsgType DebugMsg Field Value SteamNetAuthenticationStatus.DebugMsgType"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamNetConnectionInfo.ConnectionDescriptionType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamNetConnectionInfo.ConnectionDescriptionType.html",
    "title": "Struct SteamNetConnectionInfo.ConnectionDescriptionType",
    "summary": "Struct SteamNetConnectionInfo.ConnectionDescriptionType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct SteamNetConnectionInfo.ConnectionDescriptionType Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields Length public const int Length = 128 Field Value int Operators implicit operator string(ConnectionDescriptionType) public static implicit operator string(SteamNetConnectionInfo.ConnectionDescriptionType v) Parameters v SteamNetConnectionInfo.ConnectionDescriptionType Returns string implicit operator ConnectionDescriptionType(string) public static implicit operator SteamNetConnectionInfo.ConnectionDescriptionType(string s) Parameters s string Returns SteamNetConnectionInfo.ConnectionDescriptionType"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamNetConnectionInfo.EndDebugType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamNetConnectionInfo.EndDebugType.html",
    "title": "Struct SteamNetConnectionInfo.EndDebugType",
    "summary": "Struct SteamNetConnectionInfo.EndDebugType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct SteamNetConnectionInfo.EndDebugType Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields Length public const int Length = 128 Field Value int Operators implicit operator string(EndDebugType) public static implicit operator string(SteamNetConnectionInfo.EndDebugType v) Parameters v SteamNetConnectionInfo.EndDebugType Returns string implicit operator EndDebugType(string) public static implicit operator SteamNetConnectionInfo.EndDebugType(string s) Parameters s string Returns SteamNetConnectionInfo.EndDebugType"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamNetConnectionInfo.ReservedType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamNetConnectionInfo.ReservedType.html",
    "title": "Struct SteamNetConnectionInfo.ReservedType",
    "summary": "Struct SteamNetConnectionInfo.ReservedType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct SteamNetConnectionInfo.ReservedType Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields Length public const int Length = 63 Field Value int"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamNetConnectionInfo.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamNetConnectionInfo.html",
    "title": "Struct SteamNetConnectionInfo",
    "summary": "Struct SteamNetConnectionInfo Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct SteamNetConnectionInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields AddrRemote public SteamNetworkingIPAddr AddrRemote Field Value SteamNetworkingIPAddr ConnectionDescription public SteamNetConnectionInfo.ConnectionDescriptionType ConnectionDescription Field Value SteamNetConnectionInfo.ConnectionDescriptionType EndDebug public SteamNetConnectionInfo.EndDebugType EndDebug Field Value SteamNetConnectionInfo.EndDebugType EndReason public int EndReason Field Value int Flags public int Flags Field Value int IdPOPRelay public SteamNetworkingPOPID IdPOPRelay Field Value SteamNetworkingPOPID IdPOPRemote public SteamNetworkingPOPID IdPOPRemote Field Value SteamNetworkingPOPID IdentityRemote public SteamNetworkingIdentity IdentityRemote Field Value SteamNetworkingIdentity ListenSocket public HSteamListenSocket ListenSocket Field Value HSteamListenSocket Pad1 public ushort Pad1 Field Value ushort Reserved public SteamNetConnectionInfo.ReservedType Reserved Field Value SteamNetConnectionInfo.ReservedType State public ESteamNetworkingConnectionState State Field Value ESteamNetworkingConnectionState UserData public long UserData Field Value long"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamNetConnectionRealTimeLaneStatus.ReservedType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamNetConnectionRealTimeLaneStatus.ReservedType.html",
    "title": "Struct SteamNetConnectionRealTimeLaneStatus.ReservedType",
    "summary": "Struct SteamNetConnectionRealTimeLaneStatus.ReservedType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct SteamNetConnectionRealTimeLaneStatus.ReservedType Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields Length public const int Length = 10 Field Value int"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamNetConnectionRealTimeLaneStatus.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamNetConnectionRealTimeLaneStatus.html",
    "title": "Struct SteamNetConnectionRealTimeLaneStatus",
    "summary": "Struct SteamNetConnectionRealTimeLaneStatus Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct SteamNetConnectionRealTimeLaneStatus Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields PendingReliableCount public int PendingReliableCount Field Value int PendingUnreliableCount public int PendingUnreliableCount Field Value int ReservePad1 public int ReservePad1 Field Value int Reserved public SteamNetConnectionRealTimeLaneStatus.ReservedType Reserved Field Value SteamNetConnectionRealTimeLaneStatus.ReservedType SentUnackedReliableCount public int SentUnackedReliableCount Field Value int UsecQueueTime public SteamNetworkingMicroseconds UsecQueueTime Field Value SteamNetworkingMicroseconds"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamNetConnectionRealTimeStatus.ReservedType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamNetConnectionRealTimeStatus.ReservedType.html",
    "title": "Struct SteamNetConnectionRealTimeStatus.ReservedType",
    "summary": "Struct SteamNetConnectionRealTimeStatus.ReservedType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct SteamNetConnectionRealTimeStatus.ReservedType Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields Length public const int Length = 16 Field Value int"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamNetConnectionRealTimeStatus.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamNetConnectionRealTimeStatus.html",
    "title": "Struct SteamNetConnectionRealTimeStatus",
    "summary": "Struct SteamNetConnectionRealTimeStatus Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct SteamNetConnectionRealTimeStatus Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields ConnectionQualityLocal public float ConnectionQualityLocal Field Value float ConnectionQualityRemote public float ConnectionQualityRemote Field Value float InBytesPerSec public float InBytesPerSec Field Value float InPacketsPerSec public float InPacketsPerSec Field Value float OutBytesPerSec public float OutBytesPerSec Field Value float OutPacketsPerSec public float OutPacketsPerSec Field Value float PendingReliableCount public int PendingReliableCount Field Value int PendingUnreliableCount public int PendingUnreliableCount Field Value int Ping public int Ping Field Value int Reserved public SteamNetConnectionRealTimeStatus.ReservedType Reserved Field Value SteamNetConnectionRealTimeStatus.ReservedType SendRateBytesPerSecond public int SendRateBytesPerSecond Field Value int SentUnackedReliableCount public int SentUnackedReliableCount Field Value int State public ESteamNetworkingConnectionState State Field Value ESteamNetworkingConnectionState UsecQueueTime public SteamNetworkingMicroseconds UsecQueueTime Field Value SteamNetworkingMicroseconds"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamNetConnectionStatusChangedCallback.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamNetConnectionStatusChangedCallback.html",
    "title": "Struct SteamNetConnectionStatusChangedCallback",
    "summary": "Struct SteamNetConnectionStatusChangedCallback Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct SteamNetConnectionStatusChangedCallback : IGlobalCallback, ICallback Implements IGlobalCallback ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 1221 Field Value int Conn public HSteamNetConnection Conn Field Value HSteamNetConnection Info public SteamNetConnectionInfo Info Field Value SteamNetConnectionInfo OldState public ESteamNetworkingConnectionState OldState Field Value ESteamNetworkingConnectionState"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamNetworkPingLocation.DataType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamNetworkPingLocation.DataType.html",
    "title": "Struct SteamNetworkPingLocation.DataType",
    "summary": "Struct SteamNetworkPingLocation.DataType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct SteamNetworkPingLocation.DataType Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields Length public const int Length = 512 Field Value int"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamNetworkPingLocation.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamNetworkPingLocation.html",
    "title": "Struct SteamNetworkPingLocation",
    "summary": "Struct SteamNetworkPingLocation Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct SteamNetworkPingLocation Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields Data public SteamNetworkPingLocation.DataType Data Field Value SteamNetworkPingLocation.DataType"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamNetworkingConfigValue.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamNetworkingConfigValue.html",
    "title": "Struct SteamNetworkingConfigValue",
    "summary": "Struct SteamNetworkingConfigValue Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct SteamNetworkingConfigValue Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields DataType public ESteamNetworkingConfigDataType DataType Field Value ESteamNetworkingConfigDataType Int64 public long Int64 Field Value long Value public ESteamNetworkingConfigValue Value Field Value ESteamNetworkingConfigValue Methods SetFloat(ESteamNetworkingConfigValue, float) public void SetFloat(ESteamNetworkingConfigValue eVal, float data) Parameters eVal ESteamNetworkingConfigValue data float SetInt32(ESteamNetworkingConfigValue, int) public void SetInt32(ESteamNetworkingConfigValue eVal, int data) Parameters eVal ESteamNetworkingConfigValue data int SetInt64(ESteamNetworkingConfigValue, long) public void SetInt64(ESteamNetworkingConfigValue eVal, long data) Parameters eVal ESteamNetworkingConfigValue data long SetPtr(ESteamNetworkingConfigValue, Span<byte>) public readonly void SetPtr(ESteamNetworkingConfigValue eVal, Span<byte> data) Parameters eVal ESteamNetworkingConfigValue data Span<byte> SetString(ESteamNetworkingConfigValue, string) public readonly void SetString(ESteamNetworkingConfigValue eVal, string data) Parameters eVal ESteamNetworkingConfigValue data string"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamNetworkingFakeIPResult.PortsType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamNetworkingFakeIPResult.PortsType.html",
    "title": "Struct SteamNetworkingFakeIPResult.PortsType",
    "summary": "Struct SteamNetworkingFakeIPResult.PortsType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct SteamNetworkingFakeIPResult.PortsType Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields Length public const int Length = 8 Field Value int"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamNetworkingFakeIPResult.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamNetworkingFakeIPResult.html",
    "title": "Struct SteamNetworkingFakeIPResult",
    "summary": "Struct SteamNetworkingFakeIPResult Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct SteamNetworkingFakeIPResult : IGlobalCallback, ICallback Implements IGlobalCallback ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 1223 Field Value int IP public uint IP Field Value uint Identity public SteamNetworkingIdentity Identity Field Value SteamNetworkingIdentity MaxReturnPorts public const int MaxReturnPorts = 8 Field Value int Ports public SteamNetworkingFakeIPResult.PortsType Ports Field Value SteamNetworkingFakeIPResult.PortsType Result public EResult Result Field Value EResult"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamNetworkingIPAddr.IPv6Type.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamNetworkingIPAddr.IPv6Type.html",
    "title": "Struct SteamNetworkingIPAddr.IPv6Type",
    "summary": "Struct SteamNetworkingIPAddr.IPv6Type Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct SteamNetworkingIPAddr.IPv6Type Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields Length public const int Length = 16 Field Value int"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamNetworkingIPAddr.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamNetworkingIPAddr.html",
    "title": "Struct SteamNetworkingIPAddr",
    "summary": "Struct SteamNetworkingIPAddr Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct SteamNetworkingIPAddr : IEquatable<SteamNetworkingIPAddr> Implements IEquatable<SteamNetworkingIPAddr> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors SteamNetworkingIPAddr(IPEndPoint) public SteamNetworkingIPAddr(IPEndPoint endpoint) Parameters endpoint IPEndPoint SteamNetworkingIPAddr(ReadOnlySpan<byte>, ushort) public SteamNetworkingIPAddr(ReadOnlySpan<byte> ipv6, ushort port) Parameters ipv6 ReadOnlySpan<byte> port ushort SteamNetworkingIPAddr(ushort) public SteamNetworkingIPAddr(ushort port1) Parameters port1 ushort SteamNetworkingIPAddr(uint, ushort) public SteamNetworkingIPAddr(uint ipv4, ushort port) Parameters ipv4 uint port ushort Fields IPv6 public SteamNetworkingIPAddr.IPv6Type IPv6 Field Value SteamNetworkingIPAddr.IPv6Type MaxString public const int MaxString = 48 Field Value int Port public ushort Port Field Value ushort Properties FakeIPType public readonly ESteamNetworkingFakeIPType FakeIPType { get; } Property Value ESteamNetworkingFakeIPType IPv4 public readonly uint IPv4 { get; } Property Value uint IsFakeIP public readonly bool IsFakeIP { get; } Property Value bool IsIPv4 public readonly bool IsIPv4 { get; } Property Value bool IsIPv6AllZeros public bool IsIPv6AllZeros { get; } Property Value bool IsLocalHost public readonly bool IsLocalHost { get; } Property Value bool Methods AsIPEndPoint() public readonly IPEndPoint AsIPEndPoint() Returns IPEndPoint Clear() public void Clear() Equals(SteamNetworkingIPAddr) Value-based equality. public bool Equals(SteamNetworkingIPAddr other) Parameters other SteamNetworkingIPAddr Returns bool Equals(object?) public override bool Equals(object? obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int SetIPv4(uint, ushort) public void SetIPv4(uint ipv4, ushort port) Parameters ipv4 uint port ushort SetIPv6(ReadOnlySpan<byte>, ushort) public void SetIPv6(ReadOnlySpan<byte> ipv6, ushort port) Parameters ipv6 ReadOnlySpan<byte> port ushort SetIPv6LocalHost(ushort) public void SetIPv6LocalHost(ushort port = 0) Parameters port ushort ToString() public override string ToString() Returns string ToString(bool) public readonly string ToString(bool bWithPort) Parameters bWithPort bool Returns string TryParseString(string, out SteamNetworkingIPAddr) public static bool TryParseString(string s, out SteamNetworkingIPAddr address) Parameters s string address SteamNetworkingIPAddr Returns bool Operators operator ==(SteamNetworkingIPAddr, SteamNetworkingIPAddr) Value-based equality. public static bool operator ==(SteamNetworkingIPAddr left, SteamNetworkingIPAddr right) Parameters left SteamNetworkingIPAddr right SteamNetworkingIPAddr Returns bool operator !=(SteamNetworkingIPAddr, SteamNetworkingIPAddr) Value-based equality. public static bool operator !=(SteamNetworkingIPAddr left, SteamNetworkingIPAddr right) Parameters left SteamNetworkingIPAddr right SteamNetworkingIPAddr Returns bool"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamNetworkingIdentity.UnknownRawStringType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamNetworkingIdentity.UnknownRawStringType.html",
    "title": "Struct SteamNetworkingIdentity.UnknownRawStringType",
    "summary": "Struct SteamNetworkingIdentity.UnknownRawStringType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct SteamNetworkingIdentity.UnknownRawStringType Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields Length public const int Length = 128 Field Value int Operators implicit operator string(UnknownRawStringType) public static implicit operator string(SteamNetworkingIdentity.UnknownRawStringType v) Parameters v SteamNetworkingIdentity.UnknownRawStringType Returns string implicit operator UnknownRawStringType(string) public static implicit operator SteamNetworkingIdentity.UnknownRawStringType(string s) Parameters s string Returns SteamNetworkingIdentity.UnknownRawStringType"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamNetworkingIdentity.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamNetworkingIdentity.html",
    "title": "Struct SteamNetworkingIdentity",
    "summary": "Struct SteamNetworkingIdentity Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct SteamNetworkingIdentity : IEquatable<SteamNetworkingIdentity> Implements IEquatable<SteamNetworkingIdentity> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors SteamNetworkingIdentity() public SteamNetworkingIdentity() Fields MaxGenericBytesCount public const int MaxGenericBytesCount = 32 Field Value int MaxGenericString public const int MaxGenericString = 32 Field Value int MaxString public const int MaxString = 128 Field Value int MaxXboxPairwiseID public const int MaxXboxPairwiseID = 33 Field Value int Size public int Size Field Value int Type public ESteamNetworkingIdentityType Type Field Value ESteamNetworkingIdentityType UnknownRawString public SteamNetworkingIdentity.UnknownRawStringType UnknownRawString Field Value SteamNetworkingIdentity.UnknownRawStringType Properties IsFakeIP public bool IsFakeIP { get; } Property Value bool IsLocalHost public bool IsLocalHost { get; } Property Value bool IsValid public readonly bool IsValid { get; } Property Value bool PSNID public ulong PSNID { get; set; } Property Value ulong SteamID public CSteamID SteamID { get; set; } Property Value CSteamID SteamID64 public ulong SteamID64 { get; set; } Property Value ulong Methods Clear() public void Clear() Equals(SteamNetworkingIdentity) Value-based equality. public readonly bool Equals(SteamNetworkingIdentity other) Parameters other SteamNetworkingIdentity Returns bool Equals(object?) public override readonly bool Equals(object? obj) Parameters obj object Returns bool GetFakeIPType() public ESteamNetworkingFakeIPType GetFakeIPType() Returns ESteamNetworkingFakeIPType GetGenericString() public string? GetGenericString() Returns string GetHashCode() public override readonly int GetHashCode() Returns int GetIPAddr() public SteamNetworkingIPAddr? GetIPAddr() Returns SteamNetworkingIPAddr? GetIPv4() public uint GetIPv4() Returns uint GetXboxPairwiseID() public string? GetXboxPairwiseID() Returns string SetGenericBytes(ReadOnlySpan<byte>) public bool SetGenericBytes(ReadOnlySpan<byte> data) Parameters data ReadOnlySpan<byte> Returns bool SetGenericString(string) public bool SetGenericString(string s) Parameters s string Returns bool SetIPAddr(SteamNetworkingIPAddr) public void SetIPAddr(SteamNetworkingIPAddr addr) Parameters addr SteamNetworkingIPAddr SetIPv4Addr(uint, ushort) public void SetIPv4Addr(uint nIPv4, ushort nPort) Parameters nIPv4 uint nPort ushort SetLocalHost() public void SetLocalHost() SetXboxPairwiseID(string) public bool SetXboxPairwiseID(string s) Parameters s string Returns bool ToString() public override string ToString() Returns string TryParseString(string, out SteamNetworkingIdentity) public static bool TryParseString(string s, out SteamNetworkingIdentity address) Parameters s string address SteamNetworkingIdentity Returns bool Operators operator ==(SteamNetworkingIdentity, SteamNetworkingIdentity) Value-based equality. public static bool operator ==(SteamNetworkingIdentity left, SteamNetworkingIdentity right) Parameters left SteamNetworkingIdentity right SteamNetworkingIdentity Returns bool operator !=(SteamNetworkingIdentity, SteamNetworkingIdentity) Value-based equality. public static bool operator !=(SteamNetworkingIdentity left, SteamNetworkingIdentity right) Parameters left SteamNetworkingIdentity right SteamNetworkingIdentity Returns bool"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamNetworkingMessage.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamNetworkingMessage.html",
    "title": "Struct SteamNetworkingMessage",
    "summary": "Struct SteamNetworkingMessage Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct SteamNetworkingMessage Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields m_conn For messages received on connections: what connection did this come from? For outgoing messages: what connection to send it to? Not used when using the ISteamNetworkingMessages interface public HSteamNetConnection m_conn Field Value HSteamNetConnection m_identityPeer For inbound messages: Who sent this to us? For outbound messages on connections: not used. For outbound messages on the ad-hoc ISteamNetworkingMessages interface: who should we send this to? public SteamNetworkingIdentity m_identityPeer Field Value SteamNetworkingIdentity m_idxLane For outbound messages, which lane to use? See ISteamNetworkingSockets::ConfigureConnectionLanes. For inbound messages, what lane was the message received on? public ushort m_idxLane Field Value ushort m_nChannel When using ISteamNetworkingMessages, the channel number the message was received on (Not used for messages sent or received on \"connections\") public int m_nChannel Field Value int m_nConnUserData For messages received on connections, this is the user data associated with the connection. This is usually the same as calling GetConnection() and then fetching the user data associated with that connection, but for the following subtle differences: - This user data will match the connection's user data at the time is captured at the time the message is returned by the API. If you subsequently change the userdata on the connection, this won't be updated. - This is an inline call, so it's much faster. - You might have closed the connection, so fetching the user data would not be possible. Not used when sending messages. public long m_nConnUserData Field Value long m_nFlags Bitmask of k_nSteamNetworkingSend_xxx flags. For received messages, only the k_nSteamNetworkingSend_Reliable bit is valid. For outbound messages, all bits are relevant public int m_nFlags Field Value int m_nMessageNumber Message number assigned by the sender. This is not used for outbound messages. Note that if multiple lanes are used, each lane has its own message numbers, which are assigned sequentially, so messages from different lanes will share the same numbers. public long m_nMessageNumber Field Value long m_nUserData Arbitrary user data that you can use when sending messages using ISteamNetworkingUtils::AllocateMessage and ISteamNetworkingSockets::SendMessage. (The callback you set in m_pfnFreeData might use this field.) Not used for received messages. public long m_nUserData Field Value long m_usecTimeReceived Local timestamp when the message was received Not used for outbound messages. public SteamNetworkingMicroseconds m_usecTimeReceived Field Value SteamNetworkingMicroseconds Properties Span Message payload (as a span). public ReadOnlySpan<byte> Span { get; } Property Value ReadOnlySpan<byte> Methods Release() public readonly void Release()"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamNetworkingMessagePtr.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamNetworkingMessagePtr.html",
    "title": "Struct SteamNetworkingMessagePtr",
    "summary": "Struct SteamNetworkingMessagePtr Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct SteamNetworkingMessagePtr : IDisposable Implements IDisposable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors SteamNetworkingMessagePtr() public SteamNetworkingMessagePtr() Properties Connection For messages received on connections: what connection did this come from, otherwise public HSteamNetConnection Connection { get; } Property Value HSteamNetConnection IsValid public readonly bool IsValid { get; } Property Value bool Span Message payload (as a span). public ReadOnlySpan<byte> Span { get; } Property Value ReadOnlySpan<byte> Value A managed reference to the value. public readonly ref readonly SteamNetworkingMessage Value { get; } Property Value SteamNetworkingMessage Methods Dispose() public void Dispose()"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamNetworkingMessagesSessionFailed.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamNetworkingMessagesSessionFailed.html",
    "title": "Struct SteamNetworkingMessagesSessionFailed",
    "summary": "Struct SteamNetworkingMessagesSessionFailed Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct SteamNetworkingMessagesSessionFailed : IGlobalCallback, ICallback Implements IGlobalCallback ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 1252 Field Value int Info public SteamNetConnectionInfo Info Field Value SteamNetConnectionInfo"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamNetworkingMessagesSessionRequest.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamNetworkingMessagesSessionRequest.html",
    "title": "Struct SteamNetworkingMessagesSessionRequest",
    "summary": "Struct SteamNetworkingMessagesSessionRequest Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct SteamNetworkingMessagesSessionRequest : IGlobalCallback, ICallback Implements IGlobalCallback ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 1251 Field Value int IdentityRemote public SteamNetworkingIdentity IdentityRemote Field Value SteamNetworkingIdentity"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamNetworkingMicroseconds.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamNetworkingMicroseconds.html",
    "title": "Struct SteamNetworkingMicroseconds",
    "summary": "Struct SteamNetworkingMicroseconds Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public readonly struct SteamNetworkingMicroseconds : IEquatable<SteamNetworkingMicroseconds>, IComparable<SteamNetworkingMicroseconds> Implements IEquatable<SteamNetworkingMicroseconds> IComparable<SteamNetworkingMicroseconds> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors SteamNetworkingMicroseconds(long) public SteamNetworkingMicroseconds(long id) Parameters id long Properties Id The underlying value. public long Id { get; } Property Value long Invalid The invalid id. public static long Invalid { get; } Property Value long IsValid True if not Invalid. public bool IsValid { get; } Property Value bool Methods CompareTo(SteamNetworkingMicroseconds) Value-based comparison. public int CompareTo(SteamNetworkingMicroseconds other) Parameters other SteamNetworkingMicroseconds Returns int Equals(SteamNetworkingMicroseconds) Value-based equality. public bool Equals(SteamNetworkingMicroseconds other) Parameters other SteamNetworkingMicroseconds Returns bool Equals(object?) public override bool Equals(object? obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() public override string ToString() Returns string Operators operator ==(SteamNetworkingMicroseconds, SteamNetworkingMicroseconds) Value-based equality. public static bool operator ==(SteamNetworkingMicroseconds left, SteamNetworkingMicroseconds right) Parameters left SteamNetworkingMicroseconds right SteamNetworkingMicroseconds Returns bool operator >(SteamNetworkingMicroseconds, SteamNetworkingMicroseconds) Value-based comparison. public static bool operator >(SteamNetworkingMicroseconds left, SteamNetworkingMicroseconds right) Parameters left SteamNetworkingMicroseconds right SteamNetworkingMicroseconds Returns bool operator >=(SteamNetworkingMicroseconds, SteamNetworkingMicroseconds) Value-based comparison. public static bool operator >=(SteamNetworkingMicroseconds left, SteamNetworkingMicroseconds right) Parameters left SteamNetworkingMicroseconds right SteamNetworkingMicroseconds Returns bool operator !=(SteamNetworkingMicroseconds, SteamNetworkingMicroseconds) Value-based equality. public static bool operator !=(SteamNetworkingMicroseconds left, SteamNetworkingMicroseconds right) Parameters left SteamNetworkingMicroseconds right SteamNetworkingMicroseconds Returns bool operator <(SteamNetworkingMicroseconds, SteamNetworkingMicroseconds) Value-based comparison. public static bool operator <(SteamNetworkingMicroseconds left, SteamNetworkingMicroseconds right) Parameters left SteamNetworkingMicroseconds right SteamNetworkingMicroseconds Returns bool operator <=(SteamNetworkingMicroseconds, SteamNetworkingMicroseconds) Value-based comparison. public static bool operator <=(SteamNetworkingMicroseconds left, SteamNetworkingMicroseconds right) Parameters left SteamNetworkingMicroseconds right SteamNetworkingMicroseconds Returns bool"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamNetworkingPOPID.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamNetworkingPOPID.html",
    "title": "Struct SteamNetworkingPOPID",
    "summary": "Struct SteamNetworkingPOPID Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public readonly struct SteamNetworkingPOPID : IEquatable<SteamNetworkingPOPID>, IComparable<SteamNetworkingPOPID> Implements IEquatable<SteamNetworkingPOPID> IComparable<SteamNetworkingPOPID> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors SteamNetworkingPOPID(uint) public SteamNetworkingPOPID(uint id) Parameters id uint Properties Id The underlying value. public uint Id { get; } Property Value uint Invalid The invalid id. public static uint Invalid { get; } Property Value uint IsValid True if not Invalid. public bool IsValid { get; } Property Value bool Methods CompareTo(SteamNetworkingPOPID) Value-based comparison. public int CompareTo(SteamNetworkingPOPID other) Parameters other SteamNetworkingPOPID Returns int Equals(SteamNetworkingPOPID) Value-based equality. public bool Equals(SteamNetworkingPOPID other) Parameters other SteamNetworkingPOPID Returns bool Equals(object?) public override bool Equals(object? obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() public override string ToString() Returns string Operators operator ==(SteamNetworkingPOPID, SteamNetworkingPOPID) Value-based equality. public static bool operator ==(SteamNetworkingPOPID left, SteamNetworkingPOPID right) Parameters left SteamNetworkingPOPID right SteamNetworkingPOPID Returns bool operator >(SteamNetworkingPOPID, SteamNetworkingPOPID) Value-based comparison. public static bool operator >(SteamNetworkingPOPID left, SteamNetworkingPOPID right) Parameters left SteamNetworkingPOPID right SteamNetworkingPOPID Returns bool operator >=(SteamNetworkingPOPID, SteamNetworkingPOPID) Value-based comparison. public static bool operator >=(SteamNetworkingPOPID left, SteamNetworkingPOPID right) Parameters left SteamNetworkingPOPID right SteamNetworkingPOPID Returns bool operator !=(SteamNetworkingPOPID, SteamNetworkingPOPID) Value-based equality. public static bool operator !=(SteamNetworkingPOPID left, SteamNetworkingPOPID right) Parameters left SteamNetworkingPOPID right SteamNetworkingPOPID Returns bool operator <(SteamNetworkingPOPID, SteamNetworkingPOPID) Value-based comparison. public static bool operator <(SteamNetworkingPOPID left, SteamNetworkingPOPID right) Parameters left SteamNetworkingPOPID right SteamNetworkingPOPID Returns bool operator <=(SteamNetworkingPOPID, SteamNetworkingPOPID) Value-based comparison. public static bool operator <=(SteamNetworkingPOPID left, SteamNetworkingPOPID right) Parameters left SteamNetworkingPOPID right SteamNetworkingPOPID Returns bool"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamParamStringArray.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamParamStringArray.html",
    "title": "Struct SteamParamStringArray",
    "summary": "Struct SteamParamStringArray Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll [NativeMarshalling(typeof(SteamParamStringArray.SteamParamStringArrayMarshaller))] public readonly struct SteamParamStringArray Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors SteamParamStringArray(ReadOnlyMemory<string>) public SteamParamStringArray(ReadOnlyMemory<string> values) Parameters values ReadOnlyMemory<string> Properties Length public int Length { get; } Property Value int Operators implicit operator SteamParamStringArray(ReadOnlyMemory<string>) public static implicit operator SteamParamStringArray(ReadOnlyMemory<string> values) Parameters values ReadOnlyMemory<string> Returns SteamParamStringArray"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamParentalSettingsChanged.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamParentalSettingsChanged.html",
    "title": "Struct SteamParentalSettingsChanged",
    "summary": "Struct SteamParentalSettingsChanged Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct SteamParentalSettingsChanged : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 5001 Field Value int"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamPartyBeaconLocation.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamPartyBeaconLocation.html",
    "title": "Struct SteamPartyBeaconLocation",
    "summary": "Struct SteamPartyBeaconLocation Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct SteamPartyBeaconLocation Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields LocationID public ulong LocationID Field Value ulong Type public ESteamPartyBeaconLocationType Type Field Value ESteamPartyBeaconLocationType"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamRelayNetworkStatus.DebugMsgType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamRelayNetworkStatus.DebugMsgType.html",
    "title": "Struct SteamRelayNetworkStatus.DebugMsgType",
    "summary": "Struct SteamRelayNetworkStatus.DebugMsgType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct SteamRelayNetworkStatus.DebugMsgType Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields Length public const int Length = 256 Field Value int Operators implicit operator string(DebugMsgType) public static implicit operator string(SteamRelayNetworkStatus.DebugMsgType v) Parameters v SteamRelayNetworkStatus.DebugMsgType Returns string implicit operator DebugMsgType(string) public static implicit operator SteamRelayNetworkStatus.DebugMsgType(string s) Parameters s string Returns SteamRelayNetworkStatus.DebugMsgType"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamRelayNetworkStatus.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamRelayNetworkStatus.html",
    "title": "Struct SteamRelayNetworkStatus",
    "summary": "Struct SteamRelayNetworkStatus Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct SteamRelayNetworkStatus : IGlobalCallback, ICallback Implements IGlobalCallback ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields Avail public ESteamNetworkingAvailability Avail Field Value ESteamNetworkingAvailability AvailAnyRelay public ESteamNetworkingAvailability AvailAnyRelay Field Value ESteamNetworkingAvailability AvailNetworkConfig public ESteamNetworkingAvailability AvailNetworkConfig Field Value ESteamNetworkingAvailability CallbackId public const int CallbackId = 1281 Field Value int DebugMsg public SteamRelayNetworkStatus.DebugMsgType DebugMsg Field Value SteamRelayNetworkStatus.DebugMsgType PingMeasurementInProgress public int PingMeasurementInProgress Field Value int"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamRemotePlaySessionConnected.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamRemotePlaySessionConnected.html",
    "title": "Struct SteamRemotePlaySessionConnected",
    "summary": "Struct SteamRemotePlaySessionConnected Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct SteamRemotePlaySessionConnected : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 5701 Field Value int SessionID public RemotePlaySessionID SessionID Field Value RemotePlaySessionID"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamRemotePlaySessionDisconnected.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamRemotePlaySessionDisconnected.html",
    "title": "Struct SteamRemotePlaySessionDisconnected",
    "summary": "Struct SteamRemotePlaySessionDisconnected Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct SteamRemotePlaySessionDisconnected : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 5702 Field Value int SessionID public RemotePlaySessionID SessionID Field Value RemotePlaySessionID"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamRemotePlayTogetherGuestInvite.ConnectURLType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamRemotePlayTogetherGuestInvite.ConnectURLType.html",
    "title": "Struct SteamRemotePlayTogetherGuestInvite.ConnectURLType",
    "summary": "Struct SteamRemotePlayTogetherGuestInvite.ConnectURLType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct SteamRemotePlayTogetherGuestInvite.ConnectURLType Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields Length public const int Length = 1024 Field Value int Operators implicit operator string(ConnectURLType) public static implicit operator string(SteamRemotePlayTogetherGuestInvite.ConnectURLType v) Parameters v SteamRemotePlayTogetherGuestInvite.ConnectURLType Returns string implicit operator ConnectURLType(string) public static implicit operator SteamRemotePlayTogetherGuestInvite.ConnectURLType(string s) Parameters s string Returns SteamRemotePlayTogetherGuestInvite.ConnectURLType"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamRemotePlayTogetherGuestInvite.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamRemotePlayTogetherGuestInvite.html",
    "title": "Struct SteamRemotePlayTogetherGuestInvite",
    "summary": "Struct SteamRemotePlayTogetherGuestInvite Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct SteamRemotePlayTogetherGuestInvite : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 5703 Field Value int ConnectURL public SteamRemotePlayTogetherGuestInvite.ConnectURLType ConnectURL Field Value SteamRemotePlayTogetherGuestInvite.ConnectURLType"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamServerConnectFailure.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamServerConnectFailure.html",
    "title": "Struct SteamServerConnectFailure",
    "summary": "Struct SteamServerConnectFailure Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct SteamServerConnectFailure : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 102 Field Value int Result public EResult Result Field Value EResult Properties StillRetrying public bool StillRetrying { get; set; } Property Value bool"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamServersConnected.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamServersConnected.html",
    "title": "Struct SteamServersConnected",
    "summary": "Struct SteamServersConnected Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct SteamServersConnected : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 101 Field Value int"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamServersDisconnected.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamServersDisconnected.html",
    "title": "Struct SteamServersDisconnected",
    "summary": "Struct SteamServersDisconnected Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct SteamServersDisconnected : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 103 Field Value int Result public EResult Result Field Value EResult"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamShutdown.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamShutdown.html",
    "title": "Struct SteamShutdown",
    "summary": "Struct SteamShutdown Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct SteamShutdown : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 704 Field Value int"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamTimelineEventRecordingExists.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamTimelineEventRecordingExists.html",
    "title": "Struct SteamTimelineEventRecordingExists",
    "summary": "Struct SteamTimelineEventRecordingExists Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct SteamTimelineEventRecordingExists : ICallResult Implements ICallResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 6002 Field Value int EventID public ulong EventID Field Value ulong Properties RecordingExists public bool RecordingExists { get; set; } Property Value bool"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamTimelineGamePhaseRecordingExists.PhaseIDType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamTimelineGamePhaseRecordingExists.PhaseIDType.html",
    "title": "Struct SteamTimelineGamePhaseRecordingExists.PhaseIDType",
    "summary": "Struct SteamTimelineGamePhaseRecordingExists.PhaseIDType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct SteamTimelineGamePhaseRecordingExists.PhaseIDType Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields Length public const int Length = 64 Field Value int Operators implicit operator string(PhaseIDType) public static implicit operator string(SteamTimelineGamePhaseRecordingExists.PhaseIDType v) Parameters v SteamTimelineGamePhaseRecordingExists.PhaseIDType Returns string implicit operator PhaseIDType(string) public static implicit operator SteamTimelineGamePhaseRecordingExists.PhaseIDType(string s) Parameters s string Returns SteamTimelineGamePhaseRecordingExists.PhaseIDType"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamTimelineGamePhaseRecordingExists.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamTimelineGamePhaseRecordingExists.html",
    "title": "Struct SteamTimelineGamePhaseRecordingExists",
    "summary": "Struct SteamTimelineGamePhaseRecordingExists Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct SteamTimelineGamePhaseRecordingExists : ICallResult Implements ICallResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 6001 Field Value int ClipCount public uint ClipCount Field Value uint LongestClipMS public ulong LongestClipMS Field Value ulong PhaseID public SteamTimelineGamePhaseRecordingExists.PhaseIDType PhaseID Field Value SteamTimelineGamePhaseRecordingExists.PhaseIDType RecordingMS public ulong RecordingMS Field Value ulong ScreenshotCount public uint ScreenshotCount Field Value uint"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamUGCDetails.DescriptionType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamUGCDetails.DescriptionType.html",
    "title": "Struct SteamUGCDetails.DescriptionType",
    "summary": "Struct SteamUGCDetails.DescriptionType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct SteamUGCDetails.DescriptionType Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields Length public const int Length = 8000 Field Value int Operators implicit operator string(DescriptionType) public static implicit operator string(SteamUGCDetails.DescriptionType v) Parameters v SteamUGCDetails.DescriptionType Returns string implicit operator DescriptionType(string) public static implicit operator SteamUGCDetails.DescriptionType(string s) Parameters s string Returns SteamUGCDetails.DescriptionType"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamUGCDetails.FileNameType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamUGCDetails.FileNameType.html",
    "title": "Struct SteamUGCDetails.FileNameType",
    "summary": "Struct SteamUGCDetails.FileNameType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct SteamUGCDetails.FileNameType Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields Length public const int Length = 260 Field Value int Operators implicit operator string(FileNameType) public static implicit operator string(SteamUGCDetails.FileNameType v) Parameters v SteamUGCDetails.FileNameType Returns string implicit operator FileNameType(string) public static implicit operator SteamUGCDetails.FileNameType(string s) Parameters s string Returns SteamUGCDetails.FileNameType"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamUGCDetails.TagsType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamUGCDetails.TagsType.html",
    "title": "Struct SteamUGCDetails.TagsType",
    "summary": "Struct SteamUGCDetails.TagsType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct SteamUGCDetails.TagsType Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields Length public const int Length = 1025 Field Value int Operators implicit operator string(TagsType) public static implicit operator string(SteamUGCDetails.TagsType v) Parameters v SteamUGCDetails.TagsType Returns string implicit operator TagsType(string) public static implicit operator SteamUGCDetails.TagsType(string s) Parameters s string Returns SteamUGCDetails.TagsType"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamUGCDetails.TitleType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamUGCDetails.TitleType.html",
    "title": "Struct SteamUGCDetails.TitleType",
    "summary": "Struct SteamUGCDetails.TitleType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct SteamUGCDetails.TitleType Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields Length public const int Length = 129 Field Value int Operators implicit operator string(TitleType) public static implicit operator string(SteamUGCDetails.TitleType v) Parameters v SteamUGCDetails.TitleType Returns string implicit operator TitleType(string) public static implicit operator SteamUGCDetails.TitleType(string s) Parameters s string Returns SteamUGCDetails.TitleType"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamUGCDetails.URLType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamUGCDetails.URLType.html",
    "title": "Struct SteamUGCDetails.URLType",
    "summary": "Struct SteamUGCDetails.URLType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct SteamUGCDetails.URLType Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields Length public const int Length = 256 Field Value int Operators implicit operator string(URLType) public static implicit operator string(SteamUGCDetails.URLType v) Parameters v SteamUGCDetails.URLType Returns string implicit operator URLType(string) public static implicit operator SteamUGCDetails.URLType(string s) Parameters s string Returns SteamUGCDetails.URLType"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamUGCDetails.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamUGCDetails.html",
    "title": "Struct SteamUGCDetails",
    "summary": "Struct SteamUGCDetails Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct SteamUGCDetails Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields ConsumerAppID public AppId ConsumerAppID Field Value AppId CreatorAppID public AppId CreatorAppID Field Value AppId Description public SteamUGCDetails.DescriptionType Description Field Value SteamUGCDetails.DescriptionType File public UGCHandle File Field Value UGCHandle FileName public SteamUGCDetails.FileNameType FileName Field Value SteamUGCDetails.FileNameType FileSize public int FileSize Field Value int FileType public EWorkshopFileType FileType Field Value EWorkshopFileType NumChildren public uint NumChildren Field Value uint PreviewFile public UGCHandle PreviewFile Field Value UGCHandle PreviewFileSize public int PreviewFileSize Field Value int PublishedFileId public PublishedFileId PublishedFileId Field Value PublishedFileId Result public EResult Result Field Value EResult Score public float Score Field Value float SteamIDOwner public ulong SteamIDOwner Field Value ulong Tags public SteamUGCDetails.TagsType Tags Field Value SteamUGCDetails.TagsType TimeAddedToUserList public uint TimeAddedToUserList Field Value uint TimeCreated public uint TimeCreated Field Value uint TimeUpdated public uint TimeUpdated Field Value uint Title public SteamUGCDetails.TitleType Title Field Value SteamUGCDetails.TitleType TotalFilesSize public ulong TotalFilesSize Field Value ulong URL public SteamUGCDetails.URLType URL Field Value SteamUGCDetails.URLType Visibility public ERemoteStoragePublishedFileVisibility Visibility Field Value ERemoteStoragePublishedFileVisibility VotesDown public uint VotesDown Field Value uint VotesUp public uint VotesUp Field Value uint Properties AcceptedForUse public bool AcceptedForUse { get; set; } Property Value bool Banned public bool Banned { get; set; } Property Value bool TagsTruncated public bool TagsTruncated { get; set; } Property Value bool"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamUGCQueryCompleted.NextCursorType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamUGCQueryCompleted.NextCursorType.html",
    "title": "Struct SteamUGCQueryCompleted.NextCursorType",
    "summary": "Struct SteamUGCQueryCompleted.NextCursorType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct SteamUGCQueryCompleted.NextCursorType Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields Length public const int Length = 256 Field Value int Operators implicit operator string(NextCursorType) public static implicit operator string(SteamUGCQueryCompleted.NextCursorType v) Parameters v SteamUGCQueryCompleted.NextCursorType Returns string implicit operator NextCursorType(string) public static implicit operator SteamUGCQueryCompleted.NextCursorType(string s) Parameters s string Returns SteamUGCQueryCompleted.NextCursorType"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamUGCQueryCompleted.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamUGCQueryCompleted.html",
    "title": "Struct SteamUGCQueryCompleted",
    "summary": "Struct SteamUGCQueryCompleted Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct SteamUGCQueryCompleted : ICallResult Implements ICallResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 3401 Field Value int Handle public UGCQueryHandle Handle Field Value UGCQueryHandle NextCursor public SteamUGCQueryCompleted.NextCursorType NextCursor Field Value SteamUGCQueryCompleted.NextCursorType NumResultsReturned public uint NumResultsReturned Field Value uint Result public EResult Result Field Value EResult TotalMatchingResults public uint TotalMatchingResults Field Value uint Properties CachedData public bool CachedData { get; set; } Property Value bool"
  },
  "api/MarymoorStudios.Core.Steamworks.SteamUGCRequestUGCDetailsResult.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SteamUGCRequestUGCDetailsResult.html",
    "title": "Struct SteamUGCRequestUGCDetailsResult",
    "summary": "Struct SteamUGCRequestUGCDetailsResult Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct SteamUGCRequestUGCDetailsResult : ICallResult Implements ICallResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 3402 Field Value int Details public SteamUGCDetails Details Field Value SteamUGCDetails Properties CachedData public bool CachedData { get; set; } Property Value bool"
  },
  "api/MarymoorStudios.Core.Steamworks.StopPlaytimeTrackingResult.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.StopPlaytimeTrackingResult.html",
    "title": "Struct StopPlaytimeTrackingResult",
    "summary": "Struct StopPlaytimeTrackingResult Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct StopPlaytimeTrackingResult : ICallResult Implements ICallResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 3411 Field Value int Result public EResult Result Field Value EResult"
  },
  "api/MarymoorStudios.Core.Steamworks.StoreAuthURLResponse.URLType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.StoreAuthURLResponse.URLType.html",
    "title": "Struct StoreAuthURLResponse.URLType",
    "summary": "Struct StoreAuthURLResponse.URLType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct StoreAuthURLResponse.URLType Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields Length public const int Length = 512 Field Value int Operators implicit operator string(URLType) public static implicit operator string(StoreAuthURLResponse.URLType v) Parameters v StoreAuthURLResponse.URLType Returns string implicit operator URLType(string) public static implicit operator StoreAuthURLResponse.URLType(string s) Parameters s string Returns StoreAuthURLResponse.URLType"
  },
  "api/MarymoorStudios.Core.Steamworks.StoreAuthURLResponse.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.StoreAuthURLResponse.html",
    "title": "Struct StoreAuthURLResponse",
    "summary": "Struct StoreAuthURLResponse Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct StoreAuthURLResponse : ICallResult Implements ICallResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 165 Field Value int URL public StoreAuthURLResponse.URLType URL Field Value StoreAuthURLResponse.URLType"
  },
  "api/MarymoorStudios.Core.Steamworks.SubmitItemUpdateResult.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SubmitItemUpdateResult.html",
    "title": "Struct SubmitItemUpdateResult",
    "summary": "Struct SubmitItemUpdateResult Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct SubmitItemUpdateResult : ICallResult Implements ICallResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 3404 Field Value int PublishedFileId public PublishedFileId PublishedFileId Field Value PublishedFileId Result public EResult Result Field Value EResult Properties UserNeedsToAcceptWorkshopLegalAgreement public bool UserNeedsToAcceptWorkshopLegalAgreement { get; set; } Property Value bool"
  },
  "api/MarymoorStudios.Core.Steamworks.SubmitPlayerResultResultCallback.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.SubmitPlayerResultResultCallback.html",
    "title": "Struct SubmitPlayerResultResultCallback",
    "summary": "Struct SubmitPlayerResultResultCallback Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct SubmitPlayerResultResultCallback : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 5214 Field Value int Result public EResult Result Field Value EResult SteamIDPlayer public CSteamID SteamIDPlayer Field Value CSteamID UniqueGameID public ulong UniqueGameID Field Value ulong"
  },
  "api/MarymoorStudios.Core.Steamworks.TimedTrialStatus.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.TimedTrialStatus.html",
    "title": "Struct TimedTrialStatus",
    "summary": "Struct TimedTrialStatus Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct TimedTrialStatus : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields AppId public AppId AppId Field Value AppId CallbackId public const int CallbackId = 1030 Field Value int SecondsAllowed public uint SecondsAllowed Field Value uint SecondsPlayed public uint SecondsPlayed Field Value uint Properties IsOffline public bool IsOffline { get; set; } Property Value bool"
  },
  "api/MarymoorStudios.Core.Steamworks.TimelineEventHandle.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.TimelineEventHandle.html",
    "title": "Struct TimelineEventHandle",
    "summary": "Struct TimelineEventHandle Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public readonly struct TimelineEventHandle : IEquatable<TimelineEventHandle>, IComparable<TimelineEventHandle> Implements IEquatable<TimelineEventHandle> IComparable<TimelineEventHandle> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors TimelineEventHandle(ulong) public TimelineEventHandle(ulong id) Parameters id ulong Properties Id The underlying value. public ulong Id { get; } Property Value ulong Invalid The invalid id. public static ulong Invalid { get; } Property Value ulong IsValid True if not Invalid. public bool IsValid { get; } Property Value bool Methods CompareTo(TimelineEventHandle) Value-based comparison. public int CompareTo(TimelineEventHandle other) Parameters other TimelineEventHandle Returns int Equals(TimelineEventHandle) Value-based equality. public bool Equals(TimelineEventHandle other) Parameters other TimelineEventHandle Returns bool Equals(object?) public override bool Equals(object? obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() public override string ToString() Returns string Operators operator ==(TimelineEventHandle, TimelineEventHandle) Value-based equality. public static bool operator ==(TimelineEventHandle left, TimelineEventHandle right) Parameters left TimelineEventHandle right TimelineEventHandle Returns bool operator >(TimelineEventHandle, TimelineEventHandle) Value-based comparison. public static bool operator >(TimelineEventHandle left, TimelineEventHandle right) Parameters left TimelineEventHandle right TimelineEventHandle Returns bool operator >=(TimelineEventHandle, TimelineEventHandle) Value-based comparison. public static bool operator >=(TimelineEventHandle left, TimelineEventHandle right) Parameters left TimelineEventHandle right TimelineEventHandle Returns bool operator !=(TimelineEventHandle, TimelineEventHandle) Value-based equality. public static bool operator !=(TimelineEventHandle left, TimelineEventHandle right) Parameters left TimelineEventHandle right TimelineEventHandle Returns bool operator <(TimelineEventHandle, TimelineEventHandle) Value-based comparison. public static bool operator <(TimelineEventHandle left, TimelineEventHandle right) Parameters left TimelineEventHandle right TimelineEventHandle Returns bool operator <=(TimelineEventHandle, TimelineEventHandle) Value-based comparison. public static bool operator <=(TimelineEventHandle left, TimelineEventHandle right) Parameters left TimelineEventHandle right TimelineEventHandle Returns bool"
  },
  "api/MarymoorStudios.Core.Steamworks.UGCFileWriteStreamHandle.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.UGCFileWriteStreamHandle.html",
    "title": "Struct UGCFileWriteStreamHandle",
    "summary": "Struct UGCFileWriteStreamHandle Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public readonly struct UGCFileWriteStreamHandle : IEquatable<UGCFileWriteStreamHandle>, IComparable<UGCFileWriteStreamHandle> Implements IEquatable<UGCFileWriteStreamHandle> IComparable<UGCFileWriteStreamHandle> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors UGCFileWriteStreamHandle(ulong) public UGCFileWriteStreamHandle(ulong id) Parameters id ulong Properties Id The underlying value. public ulong Id { get; } Property Value ulong Invalid The invalid id. public static ulong Invalid { get; } Property Value ulong IsValid True if not Invalid. public bool IsValid { get; } Property Value bool Methods CompareTo(UGCFileWriteStreamHandle) Value-based comparison. public int CompareTo(UGCFileWriteStreamHandle other) Parameters other UGCFileWriteStreamHandle Returns int Equals(UGCFileWriteStreamHandle) Value-based equality. public bool Equals(UGCFileWriteStreamHandle other) Parameters other UGCFileWriteStreamHandle Returns bool Equals(object?) public override bool Equals(object? obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() public override string ToString() Returns string Operators operator ==(UGCFileWriteStreamHandle, UGCFileWriteStreamHandle) Value-based equality. public static bool operator ==(UGCFileWriteStreamHandle left, UGCFileWriteStreamHandle right) Parameters left UGCFileWriteStreamHandle right UGCFileWriteStreamHandle Returns bool operator >(UGCFileWriteStreamHandle, UGCFileWriteStreamHandle) Value-based comparison. public static bool operator >(UGCFileWriteStreamHandle left, UGCFileWriteStreamHandle right) Parameters left UGCFileWriteStreamHandle right UGCFileWriteStreamHandle Returns bool operator >=(UGCFileWriteStreamHandle, UGCFileWriteStreamHandle) Value-based comparison. public static bool operator >=(UGCFileWriteStreamHandle left, UGCFileWriteStreamHandle right) Parameters left UGCFileWriteStreamHandle right UGCFileWriteStreamHandle Returns bool operator !=(UGCFileWriteStreamHandle, UGCFileWriteStreamHandle) Value-based equality. public static bool operator !=(UGCFileWriteStreamHandle left, UGCFileWriteStreamHandle right) Parameters left UGCFileWriteStreamHandle right UGCFileWriteStreamHandle Returns bool operator <(UGCFileWriteStreamHandle, UGCFileWriteStreamHandle) Value-based comparison. public static bool operator <(UGCFileWriteStreamHandle left, UGCFileWriteStreamHandle right) Parameters left UGCFileWriteStreamHandle right UGCFileWriteStreamHandle Returns bool operator <=(UGCFileWriteStreamHandle, UGCFileWriteStreamHandle) Value-based comparison. public static bool operator <=(UGCFileWriteStreamHandle left, UGCFileWriteStreamHandle right) Parameters left UGCFileWriteStreamHandle right UGCFileWriteStreamHandle Returns bool"
  },
  "api/MarymoorStudios.Core.Steamworks.UGCHandle.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.UGCHandle.html",
    "title": "Struct UGCHandle",
    "summary": "Struct UGCHandle Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public readonly struct UGCHandle : IEquatable<UGCHandle>, IComparable<UGCHandle> Implements IEquatable<UGCHandle> IComparable<UGCHandle> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors UGCHandle(ulong) public UGCHandle(ulong id) Parameters id ulong Properties Id The underlying value. public ulong Id { get; } Property Value ulong Invalid The invalid id. public static ulong Invalid { get; } Property Value ulong IsValid True if not Invalid. public bool IsValid { get; } Property Value bool Methods CompareTo(UGCHandle) Value-based comparison. public int CompareTo(UGCHandle other) Parameters other UGCHandle Returns int Equals(UGCHandle) Value-based equality. public bool Equals(UGCHandle other) Parameters other UGCHandle Returns bool Equals(object?) public override bool Equals(object? obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() public override string ToString() Returns string Operators operator ==(UGCHandle, UGCHandle) Value-based equality. public static bool operator ==(UGCHandle left, UGCHandle right) Parameters left UGCHandle right UGCHandle Returns bool operator >(UGCHandle, UGCHandle) Value-based comparison. public static bool operator >(UGCHandle left, UGCHandle right) Parameters left UGCHandle right UGCHandle Returns bool operator >=(UGCHandle, UGCHandle) Value-based comparison. public static bool operator >=(UGCHandle left, UGCHandle right) Parameters left UGCHandle right UGCHandle Returns bool operator !=(UGCHandle, UGCHandle) Value-based equality. public static bool operator !=(UGCHandle left, UGCHandle right) Parameters left UGCHandle right UGCHandle Returns bool operator <(UGCHandle, UGCHandle) Value-based comparison. public static bool operator <(UGCHandle left, UGCHandle right) Parameters left UGCHandle right UGCHandle Returns bool operator <=(UGCHandle, UGCHandle) Value-based comparison. public static bool operator <=(UGCHandle left, UGCHandle right) Parameters left UGCHandle right UGCHandle Returns bool"
  },
  "api/MarymoorStudios.Core.Steamworks.UGCQueryHandle.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.UGCQueryHandle.html",
    "title": "Struct UGCQueryHandle",
    "summary": "Struct UGCQueryHandle Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public readonly struct UGCQueryHandle : IEquatable<UGCQueryHandle>, IComparable<UGCQueryHandle> Implements IEquatable<UGCQueryHandle> IComparable<UGCQueryHandle> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors UGCQueryHandle(ulong) public UGCQueryHandle(ulong id) Parameters id ulong Properties Id The underlying value. public ulong Id { get; } Property Value ulong Invalid The invalid id. public static ulong Invalid { get; } Property Value ulong IsValid True if not Invalid. public bool IsValid { get; } Property Value bool Methods CompareTo(UGCQueryHandle) Value-based comparison. public int CompareTo(UGCQueryHandle other) Parameters other UGCQueryHandle Returns int Equals(UGCQueryHandle) Value-based equality. public bool Equals(UGCQueryHandle other) Parameters other UGCQueryHandle Returns bool Equals(object?) public override bool Equals(object? obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() public override string ToString() Returns string Operators operator ==(UGCQueryHandle, UGCQueryHandle) Value-based equality. public static bool operator ==(UGCQueryHandle left, UGCQueryHandle right) Parameters left UGCQueryHandle right UGCQueryHandle Returns bool operator >(UGCQueryHandle, UGCQueryHandle) Value-based comparison. public static bool operator >(UGCQueryHandle left, UGCQueryHandle right) Parameters left UGCQueryHandle right UGCQueryHandle Returns bool operator >=(UGCQueryHandle, UGCQueryHandle) Value-based comparison. public static bool operator >=(UGCQueryHandle left, UGCQueryHandle right) Parameters left UGCQueryHandle right UGCQueryHandle Returns bool operator !=(UGCQueryHandle, UGCQueryHandle) Value-based equality. public static bool operator !=(UGCQueryHandle left, UGCQueryHandle right) Parameters left UGCQueryHandle right UGCQueryHandle Returns bool operator <(UGCQueryHandle, UGCQueryHandle) Value-based comparison. public static bool operator <(UGCQueryHandle left, UGCQueryHandle right) Parameters left UGCQueryHandle right UGCQueryHandle Returns bool operator <=(UGCQueryHandle, UGCQueryHandle) Value-based comparison. public static bool operator <=(UGCQueryHandle left, UGCQueryHandle right) Parameters left UGCQueryHandle right UGCQueryHandle Returns bool"
  },
  "api/MarymoorStudios.Core.Steamworks.UGCUpdateHandle.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.UGCUpdateHandle.html",
    "title": "Struct UGCUpdateHandle",
    "summary": "Struct UGCUpdateHandle Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public readonly struct UGCUpdateHandle : IEquatable<UGCUpdateHandle>, IComparable<UGCUpdateHandle> Implements IEquatable<UGCUpdateHandle> IComparable<UGCUpdateHandle> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors UGCUpdateHandle(ulong) public UGCUpdateHandle(ulong id) Parameters id ulong Properties Id The underlying value. public ulong Id { get; } Property Value ulong Invalid The invalid id. public static ulong Invalid { get; } Property Value ulong IsValid True if not Invalid. public bool IsValid { get; } Property Value bool Methods CompareTo(UGCUpdateHandle) Value-based comparison. public int CompareTo(UGCUpdateHandle other) Parameters other UGCUpdateHandle Returns int Equals(UGCUpdateHandle) Value-based equality. public bool Equals(UGCUpdateHandle other) Parameters other UGCUpdateHandle Returns bool Equals(object?) public override bool Equals(object? obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() public override string ToString() Returns string Operators operator ==(UGCUpdateHandle, UGCUpdateHandle) Value-based equality. public static bool operator ==(UGCUpdateHandle left, UGCUpdateHandle right) Parameters left UGCUpdateHandle right UGCUpdateHandle Returns bool operator >(UGCUpdateHandle, UGCUpdateHandle) Value-based comparison. public static bool operator >(UGCUpdateHandle left, UGCUpdateHandle right) Parameters left UGCUpdateHandle right UGCUpdateHandle Returns bool operator >=(UGCUpdateHandle, UGCUpdateHandle) Value-based comparison. public static bool operator >=(UGCUpdateHandle left, UGCUpdateHandle right) Parameters left UGCUpdateHandle right UGCUpdateHandle Returns bool operator !=(UGCUpdateHandle, UGCUpdateHandle) Value-based equality. public static bool operator !=(UGCUpdateHandle left, UGCUpdateHandle right) Parameters left UGCUpdateHandle right UGCUpdateHandle Returns bool operator <(UGCUpdateHandle, UGCUpdateHandle) Value-based comparison. public static bool operator <(UGCUpdateHandle left, UGCUpdateHandle right) Parameters left UGCUpdateHandle right UGCUpdateHandle Returns bool operator <=(UGCUpdateHandle, UGCUpdateHandle) Value-based comparison. public static bool operator <=(UGCUpdateHandle left, UGCUpdateHandle right) Parameters left UGCUpdateHandle right UGCUpdateHandle Returns bool"
  },
  "api/MarymoorStudios.Core.Steamworks.UnreadChatMessagesChanged.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.UnreadChatMessagesChanged.html",
    "title": "Struct UnreadChatMessagesChanged",
    "summary": "Struct UnreadChatMessagesChanged Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct UnreadChatMessagesChanged : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 348 Field Value int"
  },
  "api/MarymoorStudios.Core.Steamworks.UserAchievementIconFetched.AchievementNameType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.UserAchievementIconFetched.AchievementNameType.html",
    "title": "Struct UserAchievementIconFetched.AchievementNameType",
    "summary": "Struct UserAchievementIconFetched.AchievementNameType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct UserAchievementIconFetched.AchievementNameType Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields Length public const int Length = 128 Field Value int Operators implicit operator string(AchievementNameType) public static implicit operator string(UserAchievementIconFetched.AchievementNameType v) Parameters v UserAchievementIconFetched.AchievementNameType Returns string implicit operator AchievementNameType(string) public static implicit operator UserAchievementIconFetched.AchievementNameType(string s) Parameters s string Returns UserAchievementIconFetched.AchievementNameType"
  },
  "api/MarymoorStudios.Core.Steamworks.UserAchievementIconFetched.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.UserAchievementIconFetched.html",
    "title": "Struct UserAchievementIconFetched",
    "summary": "Struct UserAchievementIconFetched Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct UserAchievementIconFetched : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields AchievementName public UserAchievementIconFetched.AchievementNameType AchievementName Field Value UserAchievementIconFetched.AchievementNameType CallbackId public const int CallbackId = 1109 Field Value int GameID public CGameID GameID Field Value CGameID IconHandle public int IconHandle Field Value int Properties Achieved public bool Achieved { get; set; } Property Value bool"
  },
  "api/MarymoorStudios.Core.Steamworks.UserAchievementStored.AchievementNameType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.UserAchievementStored.AchievementNameType.html",
    "title": "Struct UserAchievementStored.AchievementNameType",
    "summary": "Struct UserAchievementStored.AchievementNameType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct UserAchievementStored.AchievementNameType Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields Length public const int Length = 128 Field Value int Operators implicit operator string(AchievementNameType) public static implicit operator string(UserAchievementStored.AchievementNameType v) Parameters v UserAchievementStored.AchievementNameType Returns string implicit operator AchievementNameType(string) public static implicit operator UserAchievementStored.AchievementNameType(string s) Parameters s string Returns UserAchievementStored.AchievementNameType"
  },
  "api/MarymoorStudios.Core.Steamworks.UserAchievementStored.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.UserAchievementStored.html",
    "title": "Struct UserAchievementStored",
    "summary": "Struct UserAchievementStored Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct UserAchievementStored : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields AchievementName public UserAchievementStored.AchievementNameType AchievementName Field Value UserAchievementStored.AchievementNameType CallbackId public const int CallbackId = 1103 Field Value int CurProgress public uint CurProgress Field Value uint GameID public ulong GameID Field Value ulong MaxProgress public uint MaxProgress Field Value uint Properties GroupAchievement public bool GroupAchievement { get; set; } Property Value bool"
  },
  "api/MarymoorStudios.Core.Steamworks.UserFavoriteItemsListChanged.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.UserFavoriteItemsListChanged.html",
    "title": "Struct UserFavoriteItemsListChanged",
    "summary": "Struct UserFavoriteItemsListChanged Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct UserFavoriteItemsListChanged : ICallResult Implements ICallResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 3407 Field Value int PublishedFileId public PublishedFileId PublishedFileId Field Value PublishedFileId Result public EResult Result Field Value EResult Properties WasAddRequest public bool WasAddRequest { get; set; } Property Value bool"
  },
  "api/MarymoorStudios.Core.Steamworks.UserStatsReceived.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.UserStatsReceived.html",
    "title": "Struct UserStatsReceived",
    "summary": "Struct UserStatsReceived Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct UserStatsReceived : ICallResult Implements ICallResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 1101 Field Value int GameID public ulong GameID Field Value ulong Result public EResult Result Field Value EResult SteamIDUser public CSteamID SteamIDUser Field Value CSteamID"
  },
  "api/MarymoorStudios.Core.Steamworks.UserStatsStored.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.UserStatsStored.html",
    "title": "Struct UserStatsStored",
    "summary": "Struct UserStatsStored Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct UserStatsStored : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 1102 Field Value int GameID public ulong GameID Field Value ulong Result public EResult Result Field Value EResult"
  },
  "api/MarymoorStudios.Core.Steamworks.UserStatsUnloaded.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.UserStatsUnloaded.html",
    "title": "Struct UserStatsUnloaded",
    "summary": "Struct UserStatsUnloaded Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct UserStatsUnloaded : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 1108 Field Value int SteamIDUser public CSteamID SteamIDUser Field Value CSteamID"
  },
  "api/MarymoorStudios.Core.Steamworks.UserSubscribedItemsListChanged.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.UserSubscribedItemsListChanged.html",
    "title": "Struct UserSubscribedItemsListChanged",
    "summary": "Struct UserSubscribedItemsListChanged Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct UserSubscribedItemsListChanged : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields AppId public AppId AppId Field Value AppId CallbackId public const int CallbackId = 3418 Field Value int"
  },
  "api/MarymoorStudios.Core.Steamworks.Utf8Span.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.Utf8Span.html",
    "title": "Class Utf8Span",
    "summary": "Class Utf8Span Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public static class Utf8Span Inheritance object Utf8Span Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods FromString(string, Span<byte>) Implicitly converts a string to encoded UTF8 bytes. public static void FromString(string s, Span<byte> span) Parameters s string The string to convert. span Span<byte> The destination for the encoded bytes. ToString(ReadOnlySpan<byte>) Implicitly converts the encoded bytes to a string. public static string ToString(ReadOnlySpan<byte> span) Parameters span ReadOnlySpan<byte> The value to convert. Returns string"
  },
  "api/MarymoorStudios.Core.Steamworks.Utf8StringList.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.Utf8StringList.html",
    "title": "Struct Utf8StringList",
    "summary": "Struct Utf8StringList Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll [NativeMarshalling(typeof(Utf8StringList.Utf8StringListMarshaller))] public readonly struct Utf8StringList Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors Utf8StringList(ReadOnlyMemory<string>) public Utf8StringList(ReadOnlyMemory<string> values) Parameters values ReadOnlyMemory<string> Properties Length public int Length { get; } Property Value int Operators implicit operator Utf8StringList(ReadOnlyMemory<string>) public static implicit operator Utf8StringList(ReadOnlyMemory<string> values) Parameters values ReadOnlyMemory<string> Returns Utf8StringList"
  },
  "api/MarymoorStudios.Core.Steamworks.ValidateAuthTicketResponse.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.ValidateAuthTicketResponse.html",
    "title": "Struct ValidateAuthTicketResponse",
    "summary": "Struct ValidateAuthTicketResponse Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct ValidateAuthTicketResponse : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields AuthSessionResponse public EAuthSessionResponse AuthSessionResponse Field Value EAuthSessionResponse CallbackId public const int CallbackId = 143 Field Value int OwnerSteamID public CSteamID OwnerSteamID Field Value CSteamID SteamID public CSteamID SteamID Field Value CSteamID"
  },
  "api/MarymoorStudios.Core.Steamworks.VolumeHasChanged.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.VolumeHasChanged.html",
    "title": "Struct VolumeHasChanged",
    "summary": "Struct VolumeHasChanged Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct VolumeHasChanged : ICallback Implements ICallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields CallbackId public const int CallbackId = 4002 Field Value int NewVolume public float NewVolume Field Value float"
  },
  "api/MarymoorStudios.Core.Steamworks.WorkshopEULAStatus.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.WorkshopEULAStatus.html",
    "title": "Struct WorkshopEULAStatus",
    "summary": "Struct WorkshopEULAStatus Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct WorkshopEULAStatus : ICallResult Implements ICallResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields Action public RTime32 Action Field Value RTime32 AppId public AppId AppId Field Value AppId CallbackId public const int CallbackId = 3420 Field Value int Result public EResult Result Field Value EResult Version public uint Version Field Value uint Properties Accepted public bool Accepted { get; set; } Property Value bool NeedsAction public bool NeedsAction { get; set; } Property Value bool"
  },
  "api/MarymoorStudios.Core.Steamworks.gameserveritem.GameDescriptionType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.gameserveritem.GameDescriptionType.html",
    "title": "Struct gameserveritem.GameDescriptionType",
    "summary": "Struct gameserveritem.GameDescriptionType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct gameserveritem.GameDescriptionType Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields Length public const int Length = 64 Field Value int Operators implicit operator string(GameDescriptionType) public static implicit operator string(gameserveritem.GameDescriptionType v) Parameters v gameserveritem.GameDescriptionType Returns string implicit operator GameDescriptionType(string) public static implicit operator gameserveritem.GameDescriptionType(string s) Parameters s string Returns gameserveritem.GameDescriptionType"
  },
  "api/MarymoorStudios.Core.Steamworks.gameserveritem.GameDirType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.gameserveritem.GameDirType.html",
    "title": "Struct gameserveritem.GameDirType",
    "summary": "Struct gameserveritem.GameDirType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct gameserveritem.GameDirType Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields Length public const int Length = 32 Field Value int Operators implicit operator string(GameDirType) public static implicit operator string(gameserveritem.GameDirType v) Parameters v gameserveritem.GameDirType Returns string implicit operator GameDirType(string) public static implicit operator gameserveritem.GameDirType(string s) Parameters s string Returns gameserveritem.GameDirType"
  },
  "api/MarymoorStudios.Core.Steamworks.gameserveritem.GameTagsType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.gameserveritem.GameTagsType.html",
    "title": "Struct gameserveritem.GameTagsType",
    "summary": "Struct gameserveritem.GameTagsType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct gameserveritem.GameTagsType Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields Length public const int Length = 128 Field Value int Operators implicit operator string(GameTagsType) public static implicit operator string(gameserveritem.GameTagsType v) Parameters v gameserveritem.GameTagsType Returns string implicit operator GameTagsType(string) public static implicit operator gameserveritem.GameTagsType(string s) Parameters s string Returns gameserveritem.GameTagsType"
  },
  "api/MarymoorStudios.Core.Steamworks.gameserveritem.MapType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.gameserveritem.MapType.html",
    "title": "Struct gameserveritem.MapType",
    "summary": "Struct gameserveritem.MapType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct gameserveritem.MapType Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields Length public const int Length = 32 Field Value int Operators implicit operator string(MapType) public static implicit operator string(gameserveritem.MapType v) Parameters v gameserveritem.MapType Returns string implicit operator MapType(string) public static implicit operator gameserveritem.MapType(string s) Parameters s string Returns gameserveritem.MapType"
  },
  "api/MarymoorStudios.Core.Steamworks.gameserveritem.ServerNameType.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.gameserveritem.ServerNameType.html",
    "title": "Struct gameserveritem.ServerNameType",
    "summary": "Struct gameserveritem.ServerNameType Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct gameserveritem.ServerNameType Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields Length public const int Length = 64 Field Value int Operators implicit operator string(ServerNameType) public static implicit operator string(gameserveritem.ServerNameType v) Parameters v gameserveritem.ServerNameType Returns string implicit operator ServerNameType(string) public static implicit operator gameserveritem.ServerNameType(string s) Parameters s string Returns gameserveritem.ServerNameType"
  },
  "api/MarymoorStudios.Core.Steamworks.gameserveritem.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.gameserveritem.html",
    "title": "Struct gameserveritem",
    "summary": "Struct gameserveritem Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct gameserveritem Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields AppId public uint AppId Field Value uint BotPlayers public int BotPlayers Field Value int GameDescription public gameserveritem.GameDescriptionType GameDescription Field Value gameserveritem.GameDescriptionType GameDir public gameserveritem.GameDirType GameDir Field Value gameserveritem.GameDirType GameTags public gameserveritem.GameTagsType GameTags Field Value gameserveritem.GameTagsType Map public gameserveritem.MapType Map Field Value gameserveritem.MapType MaxPlayers public int MaxPlayers Field Value int NetAdr public servernetadr NetAdr Field Value servernetadr Ping public int Ping Field Value int Players public int Players Field Value int ServerVersion public int ServerVersion Field Value int SteamID public CSteamID SteamID Field Value CSteamID TimeLastPlayed public uint TimeLastPlayed Field Value uint Properties DoNotRefresh public bool DoNotRefresh { get; set; } Property Value bool HadSuccessfulResponse public bool HadSuccessfulResponse { get; set; } Property Value bool Name public string Name { get; set; } Property Value string Password public bool Password { get; set; } Property Value bool Secure public bool Secure { get; set; } Property Value bool Methods From(nint) public static ref readonly gameserveritem From(nint p) Parameters p nint Returns gameserveritem"
  },
  "api/MarymoorStudios.Core.Steamworks.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.html",
    "title": "Namespace MarymoorStudios.Core.Steamworks",
    "summary": "Namespace MarymoorStudios.Core.Steamworks Classes AccountIDSerializer CGameIDSerializer CSteamIDSerializer CallbackIds Constants ISteamApps ISteamClient ISteamController ISteamFriends ISteamGameSearch ISteamGameServer ISteamGameServerStats ISteamHTMLSurface ISteamHTTP ISteamInput ISteamInventory ISteamMatchmaking ISteamMatchmakingPingResponse ISteamMatchmakingPlayersResponse ISteamMatchmakingRulesResponse ISteamMatchmakingServerListResponse ISteamMatchmakingServers ISteamMusic ISteamMusicRemote ISteamNetworking ISteamNetworkingFakeUDPPort ISteamNetworkingMessages ISteamNetworkingSockets ISteamNetworkingUtils ISteamParentalSettings ISteamParties ISteamRemotePlay ISteamRemoteStorage ISteamScreenshots ISteamTimeline ISteamUGC ISteamUser ISteamUserStats ISteamUtils ISteamVideo PlatformLimits SteamApi Represents a single Steam session. SteamErrorException SteamErrorExceptionSerializer SteamException SteamExceptionSerializer SteamInitException SteamInitExceptionSerializer SteamNativeObject Utf8Span Structs AccountID ActiveBeaconsUpdated AddAppDependencyResult AddUGCDependencyResult AppId AppProofOfPurchaseKeyResponse AppProofOfPurchaseKeyResponse.KeyType AppResumingFromSuspend AssociateWithClanResult AvailableBeaconLocationsUpdated AvatarImageLoaded BroadcastUploadStart BroadcastUploadStop CGameID CSteamID ChangeNumOpenSlotsCallback CheckFileSignature ClanOfficerListResponse ClientGameServerDeny ComputeNewPlayerCompatibilityResult ControllerActionSetHandle ControllerAnalogActionHandle ControllerDigitalActionHandle ControllerHandle CreateBeaconCallback CreateItemResult DeleteItemResult DepotId DlcInstalled DownloadClanActivityCountsResult DownloadItemResult DurationControl EncryptedAppTicketResponse EndGameResultCallback EquippedProfileItems EquippedProfileItemsChanged FavoritesListAccountsUpdated FavoritesListChanged FileDetailsResult FileDetailsResult.FileSHAType FilterTextDictionaryChanged FloatingGamepadTextInputDismissed FriendGameInfo FriendRichPresenceUpdate FriendsEnumerateFollowingList FriendsEnumerateFollowingList.SteamIDType FriendsGetFollowerCount FriendsGroupID FriendsIsFollowing GSClientAchievementStatus GSClientAchievementStatus.AchievementType GSClientApprove GSClientDeny GSClientDeny.OptionalTextType GSClientGroupStatus GSClientKick GSGameplayStats GSPolicyResponse GSReputation GSStatsReceived GSStatsStored GSStatsUnloaded GameConnectedChatJoin GameConnectedChatLeave GameConnectedClanChatMsg GameConnectedFriendChatMsg GameLobbyJoinRequested GameOverlayActivated GameRichPresenceJoinRequested GameRichPresenceJoinRequested.ConnectType GameServerChangeRequested GameServerChangeRequested.PasswordType GameServerChangeRequested.ServerType GameWebCallback GameWebCallback.URLType GamepadTextInputDismissed GetAppDependenciesResult GetAppDependenciesResult.AppIDsType GetAuthSessionTicketResponse GetOPFSettingsResult GetTicketForWebApiResponse GetTicketForWebApiResponse.TicketType GetUserItemVoteResult GetVideoURLResult GetVideoURLResult.URLType GlobalAchievementPercentagesReady GlobalStatsReceived HAuthTicket HHTMLBrowser HServerListRequest HServerQuery HSteamListenSocket HSteamNetConnection HSteamNetPollGroup HSteamPipe HSteamUser HTTPCookieContainerHandle HTTPRequestCompleted HTTPRequestDataReceived HTTPRequestHandle HTTPRequestHeadersReceived HtmlBrowserReady HtmlBrowserRestarted HtmlCanGoBackAndForward HtmlChangedTitle HtmlCloseBrowser HtmlFileOpenDialog HtmlFinishedRequest HtmlHideToolTip HtmlHorizontalScroll HtmlJSAlert HtmlJSConfirm HtmlLinkAtPosition HtmlNeedsPaint HtmlNewWindow HtmlOpenLinkInNewTab HtmlSearchResults HtmlSetCursor HtmlShowToolTip HtmlStartRequest HtmlStatusText HtmlURLChanged HtmlUpdateToolTip HtmlVerticalScroll IPCFailure IPCountry ISteamFriends.SteamIdEnumerable ISteamFriends.SteamIdEnumerator ISteamNetworkingConnectionSignaling ISteamNetworkingSignalingRecvContext InputActionSetHandle InputAnalogActionData InputAnalogActionHandle InputDigitalActionData InputDigitalActionHandle InputHandle InputMotionData ItemInstalled JoinClanChatRoomCompletionResult JoinPartyCallback JoinPartyCallback.ConnectStringType LeaderboardEntry LeaderboardFindResult LeaderboardScoreUploaded LeaderboardScoresDownloaded LeaderboardUGCSet LicensesUpdated LobbyChatMsg LobbyChatUpdate LobbyCreated LobbyDataUpdate LobbyEnter LobbyGameCreated LobbyInvite LobbyKicked LobbyMatchList LowBatteryPower MarketEligibilityResponse MatchMakingKeyValuePair MatchMakingKeyValuePair.KeyType MatchMakingKeyValuePair.ValueType MatchMakingKeyValuePairList MicroTxnAuthorizationResponse MusicPlayerRemoteToFront MusicPlayerRemoteWillActivate MusicPlayerRemoteWillDeactivate MusicPlayerSelectsPlaylistEntry MusicPlayerSelectsQueueEntry MusicPlayerWantsLooped MusicPlayerWantsPause MusicPlayerWantsPlay MusicPlayerWantsPlayNext MusicPlayerWantsPlayPrevious MusicPlayerWantsPlayingRepeatStatus MusicPlayerWantsShuffled MusicPlayerWantsVolume MusicPlayerWillQuit NewUrlLaunchParameters NumberOfCurrentPlayers OverlayBrowserProtocolNavigation OverlayBrowserProtocolNavigation.URIType P2PSessionConnectFail P2PSessionRequest P2PSessionState PartyBeaconID PersonaStateChange PlaybackStatusHasChanged PublishedFileId PublishedFileUpdateHandle RTime32 RemotePlayCursorID RemotePlayInput RemotePlayInput.PaddingType RemotePlayInputKey RemotePlayInputMouseMotion RemotePlayInputMouseWheel RemotePlaySessionID RemoteStorageDeletePublishedFileResult RemoteStorageDownloadUGCResult RemoteStorageDownloadUGCResult.FileNameType RemoteStorageEnumeratePublishedFilesByUserActionResult RemoteStorageEnumeratePublishedFilesByUserActionResult.PublishedFileIdType RemoteStorageEnumeratePublishedFilesByUserActionResult.RTimeUpdatedType RemoteStorageEnumerateUserPublishedFilesResult RemoteStorageEnumerateUserPublishedFilesResult.PublishedFileIdType RemoteStorageEnumerateUserSharedWorkshopFilesResult RemoteStorageEnumerateUserSharedWorkshopFilesResult.PublishedFileIdType RemoteStorageEnumerateUserSubscribedFilesResult RemoteStorageEnumerateUserSubscribedFilesResult.PublishedFileIdType RemoteStorageEnumerateUserSubscribedFilesResult.RTimeSubscribedType RemoteStorageEnumerateWorkshopFilesResult RemoteStorageEnumerateWorkshopFilesResult.PublishedFileIdType RemoteStorageEnumerateWorkshopFilesResult.ScoreType RemoteStorageFileReadAsyncComplete RemoteStorageFileShareResult RemoteStorageFileShareResult.FilenameType RemoteStorageFileWriteAsyncComplete RemoteStorageGetPublishedFileDetailsResult RemoteStorageGetPublishedFileDetailsResult.DescriptionType RemoteStorageGetPublishedFileDetailsResult.FileNameType RemoteStorageGetPublishedFileDetailsResult.TagsType RemoteStorageGetPublishedFileDetailsResult.TitleType RemoteStorageGetPublishedFileDetailsResult.URLType RemoteStorageGetPublishedItemVoteDetailsResult RemoteStorageLocalFileChange RemoteStoragePublishFileProgress RemoteStoragePublishFileResult RemoteStoragePublishedFileDeleted RemoteStoragePublishedFileSubscribed RemoteStoragePublishedFileUnsubscribed RemoteStoragePublishedFileUpdated RemoteStorageSetUserPublishedFileActionResult RemoteStorageSubscribePublishedFileResult RemoteStorageUnsubscribePublishedFileResult RemoteStorageUpdatePublishedFileResult RemoteStorageUpdateUserPublishedItemVoteResult RemoteStorageUserVoteDetails RemoveAppDependencyResult RemoveUGCDependencyResult RequestPlayersForGameFinalResultCallback RequestPlayersForGameProgressCallback RequestPlayersForGameResultCallback ReservationNotificationCallback SNetListenSocket SNetSocket ScePadTriggerEffectParam ScreenshotHandle ScreenshotReady ScreenshotRequested SearchForGameProgressCallback SearchForGameResultCallback SetUserItemVoteResult SocketStatusCallback StartPlaytimeTrackingResult SteamAPICall SteamAPICallCompleted SteamDatagramGameCoordinatorServerLogin SteamDatagramGameCoordinatorServerLogin.AppDataType SteamDatagramHostedAddress SteamDatagramHostedAddress.DataType SteamDatagramRelayAuthTicket SteamDatagramRelayAuthTicket.ExtraField SteamDatagramRelayAuthTicket.ExtraField.NameType SteamDatagramRelayAuthTicket.ExtraField.StringValueType SteamDatagramRelayAuthTicket.ExtraFieldsType SteamIPAddress SteamIPAddress.IPv6Type SteamInputActionEvent SteamInputActionEvent.AnalogAction_t SteamInputActionEvent.DigitalAction_t SteamInputConfigurationLoaded SteamInputDeviceConnected SteamInputDeviceDisconnected SteamInputGamepadSlotChange SteamInventoryDefinitionUpdate SteamInventoryEligiblePromoItemDefIDs SteamInventoryFullUpdate SteamInventoryRequestPricesResult SteamInventoryRequestPricesResult.CurrencyType SteamInventoryResult SteamInventoryResultReady SteamInventoryStartPurchaseResult SteamInventoryUpdateHandle SteamItemDef SteamItemDetails SteamItemInstanceID SteamLeaderboard SteamLeaderboardEntries SteamNetAuthenticationStatus SteamNetAuthenticationStatus.DebugMsgType SteamNetConnectionInfo SteamNetConnectionInfo.ConnectionDescriptionType SteamNetConnectionInfo.EndDebugType SteamNetConnectionInfo.ReservedType SteamNetConnectionRealTimeLaneStatus SteamNetConnectionRealTimeLaneStatus.ReservedType SteamNetConnectionRealTimeStatus SteamNetConnectionRealTimeStatus.ReservedType SteamNetConnectionStatusChangedCallback SteamNetworkPingLocation SteamNetworkPingLocation.DataType SteamNetworkingConfigValue SteamNetworkingFakeIPResult SteamNetworkingFakeIPResult.PortsType SteamNetworkingIPAddr SteamNetworkingIPAddr.IPv6Type SteamNetworkingIdentity SteamNetworkingIdentity.UnknownRawStringType SteamNetworkingMessage SteamNetworkingMessagePtr SteamNetworkingMessagesSessionFailed SteamNetworkingMessagesSessionRequest SteamNetworkingMicroseconds SteamNetworkingPOPID SteamParamStringArray SteamParentalSettingsChanged SteamPartyBeaconLocation SteamRelayNetworkStatus SteamRelayNetworkStatus.DebugMsgType SteamRemotePlaySessionConnected SteamRemotePlaySessionDisconnected SteamRemotePlayTogetherGuestInvite SteamRemotePlayTogetherGuestInvite.ConnectURLType SteamServerConnectFailure SteamServersConnected SteamServersDisconnected SteamShutdown SteamTimelineEventRecordingExists SteamTimelineGamePhaseRecordingExists SteamTimelineGamePhaseRecordingExists.PhaseIDType SteamUGCDetails SteamUGCDetails.DescriptionType SteamUGCDetails.FileNameType SteamUGCDetails.TagsType SteamUGCDetails.TitleType SteamUGCDetails.URLType SteamUGCQueryCompleted SteamUGCQueryCompleted.NextCursorType SteamUGCRequestUGCDetailsResult StopPlaytimeTrackingResult StoreAuthURLResponse StoreAuthURLResponse.URLType SubmitItemUpdateResult SubmitPlayerResultResultCallback TimedTrialStatus TimelineEventHandle UGCFileWriteStreamHandle UGCHandle UGCQueryHandle UGCUpdateHandle UnreadChatMessagesChanged UserAchievementIconFetched UserAchievementIconFetched.AchievementNameType UserAchievementStored UserAchievementStored.AchievementNameType UserFavoriteItemsListChanged UserStatsReceived UserStatsStored UserStatsUnloaded UserSubscribedItemsListChanged Utf8StringList ValidateAuthTicketResponse VolumeHasChanged WorkshopEULAStatus gameserveritem gameserveritem.GameDescriptionType gameserveritem.GameDirType gameserveritem.GameTagsType gameserveritem.MapType gameserveritem.ServerNameType servernetadr Interfaces ICallResult A structure that is used to resolve a pending CallResult promise. ICallback A structure that is passed as an argument to a SIP-bound CallbackAction<T>. IGlobalCallback Like a ICallback except that action dispatch is FREE-THREADED instead of SIP-bound. Enums AudioPlayback_Status EAccountType EActivateGameOverlayToWebPageMode EAuthSessionResponse EBeginAuthSessionResult EBetaBranchFlags EBroadcastUploadResult EChatEntryType EChatMemberStateChange EChatRoomEnterResponse EChatSteamIDInstanceFlags ECheckFileSignature ECommunityProfileItemProperty ECommunityProfileItemType EControllerActionOrigin EControllerHapticLocation EControllerHapticType EDenyReason EDurationControlNotification EDurationControlOnlineState EDurationControlProgress EFloatingGamepadTextInputMode EFriendFlags EFriendRelationship EGameSearchErrorCode EGamepadTextInputLineMode EGamepadTextInputMode EHTTPMethod EHTTPStatusCode EInputActionOrigin EInputSourceMode EItemPreviewType EItemState EItemStatistic EItemUpdateStatus ELeaderboardDataRequest ELeaderboardDisplayType ELeaderboardSortMethod ELeaderboardUploadScoreMethod ELobbyComparison ELobbyDistanceFilter ELobbyType EMarketNotAllowedReasonFlags EMatchMakingServerResponse ENotificationPosition EOverlayToStoreFlag EP2PSend EP2PSessionError EParentalFeature EPersonaChange EPersonaState EPlayerResult ERemotePlayInputType ERemotePlayKeyModifier ERemotePlayMouseButton ERemotePlayMouseWheelDirection ERemotePlayScancode ERemoteStorageFilePathType ERemoteStorageLocalFileChange ERemoteStoragePlatform ERemoteStoragePublishedFileVisibility EResult ESNetSocketConnectionType ESNetSocketState EServerMode ESteamAPICallFailure ESteamAPIInitResult ESteamControllerLEDFlag ESteamControllerPad ESteamDeviceFormFactor ESteamIPType ESteamIPv6ConnectivityProtocol ESteamIPv6ConnectivityState ESteamInputActionEventType ESteamInputConfigurationEnableType ESteamInputGlyphSize ESteamInputGlyphStyle ESteamInputLEDFlag ESteamInputType ESteamItemFlags ESteamNetConnectionEnd ESteamNetworkingAvailability ESteamNetworkingConfigDataType ESteamNetworkingConfigScope ESteamNetworkingConfigValue ESteamNetworkingConnectionState ESteamNetworkingFakeIPType ESteamNetworkingGetConfigValueResult ESteamNetworkingIdentityType ESteamNetworkingSocketsDebugOutputType ESteamPartyBeaconLocationData ESteamPartyBeaconLocationType ETextFilteringContext ETimelineEventClipPriority ETimelineGameMode EUGCContentDescriptorID EUGCMatchingUGCType EUGCQuery EUGCReadAction EUniverse EUserHasLicenseForAppResult EUserUGCList EUserUGCListSortOrder EVRScreenshotType EVoiceResult EWorkshopEnumerationType EWorkshopFileAction EWorkshopFileType EWorkshopVideoProvider EWorkshopVote EXboxOrigin IPCFailure.EFailureType ISteamHTMLSurface.EHTMLKeyModifiers ISteamHTMLSurface.EHTMLMouseButton ISteamHTMLSurface.EHTMLMouseCursor RequestPlayersForGameResultCallback.PlayerAcceptState SteamDatagramRelayAuthTicket.ExtraField.EType Delegates CallbackAction<T> A callback action. SteamApi.NativeDiagnosticsAction SteamEventAction<T> A steam event action."
  },
  "api/MarymoorStudios.Core.Steamworks.servernetadr.html": {
    "href": "api/MarymoorStudios.Core.Steamworks.servernetadr.html",
    "title": "Struct servernetadr",
    "summary": "Struct servernetadr Namespace MarymoorStudios.Core.Steamworks Assembly MarymoorStudios.Core.Steamworks.dll public struct servernetadr : IEquatable<servernetadr>, IComparable<servernetadr> Implements IEquatable<servernetadr> IComparable<servernetadr> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors servernetadr(uint, ushort, ushort) public servernetadr(uint ip, ushort queryPort, ushort connectionPort) Parameters ip uint queryPort ushort connectionPort ushort Methods CompareTo(servernetadr) Value-based comparison. public readonly int CompareTo(servernetadr netadr) Parameters netadr servernetadr Returns int Equals(servernetadr) Value-based equality. public readonly bool Equals(servernetadr other) Parameters other servernetadr Returns bool Equals(object?) public override readonly bool Equals(object? obj) Parameters obj object Returns bool GetConnectionAddressString() public readonly string GetConnectionAddressString() Returns string GetHashCode() public override readonly int GetHashCode() Returns int GetQueryAddressString() public readonly string GetQueryAddressString() Returns string ToString() public override readonly string ToString() Returns string Operators operator ==(servernetadr, servernetadr) Value-based equality. public static bool operator ==(servernetadr left, servernetadr right) Parameters left servernetadr right servernetadr Returns bool operator >(servernetadr, servernetadr) Value-based comparison. public static bool operator >(servernetadr left, servernetadr right) Parameters left servernetadr right servernetadr Returns bool operator >=(servernetadr, servernetadr) Value-based comparison. public static bool operator >=(servernetadr left, servernetadr right) Parameters left servernetadr right servernetadr Returns bool operator !=(servernetadr, servernetadr) Value-based equality. public static bool operator !=(servernetadr left, servernetadr right) Parameters left servernetadr right servernetadr Returns bool operator <(servernetadr, servernetadr) Value-based comparison. public static bool operator <(servernetadr left, servernetadr right) Parameters left servernetadr right servernetadr Returns bool operator <=(servernetadr, servernetadr) Value-based comparison. public static bool operator <=(servernetadr left, servernetadr right) Parameters left servernetadr right servernetadr Returns bool"
  },
  "api/MarymoorStudios.Core.UpgradableLockScope.html": {
    "href": "api/MarymoorStudios.Core.UpgradableLockScope.html",
    "title": "Struct UpgradableLockScope",
    "summary": "Struct UpgradableLockScope Namespace MarymoorStudios.Core Assembly MarymoorStudios.Core.dll An upgradable read-lock scope for use with ReaderWriterLockSlim. public readonly struct UpgradableLockScope : IDisposable Implements IDisposable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Remarks The lock is upgraded by acquiring a write-lock while this upgradable read-lock is held. See WriteLockScope. Constructors UpgradableLockScope(ReaderWriterLockSlim) Acquires an upgradable read-lock which is released on dispose. public UpgradableLockScope(ReaderWriterLockSlim m) Parameters m ReaderWriterLockSlim Methods Dispose() Releases the held lock. public void Dispose()"
  },
  "api/MarymoorStudios.Core.WaitHandleExtensions.html": {
    "href": "api/MarymoorStudios.Core.WaitHandleExtensions.html",
    "title": "Class WaitHandleExtensions",
    "summary": "Class WaitHandleExtensions Namespace MarymoorStudios.Core Assembly MarymoorStudios.Core.dll Extensions to the standard WaitHandle. public static class WaitHandleExtensions Inheritance object WaitHandleExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods WaitOneAsync(WaitHandle, CancellationToken) Equivalent to a call to WaitOne() without blocking a thread. public static Task WaitOneAsync(this WaitHandle handle, CancellationToken cancel = default) Parameters handle WaitHandle The handle to wait on. cancel CancellationToken Cancellation Token. Returns Task A task that resolves when the wait is complete."
  },
  "api/MarymoorStudios.Core.WriteLockScope.html": {
    "href": "api/MarymoorStudios.Core.WriteLockScope.html",
    "title": "Struct WriteLockScope",
    "summary": "Struct WriteLockScope Namespace MarymoorStudios.Core Assembly MarymoorStudios.Core.dll A write-lock scope for use with ReaderWriterLockSlim. public readonly struct WriteLockScope : IDisposable Implements IDisposable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors WriteLockScope(ReaderWriterLockSlim) Acquires a write-lock which is released on dispose. public WriteLockScope(ReaderWriterLockSlim m) Parameters m ReaderWriterLockSlim Methods Dispose() Releases the held lock. public void Dispose()"
  },
  "api/MarymoorStudios.Core.html": {
    "href": "api/MarymoorStudios.Core.html",
    "title": "Namespace MarymoorStudios.Core",
    "summary": "Namespace MarymoorStudios.Core Classes CertificateExtensions Contract Used to check contract invariants in either Debug-only (Assert) or Debug and Release (Requires, Invariant, etc.). Contract failures will attempt to break into the debugger, will trace the error, and will throw a ContractViolationException. Crc32 CRC Generator. EnumTraits<TEnum> GcNotify Notifies when garbage collection occurs. Linear LinqExtensions MathExtensions MemoryPool<T> A pool of memory blocks. MurmurHash3 MurmurHash3 for x64 (Little Endian). RandomExtensions SlabMemoryPool<T> SpanBase58Extensions Base58 Encoder. SpanHexExtensions WaitHandleExtensions Extensions to the standard WaitHandle. Structs OwnedMem<T> A capability for the exclusive ownership rights to an underlying memory. ReadLockScope A read-lock scope for use with ReaderWriterLockSlim. UpgradableLockScope An upgradable read-lock scope for use with ReaderWriterLockSlim. WriteLockScope A write-lock scope for use with ReaderWriterLockSlim."
  }
}